         
 
 
 
 shengxian/actions/addr.js 
 

export const addrReset = data => ({
  type: 'ADDR_RESET',
  ...data,
})
         
 
 
 
 shengxian/actions/app.js 
 
import { get, setStore } from '@boluome/common-lib'
// import { Loading } from '@boluome/oto_saas_web_app_component'
// import { getLocationGaode } from 'business'

export const appReset = data => ({
  type: 'ADD_RESET',
  ...data,
})

// 查询子分类
// export const getsubCategorie = (channel, areaId, categoryId) => dispatch => {
//   get('/shengxian/v1/commodity/subcategories', { channel, areaId, categoryId }).then(({ code, data, message }) => {
//     if (code === 0) {
//       dispatch(
//        appReset({
//          subcategoriesData: data,
//        })
//       )
//     } else {
//       console.log(message)
//     }
//   })
// }

// 查询分类
export const getCategorieAfter = (channel, areaId) => dispatch => {
  setStore('areaId', areaId, 'session')
  get('/shengxian/v1/categories', { channel, areaId }).then(({ code, data, message }) => {
    if (code === 0) {
      dispatch(
       appReset({
         categoriesData: '',
       })
      )
      const categoriesData = data.filter(e => {
        if (e.subcategoryList.length > 0) {
          e.areaId = `${ areaId }${ e.id }`
          return true
        }
        return false
      })
      if (categoriesData.length > 0) {
        dispatch(
         appReset({
           areaId,
           categoriesData,
           offset:            0,
           categoryId:        categoriesData[0].id,
           keys:              categoriesData[0].areaId,
           subcategoriesData: categoriesData[0].subcategoryList,
           categoryIdList:    categoriesData[0].subcategoryList[0].idList,
         })
        )
        setStore('categoryId', categoriesData[0].id, 'session')
        setStore('categoryIdList', categoriesData[0].subcategoryList[0].idList, 'session')
      } else {
        dispatch(
         appReset({
           areaId,
           categoriesData,
         })
        )
      }
    } else {
      console.log(message)
    }
  })
}


// 查询 areaId -> 分类
export const getCategorie = (channel, cityName, cityArr) => dispatch => {
  let areaId = ''
  for (let i = 0; i < cityArr.length; i++) {
    if (cityArr[i].name === cityName) {
      areaId = cityArr[i].channelCityId
      break
    }
  }
  dispatch(getCategorieAfter(channel, areaId))
}
         
 
 
 
 shengxian/actions/detail.js 
 

export const detReset = data => ({
  type: 'DET_RESET',
  ...data,
})
         
 
 
 
 shengxian/actions/index.js 
 

         
 
 
 
 shengxian/actions/order.js 
 
import { send, getStore } from '@boluome/common-lib'
import { Modal } from 'antd-mobile'

const alert = Modal.alert

export const derReset = data => ({
  type: 'DER_RESET',
  ...data,
})

export const showAlert = info => {
  alert('温馨提示', info, [
    {
      text:    '我知道了',
      onPress: () => {
        console.log(123)
      },
    },
  ])
}

// 配送日期函数
export const getDate = time => {
  const date = new Date()
  const timeArr = time ? time.split('/') : date.toLocaleDateString().split('/')
  const dateArr = []
  for (let i = 0; i < 7; i++) {
    date.setFullYear(parseInt(timeArr[0], 10), parseInt(timeArr[1], 10) - 1, parseInt(timeArr[2], 10) + i)
    const tex = date.toLocaleDateString()
    dateArr.push({
      label: tex,
      value: tex,
    })
  }
  return dateArr
}

// 获取配送费
export const getFreight = (contactId, commodityList) => dispatch => {
  send('/shengxian/v1/freight', {
    channel:        getStore('channel', 'session'),
    customerUserId: getStore('customerUserId', 'session'),
    contactId,
    commodityList,
  }).then(({ code, data, message }) => {
    if (code === 0) {
      dispatch(
        derReset({
          submit:       true,
          freight:      data,
          dateArr:      getDate(data.deliveryDate),
          deliveryDate: [getDate(data.deliveryDate)[0].value],
        })
      )
    } else {
      showAlert(message || '获取配送费失败')
      const dateA = getDate()
      dispatch(
        derReset({
          submit:       false,
          dateArr:      dateA,
          deliveryDate: [dateA[0].value],
        })
      )
      console.log(message)
    }
  })
}
         
 
 
 
 shengxian/actions/orderDetails.js 
 
export const odlReset = data => ({
  type: 'ODL_RESET',
  ...data,
})
         
 
 
 
 shengxian/actions/sear.js 
 
export const seaReset = data => ({
  type: 'SEA_RESET',
  ...data,
})
         
 
 
 
 shengxian/components/addr.js 
 
import React from 'react'
import { Contact } from '@boluome/oto_saas_web_app_component'

const Addr = addr => {
  const { goOrder, contact } = addr
  console.log(contact)
  if (contact) {
    return (
      <div className='addr'>
        <Contact chooseContact={ contact } source='shengxian' handleChange={ res => { goOrder(res.contactId) } } JumpFn='true' />
      </div>
    )
  }
  return <div />
}

export default Addr
         
 
 
 
 shengxian/components/app.js 
 
import React from 'react'
import { Tabs, Icon } from 'antd-mobile'
import { Listview, SlidePage, Mask, CitySearch, UserCenter } from '@boluome/oto_saas_web_app_component'
import { getStore, parseLocName } from '@boluome/common-lib'
// import { vconsole } from 'vconsole'
import SelectTab from './selectTab'
import Cart from './cart'

import '../style/app.scss'
import noshop from '../img/noshop.png'

const TabPane = Tabs.TabPane

const App = app => {
  const { tip, handleTip, subcategoriesData, cartdata, categoriesData, callback, keys, handleSelectsub, areaId, limit, offset, categoryIdList, getCommodities, goOrder, delBuycart } = app
  if (categoriesData && categoriesData.length > 0) {
    return (
      <div className='app'>
        <UserCenter categoryCode='shengxian' orderTypes='shengxian' />
        { tip && <p className='tip' ref={ node => { if (node) { console.log('tip', tip, window.getComputedStyle(node).height) } } }><Icon onClick={ () => handleTip() } type={ require('svg/shengxian/cha.svg') } />因城市所售商品不同，请根据您的收货地址选择城市</p> }
        <Title app={ app } />
        <div className='tabs'>
          <Tabs defaultActiveKey={ keys } onChange={ key => { callback(key, categoriesData) } } pageSize={ 3 } animated={ false }>
            { categoriesData.map(o => (
              <TabPane tab={ `${ o.name }` } key={ o.areaId }>
                <div />
              </TabPane>
            )) }
          </Tabs>
        </div>
        { subcategoriesData && <SelectTab data={ subcategoriesData } categoryIdList={ categoryIdList } selectSub={ handleSelectsub } /> }
        <div className='productList' style={ tip ? { height: 'calc(100% - 4.21rem)' } : { height: 'calc(100% - 3.66rem)' } }>
          { subcategoriesData && <Listview
            noOneComponent={ <Noshop /> }
            listItem={ <Listviewli app={ app } /> }
            onFetch={ getCommodities }
            limit={ limit }
            offset={ offset }
            fetchData={{ channel: getStore('channel', 'session'), areaId, categoryIdList }}
          /> }
        </div>
        <Cart listItem={ <Listviewli cart={ 1 } app={ app } /> } cartdata={ cartdata } submit={ goOrder } delBuycart={ delBuycart } />
      </div>
    )
  } else if (categoriesData && categoriesData.length === 0) {
    return (
      <div className='app'>
        <UserCenter categoryCode='shengxian' orderTypes='shengxian' />
        <Title app={ app } />
        <div className='noServ'>
          <div className='empShop'>
            <div>
              <Icon type={ require('svg/shengxian/noshop.svg') } />
              <p>该城市尚未提供此服务<br />敬请期待</p>
            </div>
          </div>
        </div>
        <Cart listItem={ <Listviewli cart={ 1 } app={ app } /> } cartdata={ cartdata } submit={ goOrder } delBuycart={ delBuycart } />
      </div>
    )
  }
  return (<div className='cinemas' style={{ display: 'none' }}>加载中</div>)
}

const Listviewli = ({ data, app, cart }) => {
  const { areaId, goDetail, cartdata, setBuycart } = app
  return (
    <div className='listitem_shop' onClick={ () => goDetail(areaId, data) }>
      { data.isBuy === false && <div className='list_mask' onClick={ e => e.stopPropagation() } /> }
      <div className='pic' style={ cart ? { width: '0.8rem', height: '0.8rem' } : {} }><img alt='生鲜' style={ cart ? { width: '0.8rem', height: '0.8rem' } : {} } src={ data.commodityPicList[0].picUrl } /></div>

      <div className='info' style={ cart ? { width: 'calc(100% - 0.8rem)', padding: '0 0 0 0.28rem' } : {} }>
        <h1>{ data.commodityName }</h1>
        { !cart && <p>{ data.spec }</p> }
        <div className='bottomPart'>
          <p>¥{ data.price }</p>
          <div className='buyBtn'>
            <Buybtn cartdata={ cartdata } setBuycart={ setBuycart } data={ data } />
          </div>
        </div>
      </div>
    </div>
  )
}

const Buybtn = ({ cartdata, data, setBuycart }) => {
  let index = ''
  for (let i = 0; i < cartdata.length; i++) {
    if ((cartdata[i].commodityCode).split(',')[0] === (data.commodityCode).split(',')[0]) {
      index = i
      break
    }
  }
  const buyQuantity = (typeof index === 'number') ? cartdata[index].buyQuantity : ''
  return (
    <div className='buyBtn'>
      <Icon type={ (buyQuantity === 20) ? require('svg/shengxian/addh.svg') : require('svg/shengxian/add.svg') } onClick={ e => setBuycart(e, data, 'add') } />
      <span>{ buyQuantity }</span>
      { (typeof index === 'number') && <Icon type={ require('svg/shengxian/sub.svg') } onClick={ e => setBuycart(e, data, 'sub') } /> }
    </div>
  )
}

// noONe
const Noshop = () => {
  return (
    <div className='noServ'>
      <div className='empShop'>
        <img src={ noshop } alt='无商品' />
        <p>商品都卖完了<br />下次记得早点来噢~</p>
      </div>
    </div>
  )
}

// top组件
const Title = ({ app }) => {
  const { handleCity, cityName, cityArr, goSear } = app
  return (
    <div className='top'>
      <span className='locCity'
        onClick={ () => {
          return (Mask(
            <SlidePage target='right' showClose={ false } >
              <CitySearch localCity={ getStore('currentPosition', 'session') ? parseLocName(getStore('currentPosition', 'session').city) : cityName }
                categoryCode='shengxian'
                handleCityData={ res => { handleCity(res) } }
                api={ cityArr }
              />
            </SlidePage>,
            { mask: false }
          ))
        } }
      >
        { cityName }
        <Icon type={ require('svg/shengxian/arrowdown.svg') } />
      </span>
      <Icon
        className='search'
        type={ require('svg/shengxian/sousuo.svg') }
        onClick={ () => { goSear() } }
      />
    </div>
  )
}
export default App
         
 
 
 
 shengxian/components/cart.js 
 

import React, { Component } from 'react'
import { Icon, Modal } from 'antd-mobile'

import '../style/cart.scss'

const alert = Modal.alert

export default class Cart extends Component {
  static defaultProps = {
  }
  constructor(props) {
    super(props)
    this.state = {
      cartdata: this.props.cartdata,
    }
    this.wrap = null
    this.mask = null
    this.wrapHeight = 0
    this.empty = false
  }

  handleSwitch() {
    const { cartdata } = this.state
    const top = parseFloat(window.getComputedStyle(this.wrap).top, 10)
    if (top || cartdata.length === 0) {
      this.wrap.style.transition = '0.15s ease'
      this.wrap.style.top = 0
      this.mask.style.top = 0
    } else {
      this.wrap.style.transition = '0.15s ease'
      this.wrap.style.top = parseFloat(this.wrapHeight, 10) * (-1)
      this.mask.style.top = parseFloat(window.getComputedStyle(document.querySelector('body')).height, 10) * (-1)
    }
  }

  handlesubmit(e, submit) {
    e.stopPropagation()
    if (submit) {
      submit()
    }
  }

  componentWillReceiveProps(nextProps) {
    // 重置
    const preData = this.state.cartdata
    const { cartdata } = nextProps
    if (preData !== cartdata) {
      this.empty = false
      this.setState({ cartdata }, () => {
        if (cartdata.length === 0) {
          this.handleSwitch()
        } else if (parseFloat(window.getComputedStyle(this.wrap).top, 10)) {
          this.wrap.style.transition = ''
          this.wrap.style.top = parseFloat(this.wrapHeight, 10) * (-1)
        }
      })
    }
  }

  render() {
    const { cartdata } = this.state
    const { listItem, submit, delBuycart } = this.props
    let sum = 0
    let quantity = 0
    this.empty = !(cartdata.length > 0)
    for (let i = 0; i < cartdata.length; i++) {
      sum += cartdata[i].price * cartdata[i].buyQuantity
      quantity += cartdata[i].buyQuantity
      if (!cartdata[i].isBuy) {
        this.empty = true
      }
    }
    sum = parseFloat(sum, 10).toFixed(2)
    return (
      <div className='buy_cart'>
        <div className='cart_mask' onClick={ () => this.handleSwitch() } ref={ node => { if (node) { this.mask = node; node.style.height = window.getComputedStyle(document.querySelector('body')).height } } } />
        <div className='cart_listwarp' ref={ node => { if (node) { this.wrap = node; this.wrapHeight = window.getComputedStyle(node).height } } }>
          <p className='cart_titile'>
            <span>已选商品</span>
            { this.empty && <span className='clear_noeff' onClick={ () => alert('删除无效商品', '确认删除无效商品吗？', [
              { text: '取消', onPress: () => console.log('cancel') },
              { text: '确定', onPress: () => { delBuycart('clear') } },
            ]) }
            >删除失效商品</span> }
            <span className='delete_icon'><Icon type={ require('svg/shengxian/delete.svg') } onClick={ () => alert('清空', '确认清空购物车吗？', [
              { text: '取消', onPress: () => console.log('cancel') },
              { text: '确定', onPress: () => { delBuycart() } },
            ]) }
            />清空</span>
          </p>
          <div>
            {
              cartdata.map((o, i) => React.cloneElement(listItem, { data: o, key: `${ o.commodityName }${ i + 1 }` }))
            }
          </div>
        </div>
        <div className='cart_sum' onClick={ () => this.handleSwitch() }>
          <div className='cart_info'>
            <div className='cart_icon'>
              <Icon type={ !this.empty ? require('svg/shengxian/cart.svg') : require('svg/shengxian/cartB.svg') } />
              { (cartdata.length > 0) && <span className='cart_badge'>{ quantity }</span> }
            </div>
            <div className='cart_price'>
              <p className='sum_price'>￥{ sum }</p>
              <p>不含运费</p>
            </div>
          </div>
          <div className='cart_btn' style={ !this.empty ? { background: '#ffab00' } : { background: '#cccccc' } } onClick={ e => { if (!this.empty) { this.handlesubmit(e, submit) } } }>去结算</div>
        </div>
      </div>
    )
  }
}
         
 
 
 
 shengxian/components/city.js 
 
import React from 'react'
import { parseLocName, getStore } from '@boluome/common-lib'
import { CitySearch } from '@boluome/oto_saas_web_app_component'

const City = ({ cityArr, handleCityChange }) => (
  <CitySearch localCity={ parseLocName(getStore('currentPosition', 'session').city) }
    categoryCode='dianying'
    handleCityData={ res => { handleCityChange(res) } }
    api={ cityArr }
  />
)

export default City
         
 
 
 
 shengxian/components/detail.js 
 
import React from 'react'
import { Carousel, WhiteSpace, Icon } from 'antd-mobile'
import Cart from './cart'
import '../style/detail.scss'

const Detail = detail => {
  const { picDatiles, detailData, specData, cartdata, setBuycart, num, detMask, handleSwitchmask, setpreBuy, setpreCart, handleSelectspec, goOrder, delBuycart } = detail
  if (detailData) {
    return (
      <div className='detail'>
        { detMask && <div className='deMask' onClick={ () => { handleSwitchmask(detMask) } } /> }
        { detMask && <div className='deInfo'>
          <h2>{ specData.value.commodityName }</h2>
          <p>规格</p>
          <p className='specInfo'>{
            detailData.specifications.map((o, i) => (
              <span key={ `spec${ i + 1 }` } onClick={ () => { handleSelectspec(o) } } className={ (o.value.commodityCode === specData.value.commodityCode) && 'selectSpec' }>
                { o.name }
              </span>
            )) }</p>
          <div className='specNum'>购买数量
            <div className='buyBtn'>
              <Icon onClick={ e => setpreBuy(e, num, true) } type={ (num === 20) ? require('svg/shengxian/addh.svg') : require('svg/shengxian/add.svg') } />
              <span>{ num }</span>
              <Icon onClick={ e => setpreBuy(e, num, false) } type={ (num === 1) ? require('svg/shengxian/subh.svg') : require('svg/shengxian/sub.svg') } />
            </div>
          </div>
          <div className='addSpec'>￥{ specData.value.price }<span onClick={ () => { setpreCart(specData.value, num) } }>加入购物车</span></div>
        </div> }
        <div className='detailWrap'>
          <Carousel
            className='my-carousel'
            autoplay={ false }
            infinite
            selectedIndex={ 1 }
            swipeSpeed={ 35 }
            beforeChange={ (from, to) => console.log(`slide from ${ from } to ${ to }`) }
            afterChange={ index => console.log('slide to', index) }
          >
            { specData.value.commodityPicList.map((o, i) => (
              <a key={ `pic${ i + 1 }` } style={{ height: 750 }}>
                <img
                  style={{ height: '7.5rem', width: '100%' }}
                  src={ o.picUrl }
                  alt='icon'
                />
              </a>
            )) }
          </Carousel>
          <div className='detailInfo'>
            <h2>{ specData.value.commodityName }{ (detailData.specifications.length > 1) && <span className='specTip'>多规格</span> }</h2>
            <div>￥{ specData.value.price }{ (detailData.specifications.length > 1) ? <span className='addCart' onClick={ () => { handleSwitchmask(detMask) } }>加入购物车</span> : <Buybtn cartdata={ cartdata } setBuycart={ setBuycart } data={ detailData } /> }</div>
          </div>

          <div className='otherInfo'>
            <p className='place'>产地<span>{ specData.value.placeOfOrigin }</span></p>
            <p dangerouslySetInnerHTML={{ __html: specData.value.deliveryTips }} />
          </div>
          <WhiteSpace size='lg' />
          { picDatiles && <div className='picDatiles'>
            <p>商品详情</p>
            <div dangerouslySetInnerHTML={{ __html: picDatiles }} />
          </div> }
        </div>
        <Cart listItem={ <Listviewli cart={ 1 } app={ detail } /> } cartdata={ cartdata } submit={ goOrder } delBuycart={ delBuycart } />
      </div>
    )
  }
  return (<p style={{ display: 'none' }}>数据为空</p>)
}

const Listviewli = ({ data, app, cart }) => {
  const { areaId, goDetail, cartdata, setBuycart } = app
  return (
    <div className='listitem' onClick={ () => goDetail(areaId, data) }>
      <div className='pic' style={ cart ? { width: '0.8rem', height: '0.8rem' } : {} }><img alt='生鲜' style={ cart ? { width: '0.8rem', height: '0.8rem' } : {} } src={ data.commodityPicList[0].picUrl } /></div>

      <div className='info' style={ cart ? { width: 'calc(100% - 0.8rem)', padding: '0 0 0 0.28rem' } : {} }>
        <h1>{ data.commodityName }</h1>
        { !cart && <p>{ data.spec }</p> }

        <div className='bottomPart'>
          <p>¥{ data.price }</p>
          <Buybtn cartdata={ cartdata } setBuycart={ setBuycart } data={ data } />
        </div>
      </div>
    </div>
  )
}

const Buybtn = ({ cartdata, data, setBuycart }) => {
  let index = ''
  for (let i = 0; i < cartdata.length; i++) {
    if ((cartdata[i].commodityCode).split(',')[0] === (data.commodityCode).split(',')[0]) {
      index = i
      break
    }
  }
  const buyQuantity = (typeof index === 'number') ? cartdata[index].buyQuantity : ''
  return (
    <div className='buyBtn'>
      <Icon type={ (buyQuantity === 20) ? require('svg/shengxian/addh.svg') : require('svg/shengxian/add.svg') } onClick={ e => setBuycart(e, data, 'add') } />
      <span>{ buyQuantity }</span>
      { (typeof index === 'number') && <Icon type={ require('svg/shengxian/sub.svg') } onClick={ e => setBuycart(e, data, 'sub') } /> }
    </div>
  )
}

export default Detail
         
 
 
 
 shengxian/components/order.js 
 
import React from 'react'
import { NewPromotion, ContactShow, Mask, SlidePage } from '@boluome/oto_saas_web_app_component'
import { WhiteSpace, List, Picker, Icon } from 'antd-mobile'
import '../style/order.scss'

const Item = List.Item

const Order = order => {
  const {
          handleCur,
          handleSuccess,
          contact = '',
          dateArr,
          deliveryDate,
          handleDeliveryDate,
          invoiceName,
          handleInvoiceName,
          commodityList,
          commodityAmountpri,
          commodityAmountnum,
          curDiscountData,
          other,
          handleOther,
          freight,
          handleOrder,
          submit,
        } = order
  return (
    <div className='orderWrap'>
      <div className='order'>
        <ContactShow { ...{ contact, handleSuccess } } />
        <WhiteSpace size='lg' />
        <Picker title={ '选择送达时间' } data={ dateArr } cols={ 1 } onChange={ res => { console.log(res); handleDeliveryDate(res) } } value={ deliveryDate }>
          <Item arrow='horizontal' className='postDate' thumb={ <Icon type={ require('svg/shengxian/timer.svg') } /> }>配送日期</Item>
        </Picker>
        <WhiteSpace size='lg' />
        <List>
          <Item extra={ <p style={{ color: '#cccccc' }}>在线支付</p> }>支付方式</Item>
        </List>
        <WhiteSpace size='lg' />
        <div className='listWrap'>
          {
            commodityList && commodityList.map((o, i) => { if (i > 2 && other) { return false } return <Listviewli key={ `s${ i + 1 }` } data={ o } /> })
          }
          <p className='freight'>运费<span>￥{ freight ? freight.postFee : 0.0 }</span></p>
          { commodityList && commodityList.length > 3 && <p onClick={ () => { handleOther(other) } }>{ other ? '展开全部' : '收起全部' }</p> }
        </div>
        <WhiteSpace size='lg' />
        { commodityList && <NewPromotion handleChange={ res => { handleCur(res) } } orderType='shengxian' channel='yiguo' amount={ commodityAmountpri } count={ commodityAmountnum } /> }
        <WhiteSpace size='lg' />
        <List>
          <Item arrow='horizontal'
            extra={ <p style={{ color: '#cccccc' }}>{ invoiceName || '不需要发票' }</p> }
            onClick={ () => Mask(
              <SlidePage target='right' type='root' showClose={ false } >
                <Fapiao invoiceName={ invoiceName } handleInvoiceName={ handleInvoiceName } />
              </SlidePage>, { mask: false, style: { position: 'absolute' } }) }
          >
            发票抬头
          </Item>
        </List>
      </div>
      <div className='bottomDiv'>
        <div className='bottomInfo'>
          <div className='info'>
            <p><span><i>实付：￥{ commodityAmountpri && ((commodityAmountpri - (curDiscountData ? curDiscountData.discount : 0)) + (freight ? freight.postFee : 0)).toFixed(2) }</i></span><i>{ (curDiscountData && curDiscountData.discount) ? `优惠￥${ (curDiscountData.discount).toFixed(2) }` : '' }</i></p>
          </div>
          <div style={ submit ? { background: '#ffab00' } : { background: '#cccccc' } } className='btn' onClick={ () => { if (submit) { handleOrder(order) } } }>立即下单</div>
        </div>
      </div>
    </div>
  )
}
const Listviewli = ({ data }) => {
  return (
    <div className='listitem'>
      <div className='pic'><img alt='生鲜' src={ data.picUrl } /></div>

      <div className='info'>
        <h1>{ data.commodityName }</h1>
        <div className='bottomPart'>
          ¥{ data.price }<span>x{ data.num }</span>
        </div>
      </div>
    </div>
  )
}

class Fapiao extends React.Component {
  constructor(props) {
    super(props)
    this.state = {
      invoiceTran: this.props.invoiceName,
    }
  }
  handleInvoiceTran(invoiceTran) {
    this.setState({ invoiceTran })
  }
  close(invoiceTran) {
    this.props.handleContainerClose()
    this.props.handleInvoiceName(invoiceTran)
  }
  render() {
    const { invoiceTran } = this.state
    return (
      <div className='fapiao'>
        <h2>发票抬头</h2>
        <WhiteSpace size='lg' />
        <div className='inputWrap'>
          <textarea maxLength='60' cols='40' rows='3' placeholder='请输入发票抬头（可不填）' onChange={ e => { this.handleInvoiceTran(e.target.value) } } defaultValue={ invoiceTran } />
        </div>
        <div className='fpbtn' onClick={ () => { this.close(invoiceTran) } }>确定</div>
      </div>
    )
  }
}

export default Order
         
 
 
 
 shengxian/components/orderDetails.js 
 
import React, { Component } from 'react'
// import { browserHistory } from 'react-router'
import { OrderDetail } from '@boluome/oto_saas_web_app_component'
import { moment } from '@boluome/common-lib'
import { WhiteSpace, List } from 'antd-mobile'
import { equals } from 'ramda'
import logo from '../img/logo.png'
import '../style/orderDetails.scss'

const Item = List.Item
// id='bl001773304153338'
const OrderDetails = orderDetails => {
  const { orderNo, goPay, login } = orderDetails
  return (
    <div className='orderDetails'>
      { orderNo && <OrderDetail
        content={ <Content orderDetails={ orderDetails } /> }
        id={ orderNo }
        orderType='shengxian'
        login={ login }
        goPay={ () => { goPay(orderNo) } }
      /> }
    </div>
  )
}

class Content extends Component {
  constructor(props) {
    super(props)
    this.state = {}
  }

  componentWillReceiveProps(nextProps) {
    const a = this.props.orderDetailInfo
    const b = nextProps.orderDetailInfo
    if (!equals(a, b)) {
      console.log(b)
    }
  }
  render() {
    const { orderDetailInfo, orderDetails } = this.props
    const { id, shippingFee, contact, realPrice, invoice, commodityList, platformActivity, coupon, deliveryDate, createdAt } = orderDetailInfo
    const { orderNo, handleLog } = orderDetails
    console.log(orderNo)
    if (id) {
      return (
        <div className='odlcenter'>

          <WhiteSpace size='lg' />

          <List>
            <Item><img className='logo' alt='img' src={ logo } />易果生鲜  为您服务</Item>
            <Item>{
              commodityList.map(o => (<div className='comlist' key={ `com${ o.commodityCode }` }>
                <p>{ o.commodityName }</p>
                <p><span>x{ o.num }</span><span>¥{ o.price }</span></p>
              </div>))
            }</Item>
            <Item extra={ <span>¥{ shippingFee }</span> }>配送费</Item>
            { platformActivity && <Item extra={ <span className='numpri'>－ ¥{ platformActivity.price }</span> }><span className='jianhui' style={{ background: '#ff6e19' }}>减</span>{ platformActivity.title }</Item> }
            <Item extra={ <span className='numpri'>- ¥{ coupon ? coupon.price : 0.0 }</span> }><span className='jianhui'>红</span>红包抵扣／兑换红包</Item>
            <Item extra={ <span className='realsubpri'>{ `实付金额 ¥${ realPrice }` }</span> }><span /></Item>
          </List>

          <WhiteSpace size='lg' />

          <div className='discontact'>
            <h3>配送时间<span>{ deliveryDate.replace(/-/g, '/') }</span></h3>
            <div className='nocant'>
              <h3>收货地址</h3>
              <div>
                <p>{ contact.name }<i>{ contact.gender === 1 ? '  女士' : '  先生' }</i>{ contact.phone }</p>
                <p className='addr'>{ `${ contact.city }${ contact.county }${ contact.address }${ contact.detail }${ contact.houseNum }` }</p>
              </div>
            </div>
          </div>

          <WhiteSpace size='lg' />

          <List className='wuliutip'>
            <Item
              arrow='horizontal'
              extra='跟踪物流'
              onClick={ () => { handleLog(orderNo, orderDetailInfo) } }
            >
              物流信息
            </Item>
          </List>

          <WhiteSpace size='lg' />

          { invoice && <div className='fapiao'>
            <h3>发票</h3>
            <div>
              <p>{ invoice }</p>
            </div>
          </div> }

          <WhiteSpace size='lg' />
          <List>
            <Item extra={ <span>{ id }</span> }>订单编号</Item>
            <Item extra={ <span>{ moment('YYYY-MM-DD HH:mm:ss')(createdAt) }</span> }>下单时间</Item>
            <Item extra={ <span>在线支付</span> }>支付方式</Item>
          </List>
        </div>
      )
    }
    return (
      <div />
    )
  }
}

export const Logs = ({ orderDetailInfo, data }) => {
  const { express, logisticsDetail } = data
  const { commodityList, deliveryDate } = orderDetailInfo
  return (
    <div className='log_wrap'>
      <div className='logtitle'>
        <p><img alt='img' src={ commodityList[0].picUrl } /><span className='imgtip'>{ commodityList.length }件商品</span></p>
        <div className='info'>
          <p>承运来源：{ express }</p>
          <p>预计送达：{ deliveryDate }</p>
          <p>联系电话：021-98767865</p>
        </div>
      </div>
      <WhiteSpace size='lg' />
      <div className='loglist'>
        <div>
          {
            logisticsDetail && logisticsDetail.map(o => (<div key={ `loglist${ o.time }` }>
              <p>{ o.detail }</p>
              <p>{ o.time }</p>
            </div>))
          }
        </div>
      </div>
    </div>
  )
}

export default OrderDetails
         
 
 
 
 shengxian/components/root.js 
 
import React from 'react'
import customize from 'customize'
import '../../../styles/index.scss'

export default customize(
  ({ children }) => (
    <div>{ children }</div>
  )
)
         
 
 
 
 shengxian/components/sear.js 
 
import React from 'react'
import { Icon } from 'antd-mobile'
import { Empty, Search } from '@boluome/oto_saas_web_app_component'
import Cart from './cart'
import '../style/sear.scss'

const Sear = sear => {
  const { search, cartdata = [], goBack, goOrder, delBuycart } = sear
  return (
    <div className='sear'>
      <div className='searWarp'>
        <Search inputPlaceholder={ '请输入商品名称' }
          listItem={ <Listviewli sear={ sear } /> }
          noResult={ <Empty message='哎呀，没有找到相关商品哦 换个关键字试试吧~' imgUrl={ <Icon type={ require('svg/shengxian/nosearch.svg') } /> } /> }
          onFeach={ search }
          rightComponent={ <Cancel goBack={ goBack } /> }
          handleResult={ res => { console.log(res) } }
        />
      </div>

      {
        cartdata.length > 0 && <div>
          <Cart
            listItem={ <Listviewli cart={ 1 } sear={ sear } /> }
            cartdata={ cartdata }
            submit={ goOrder }
            delBuycart={ delBuycart }
          />
        </div>
      }
    </div>
  )
}

const Listviewli = ({ data, sear, cart }) => {
  const { areaId, goDetail, cartdata, setBuycart } = sear
  return (
    <div className='listitem' onClick={ () => goDetail(areaId, data) }>
      <div className='pic' style={ cart ? { width: '0.8rem', height: '0.8rem' } : {} }><img alt='生鲜' style={ cart ? { width: '0.8rem', height: '0.8rem' } : {} } src={ data.commodityPicList[0].picUrl } /></div>

      <div className='info' style={ cart ? { width: 'calc(100% - 0.8rem)', padding: '0 0 0 0.28rem' } : {} }>
        <h1>{ data.commodityName }</h1>
        { !cart && <p>{ data.spec }</p> }

        <div className='bottomPart'>
          <p>¥{ data.price }</p>
          <Buybtn cartdata={ cartdata } setBuycart={ setBuycart } data={ data } />
        </div>
      </div>
    </div>
  )
}

const Buybtn = ({ cartdata, data, setBuycart }) => {
  let index = ''
  for (let i = 0; i < cartdata.length; i++) {
    if ((cartdata[i].commodityCode).split(',')[0] === (data.commodityCode).split(',')[0]) {
      index = i
      break
    }
  }
  const buyQuantity = (typeof index === 'number') ? cartdata[index].buyQuantity : ''
  return (
    <div className='buyBtn'>
      <Icon type={ (buyQuantity === 20) ? require('svg/shengxian/addh.svg') : require('svg/shengxian/add.svg') } onClick={ e => setBuycart(e, data, 'add') } />
      <span>{ buyQuantity }</span>
      { (typeof index === 'number') && <Icon type={ require('svg/shengxian/sub.svg') } onClick={ e => setBuycart(e, data, 'sub') } /> }
    </div>
  )
}

// 取消组件
const Cancel = props => {
  const { goBack } = props
  return (
    <span className='cancel' onClick={ () => goBack() }>取消</span>
  )
}

export default Sear
         
 
 
 
 shengxian/components/selectTab.js 
 

import React, { Component } from 'react'
import { Icon } from 'antd-mobile'

import '../style/selectTab.scss'

let startX
let preNode = 'undefined'
let rotate = 0
let bool = true
const dpr = document.documentElement.clientWidth / window.screen.width
export default class SelectTab extends Component {
  static defaultProps = {
  }
  constructor(props) {
    super(props)
    this.state = {
      data: this.props.data,
    }
    this.tabWarp = null
    this.tabIcon = null
    this.tabCro = null
    this.tabFoucs = null
    this.tabShade = null
    this.tabSpan = []
    this.tabSpans = []
    this.translateX = 0
    this.shadeWidth = 0
  }

  handleSelect(i, o) {
    // const endAnchor = e.offsetLeft
    if (preNode !== i) {
      if (this.props.selectSub) {
        this.props.selectSub(o, this.props.categoryIdList)
      }
      if ((rotate % 360) && (preNode !== 'undefined')) {
        this.tabShade.style.height = '0px'
        rotate += 180
        this.tabIcon.style.WebkitTransform = `rotate(${ rotate }deg)`
      } else if (typeof preNode !== 'number') {
        preNode = 0
      }
      this.tabSpan[preNode].style.color = ''
      this.tabSpans[preNode].style.color = ''
      this.tabSpan[i].style.color = '#ffab00'
      this.tabSpans[i].style.color = '#ffab00'
      this.tabFoucs.style.borderTop = '0.04rem solid #ffab00'
      this.tabFoucs.style.width = this.tabSpan[i].offsetWidth
      this.tabFoucs.style.WebkitTransform = `translateX(${ this.tabSpan[i].offsetLeft }px)`
      if (this.tabWarp) {
        let disX = (this.tabSpan[i].offsetLeft * (-1)) + 150
        const warpWidth = parseFloat(window.getComputedStyle(this.tabWarp).width, 10) - parseFloat(window.getComputedStyle(this.tabCro).width, 10)
        if (disX < (warpWidth * (-1))) {
          disX = warpWidth * (-1)
        }
        if (disX > 0) {
          disX = 0
        }
        this.translateX = disX
        this.tabWarp.style.WebkitTransition = '.3s ease'
        this.tabWarp.style.WebkitTransform = `translateX(${ this.translateX }px)`
      }
      preNode = i
    }
  }

  handleSwitch() {
    // const endAnchor = e.offsetLeft
    this.tabShade.style.WebkitTransition = '.3s ease'
    if (rotate % 360) {
      this.tabShade.style.height = '0px'
    } else {
      this.tabShade.style.height = `${ this.shadeWidth }`
    }
    rotate += 180
    this.tabIcon.style.WebkitTransform = `rotate(${ rotate }deg)`
  }

  handleTouchStart(e) {
    // e.preventDefault()
    this.tabWarp.style.WebkitTransition = ''
    startX = e.touches ? e.touches[0].screenX : e.screenX
  }


  handleTouchMove(e) {
    // e.preventDefault()
    const { translateX } = this
    const warpWidth = parseFloat(window.getComputedStyle(this.tabWarp).width, 10) - parseFloat(window.getComputedStyle(this.tabCro).width, 10)
    const movedX = e.touches ? e.touches[0].screenX : e.screenX
    let disX = translateX + ((movedX - startX) * dpr)

    if (disX > 0) {
      disX = 0
    }
    if (disX < (warpWidth * (-1))) {
      disX = warpWidth * (-1)
    }
    if (warpWidth < 0) {
      disX = 0
    }
    this.translateX = disX
    startX = movedX
    this.tabWarp.style.WebkitTransform = `translateX(${ this.translateX }px)`
  }
  handleTouchEnd() {
    // e.preventDefault()
  }

  componentWillReceiveProps(nextProps) {
    // 重置
    const preData = this.state.data
    const { data } = nextProps
    if (preData !== data) {
      // 状态还原
      this.tabSpan[preNode].style.color = ''
      this.tabSpans[preNode].style.color = ''
      this.tabWarp.style.WebkitTransform = `translateX(${ 0 }px)`
      this.tabShade.style.height = 'auto'
      // 数据还原
      this.tabWarp = null
      this.tabIcon = null
      this.tabCro = null
      this.tabFoucs = null
      this.tabShade = null
      this.tabSpan = []
      this.tabSpans = []
      this.translateX = 0
      this.shadeWidth = 0
      preNode = 'undefined'
      rotate = 0
      bool = true
      this.setState({ data })
    }
  }

  componentWillMount() {
    // 数据还原
    this.tabWarp = null
    this.tabIcon = null
    this.tabCro = null
    this.tabFoucs = null
    this.tabShade = null
    this.tabSpan = []
    this.tabSpans = []
    this.translateX = 0
    this.shadeWidth = 0
    preNode = 'undefined'
    rotate = 0
    bool = true
  }

  render() {
    const { data } = this.state
    const { categoryIdList } = this.props
    let index = 0
    if (data) {
      for (let i = 0; i < data.length; i++) {
        if (JSON.stringify(data[i].idList) === JSON.stringify(categoryIdList)) {
          index = i
        }
      }
    }
    const dataLi = data && data.map((o, i) => <span ref={ node => { if (node) { this.tabSpan[i] = node } } } key={ `${ i + 1 }` } className='select_li' onClick={ () => this.handleSelect(i, o) }>{ o.name }</span>)
    const dataLis = data && data.map((o, i) => <span ref={ node => { if (node) { this.tabSpans[i] = node } } } key={ `s${ i + 1 }` } className='select_li' onClick={ () => this.handleSelect(i, o) }>{ o.name }</span>)
    return (
      <div className='select_tabs'>
        <span className='select_icon' ref={ node => { if (node) { this.tabIcon = node } } } onClick={ () => this.handleSwitch() }><Icon type={ require('svg/shengxian/arrow.svg') } /></span>
        <div className='select_shade' ref={ node => { if (node) { this.tabShade = node; if (parseFloat(window.getComputedStyle(node).height) > 0) { node.style.height = 'auto'; this.shadeWidth = window.getComputedStyle(node).height } node.style.height = '0px' } } }>
          <p>选择类目</p>
          <div>{ dataLis }</div>
        </div>
        <div className='select_cro' ref={ node => { if (node) { this.tabCro = node } } }>
          <p
            ref={ node => { if (node) { this.tabWarp = node } } }
            onTouchStart={ e => this.handleTouchStart(e) }
            onTouchMove={ e => this.handleTouchMove(e) }
            onTouchEnd={ e => this.handleTouchEnd(e) }
          >
            { dataLi }
            <span className='select_foucs' ref={ node => { if (node && bool) { this.tabFoucs = node; this.handleSelect(index, data[index]); bool = false } } } />
          </p>
        </div>
      </div>
    )
  }
}
         
 
 
 
 shengxian/containers/addr.js 
 
import { connect } from 'react-redux'
import { browserHistory } from 'react-router'
import { getStore } from '@boluome/common-lib'
import { wrap, Mask } from '@boluome/oto_saas_web_app_component'
import Addr from '../components/addr'
import { addrReset } from '../actions/addr.js'

const mapStateToProps = state => {
  const { addr } = state
  return {
    ...addr,
  }
}

const mapDispatchToProps = dispatch => {
  return {
    dispatch,
    goOrder: contactId => {
      Mask.closeAll()
      if (contactId) { browserHistory.push(`/shengxian/${ getStore('channel', 'session') }/order/${ contactId }`) }
    },
  }
}

const mapFunToComponent  = (dispatch, state) => {
  return {
    componentWillMount: () => {
      const { routeParams } = state
      const { contactId } = routeParams
      dispatch(
        addrReset({
          contact: {
            contactId,
          },
        })
      )
    },
  }
}

export default
  connect(mapStateToProps, mapDispatchToProps)(
    wrap(mapFunToComponent)(Addr)
  )
         
 
 
 
 shengxian/containers/app.js 
 
import { connect } from 'react-redux'
import { browserHistory } from 'react-router'
import { wrap, Loading }    from '@boluome/oto_saas_web_app_component'
import { get, send, parseLocName, setStore, getStore } from '@boluome/common-lib'
import { Toast } from 'antd-mobile'
import { getLocationGaode, login } from 'business'
import { appReset, getCategorie, getCategorieAfter } from '../actions/app.js'
import App from '../components/app'

const mapStateToProps = state => {
  const { app } = state
  return {
    ...app,
  }
}

const mapDispatchToProps = dispatch => {
  return {
    dispatch,

    handleTip: () => {
      dispatch(appReset({
        tip: false,
      }))
    },

    handleCity: loc => {
      setStore('cityName', loc.name, 'session')
      dispatch(appReset({
        cityName: loc.name,
      }))
      dispatch(getCategorieAfter(getStore('channel', 'session'), loc.channelCityId))
    },

    goSear: () => {
      browserHistory.push(`/shengxian/${ getStore('channel', 'session') }/sear`)
    },
    goOrder: () => {
      const handleClose = Loading()
      const cartdata = getStore('cartdata') || []
      const commodityList = cartdata.reduce((arr, item) => {
        arr.push({
          areaId:        item.cityId,
          commodityId:   item.commodityId,
          commodityCode: item.commodityCode.split(',')[0],
          number:        item.buyQuantity,
        })
        return arr
      }, [])
      send('/shengxian/v2/commodity/status', { channel: getStore('channel', 'session'), commodityList }).then(({ code, data, message }) => {
        handleClose()
        if (code === 0) {
          const noBuy = data.filter(e => {
            if (e.isBuy) {
              return true
            }
            return false
          })
          if (getStore('customerUserId', 'session') && !noBuy.length) {
            browserHistory.push(`/shengxian/${ getStore('channel', 'session') }/order/defined`)
          } else if (!noBuy.length) {
            Toast.info('未登录', 1)
          } else {
            for (let i = 0; i < noBuy.length; i++) {
              for (let j = 0; j < cartdata.length; j++) {
                if ((cartdata[j].commodityCode).split(',')[0] === (noBuy[i].commodityCode).split(',')[0]) {
                  cartdata[j].isBuy = false
                  break
                }
              }
            }
            setStore('cartdata', cartdata)
            dispatch(
              appReset({
                cartdata,
              })
            )
            Toast.info('购物车中有无效商品', 1)
          }
        } else {
          console.log(message)
        }
      })
    },

    setBuycart: (e, infoData, way) => {
      e.stopPropagation()
      const cartdata = getStore('cartdata') || []
      let index = 'string'
      for (let i = 0; i < cartdata.length; i++) {
        if ((cartdata[i].commodityCode).split(',')[0] === (infoData.commodityCode).split(',')[0]) {
          index = i
          break
        }
      }
      if (typeof index === 'number') {
        const numb = cartdata[index].buyQuantity
        switch (way) {
          case 'add':
            if (numb === 20) {
              Toast.info('最多购买20件', 1)
            } else {
              cartdata[index].buyQuantity = numb + 1
            }
            break
          case 'sub':
            if (numb === 1) {
              cartdata.splice(index, 1)
            } else {
              cartdata[index].buyQuantity = numb - 1
            }
            break
          default:
            console.log('参数错误')
        }
      } else if (way === 'add') {
        infoData.buyQuantity = 1
        infoData.isBuy = true
        cartdata.push(infoData)
      }
      setStore('cartdata', cartdata)
      dispatch(
        appReset({
          cartdata,
        })
      )
    },

    delBuycart: way => {
      const cartdata = getStore('cartdata') || []
      let newCartdata = []
      if (way === 'clear') {
        newCartdata = cartdata.filter(el => {
          if (el.isBuy) {
            return true
          }
          return false
        })
      }
      setStore('cartdata', newCartdata)
      dispatch(
        appReset({
          cartdata: newCartdata,
        })
      )
    },

    goDetail: (areaId, detail) => {
      dispatch({ type: 'DET_INIT' })
      browserHistory.push(`/shengxian/${ getStore('channel', 'session') }/detail/${ areaId }/${ detail.commodityCode }/`)
    },

    callback: (key, categoriesData) => {
      let subcategoriesData = []
      for (let i = 0; i < categoriesData.length; i++) {
        if (categoriesData[i].areaId === key) {
          subcategoriesData = categoriesData[i].subcategoryList
          break
        }
      }
      dispatch(
        appReset({
          subcategoriesData,
          keys: key,
        })
      )
    },

    handleSelectsub: data => {
      dispatch(
        appReset({
          categoryIdList: data.idList,
          offset:         0,
        })
      )
    },

    // 查询商品
    getCommodities: (limit, offset, fetchData, onSuccess) => {
      const { channel, areaId, categoryIdList } = fetchData
      send('/shengxian/v2/commodities',
        { channel, areaId, categoryIdList, limit, offset },
        { 'Content-Type': 'application/json' }
      ).then(({ code, data, message }) => {
        if (code === 0) {
          onSuccess(data)
          if (data.length > 0) {
            dispatch(
              appReset({
                offset: offset + data.length,
              })
            )
          }
        } else {
          console.log(message)
        }
      })
    },
  }
}

const mapFunToComponent  = (dispatch, state) => {
  return {

    componentWillMount: () => {
      // 登录
      login(err => {
        if (err) {
          Toast.info('未登录', 1)
        }
      })
      // 购物车数据
      const cartdata = getStore('cartdata') || []
      dispatch(
        appReset({
          cartdata,
        })
      )

      const afterGetlocation = () => {
        // 获取区域
        get(`/basis/v1/shengxian/${ getStore('channel', 'session') }/cities`).then(({ code, data, message }) => {
          if (code === 0) {
            const cityArr = data
            dispatch(
              appReset({
                cityArr,
              })
            )
            dispatch(getCategorie(getStore('channel', 'session'), getStore('cityName', 'session'), cityArr))
          } else {
            console.log(message)
          }
        })
      }
      // 定位
      setStore('channel', 'yiguo', 'session')
      if (getStore('cityName', 'session')) {
        dispatch(appReset({
          cityName: getStore('cityName', 'session'),
        }))
        if (!state.categoryId) {
          afterGetlocation()
        }
      } else {
        getLocationGaode(err => {
          let cityName
          if (err) {
            cityName = state.cityName
          } else {
            cityName = parseLocName(getStore('currentPosition', 'session').city)
          }
          dispatch(appReset({
            cityName,
          }))
          setStore('cityName', cityName, 'session')
          afterGetlocation()
        })
      }
    },
  }
}

export default
connect(mapStateToProps, mapDispatchToProps)(
  wrap(mapFunToComponent)(App)
)
         
 
 
 
 shengxian/containers/city.js 
 
import { connect } from 'react-redux'
import { browserHistory } from 'react-router'
import { setStore } from '@boluome/common-lib'
import City from '../components/city'

const mapStateToProps = ({ app }) => ({ ...app })

const mapDispatchToProps = dispatch => ({
  dispatch,
  handleCityChange: loc => {
    setStore('cityName', loc.name, 'session')
    browserHistory.push('/shengxian')
  },
})

export default connect(mapStateToProps, mapDispatchToProps)(City)
         
 
 
 
 shengxian/containers/detail.js 
 
import { connect } from 'react-redux'
import { browserHistory } from 'react-router'
import { wrap, Loading } from '@boluome/oto_saas_web_app_component'
import { get, send, getStore, setStore } from '@boluome/common-lib'
import { Toast } from 'antd-mobile'
import { detReset } from '../actions/detail.js'
import Detail from '../components/detail'

const mapStateToProps = state => {
  const { detail } = state
  return {
    ...detail,
  }
}

const mapDispatchToProps = dispatch => {
  return {
    dispatch,
    goDetail: (areaId, detail) => {
      dispatch({ type: 'DET_INIT' })
      browserHistory.push(`/shengxian/${ getStore('channel', 'session') }/detail/${ areaId }/${ detail.commodityCode }/`)
    },
    goOrder: () => {
      const handleClose = Loading()
      const cartdata = getStore('cartdata') || []
      const commodityList = cartdata.reduce((arr, item) => {
        arr.push({
          areaId:        item.cityId,
          commodityId:   item.commodityId,
          commodityCode: item.commodityCode.split(',')[0],
          number:        item.buyQuantity,
        })
        return arr
      }, [])
      send('/shengxian/v2/commodity/status', { channel: getStore('channel', 'session'), commodityList }).then(({ code, data, message }) => {
        handleClose()
        if (code === 0) {
          console.log(data)
          const noBuy = data.filter(e => {
            if (e.isBuy) {
              return true
            }
            return false
          })
          if (getStore('customerUserId', 'session') && !noBuy.length) {
            browserHistory.push(`/shengxian/${ getStore('channel', 'session') }/order/defined`)
          } else if (!noBuy.length) {
            Toast.info('未登录', 1)
          } else {
            for (let i = 0; i < noBuy.length; i++) {
              for (let j = 0; j < cartdata.length; j++) {
                if ((cartdata[j].commodityCode).split(',')[0] === (noBuy[i].commodityCode).split(',')[0]) {
                  cartdata[j].isBuy = false
                  break
                }
              }
            }
            setStore('cartdata', cartdata)
            dispatch(
              detReset({
                cartdata,
              })
            )
            Toast.info('购物车中有无效商品', 1)
          }
        } else {
          console.log(message)
        }
      })
    },
    handleSwitchmask: detMask => {
      dispatch(
        detReset({
          detMask: !detMask,
        })
      )
    },
    handleSelectspec: specData => {
      dispatch(
        detReset({
          specData,
        })
      )
    },
    setpreBuy: (e, num, bool) => {
      e.stopPropagation()
      if (bool && (num < 20)) {
        num++
      } else if (bool && (num === 20)) {
        Toast.info('最多购买20件', 1)
      } else if (num > 1) {
        num--
      }
      dispatch(
        detReset({
          num,
        })
      )
    },
    delBuycart: way => {
      const cartdata = getStore('cartdata') || []
      let newCartdata = []
      if (way === 'clear') {
        newCartdata = cartdata.filter(el => {
          if (el.isBuy) {
            return true
          }
          return false
        })
      }
      setStore('cartdata', newCartdata)
      dispatch(
        detReset({
          cartdata: newCartdata,
        })
      )
    },
    setpreCart: (infoData, num) => {
      const cartdata = getStore('cartdata') || []
      let index = 'string'
      for (let i = 0; i < cartdata.length; i++) {
        if ((cartdata[i].commodityCode).split(',')[0] === (infoData.commodityCode).split(',')[0]) {
          index = i
          break
        }
      }
      if (typeof index === 'number') {
        const numb = cartdata[index].buyQuantity + num
        if (numb > 20) {
          Toast.info('最多购买20件', 1)
          cartdata[index].buyQuantity = 20
        } else {
          cartdata[index].buyQuantity = numb
        }
      } else {
        infoData.buyQuantity = num
        infoData.isBuy = true
        cartdata.push(infoData)
      }
      setStore('cartdata', cartdata)
      dispatch(
        detReset({
          num:     1,
          detMask: false,
          cartdata,
        })
      )
    },
    setBuycart: (e, infoData, way) => {
      e.stopPropagation()
      const cartdata = getStore('cartdata') || []
      let index = 'string'
      for (let i = 0; i < cartdata.length; i++) {
        if ((cartdata[i].commodityCode).split(',')[0] === (infoData.commodityCode).split(',')[0]) {
          index = i
          break
        }
      }
      if (typeof index === 'number') {
        const numb = cartdata[index].buyQuantity
        switch (way) {
          case 'add':
            if (numb === 20) {
              Toast.info('最多购买20件', 1)
            } else {
              cartdata[index].buyQuantity = numb + 1
            }
            break
          case 'sub':
            if (numb === 1) {
              cartdata.splice(index, 1)
            } else {
              cartdata[index].buyQuantity = numb - 1
            }
            break
          default:
            console.log('参数错误')
        }
      } else if (way === 'add') {
        infoData.buyQuantity = 1
        infoData.isBuy = true
        cartdata.push(infoData)
      }
      setStore('cartdata', cartdata)
      dispatch(
        detReset({
          cartdata,
        })
      )
    },
  }
}

const mapFunToComponent  = (dispatch, state) => {
  return {
    componentWillMount: () => {
      const { routeParams } = state
      const { channel, areaId, commodityCode } = routeParams
      // 商品详情
      get('/shengxian/v2/commodity', { channel, areaId, commodityCode }).then(({ code, data, message }) => {
        if (code === 0) {
          dispatch(
           detReset({
             detailData: data,
             specData:   data.specifications[0],
             areaId,
           })
          )
        } else {
          console.log(message)
        }
      })
      // 图文详情
      get('/shengxian/v1/commodity/details', { channel, areaId, commodityCode }).then(({ code, data, message }) => {
        if (code === 0) {
          dispatch(
           detReset({
             picDatiles: data.details || false,
           })
         )
        } else {
          console.log(message)
        }
      })
      // 购物车数据
      const cartdata = getStore('cartdata') || []
      dispatch(
        detReset({
          cartdata,
        })
      )
    },
  }
}

export default
  connect(mapStateToProps, mapDispatchToProps)(
    wrap(mapFunToComponent)(Detail)
  )
         
 
 
 
 shengxian/containers/order.js 
 
import { connect } from 'react-redux'
import { Toast } from 'antd-mobile'
import { browserHistory } from 'react-router'
import { wrap, Loading } from '@boluome/oto_saas_web_app_component'
import { get, send, getStore, removeStore } from '@boluome/common-lib'
import { afterOrdering } from 'business'
import Order from '../components/order'
import { derReset, getFreight, getDate } from '../actions/order.js'

const mapStateToProps = state => {
  const { order } = state
  return {
    ...order,
  }
}

const mapDispatchToProps = (dispatch, props) => {
  return {
    dispatch,

    handleSuccess: () => {
      const { routeParams } = props
      const { contactId } = routeParams
      dispatch({ type: 'ADDR_INIT' })
      browserHistory.push(`/shengxian/${ getStore('channel', 'session') }/addr/${ contactId }`)
    },

    handleOther: other => {
      dispatch(
        derReset({
          other: !other,
        })
      )
    },

    handleInvoiceName: invoiceName => {
      dispatch(
        derReset({
          invoiceName,
        })
      )
    },

    handleDeliveryDate: deliveryDate => {
      dispatch(
        derReset({
          deliveryDate,
        })
      )
    },

    handleCur: curDiscountObj => {
      dispatch(
        derReset({
          curDiscountData: curDiscountObj,
        })
      )
    },

    handleOrder: order => {
      const {
              contact,
              deliveryDate,
              invoiceName,
              commodityList,
              commodityAmountpri,
              curDiscountData,
              freight,
            } = order
      if (!contact) {
        Toast.info('请添加收货地址')
      } else if (!freight) {
        Toast.info('配送费计算中0.0')
      } else {
        const handleClose = Loading()
        const activityId = curDiscountData.activities ? curDiscountData.activities.id : ''
        const couponId =  curDiscountData.coupon ? curDiscountData.coupon.id : ''
        send('/shengxian/v1/order', {
          channel:         getStore('channel', 'session'),
          customerUserId:  getStore('customerUserId', 'session'),
          userPhone:       getStore('userPhone', 'session'),
          price:           freight.postFee + commodityAmountpri, // 商品总金额+运费
          commodityAmount: commodityAmountpri, // 商品总金额
          postFee:         freight.postFee, // 运费
          deliveryDate:    deliveryDate[0].replace(/\//g, '-'),
          contact, // 收货人地址信息
          commodityList, // 商品列表
          invoiceName, // 发票抬头
          invoiceContent:  '', // 发票内容
          couponId, // 优惠券ID
          activityId,
        }).then(({ code, data, message }) => {
          handleClose()
          if (code === 0) {
            removeStore('cartdata')
            afterOrdering(data)
          } else {
            Toast.info(message, 3)
            console.log(message)
          }
        })
      }
    },
  }
}

const mapFunToComponent  = (dispatch, state) => {
  return {
    componentWillMount: () => {
      // 购物车数据
      const cartdata = getStore('cartdata') || []
      if (!cartdata.length) {
        browserHistory.replace('/shengxian')
        return false
      }
      let commodityAmountpri = 0
      let commodityAmountnum = 0
      const commodityList = cartdata.reduce((arr, { commodityName, commodityId, commodityCode, commodityPicList, buyQuantity, price }) => {
        arr.push({
          commodityId,
          commodityCode: commodityCode.split(',')[0],
          commodityName,
          price,
          num:           buyQuantity,
          totalFee:      price * parseInt(buyQuantity, 10),
          picUrl:        commodityPicList[0].picUrl,
        })
        commodityAmountpri += (price * parseInt(buyQuantity, 10))
        commodityAmountnum += buyQuantity
        return arr
      }, [])
      dispatch(
        derReset({
          commodityList,
          commodityAmountpri,
          commodityAmountnum,
        })
      )

      const { routeParams } = state
      const { contactId } = routeParams
      // if (contactId && contactId !== 'defined') {
        // 获取用户地址
      get('/user/v1/contact', {
        userId:    getStore('customerUserId', 'session'),
        longitude: getStore('geopoint', 'session') ? getStore('geopoint', 'session').longitude : 0,
        latitude:  getStore('geopoint', 'session') ? getStore('geopoint', 'session').latitude : 0,
        contactId: contactId === 'defined' ? '' : contactId,
      }).then(({ code, data, message }) => {
        if (code === 0) {
          dispatch(
            derReset({
              submit:  true,
              contact: data,
            })
          )
          dispatch(getFreight(data.contactId, commodityList))
        } else {
          const dateA = getDate()
          dispatch(
            derReset({
              submit:       false,
              dateArr:      dateA,
              deliveryDate: [dateA[0].value],
            })
          )
          console.log(message)
        }
      })
      // } else {
      //   const dateA = getDate()
      //   dispatch(
      //     derReset({
      //       submit:       false,
      //       dateArr:      dateA,
      //       deliveryDate: [dateA[0].value],
      //     })
      //   )
      // }
    },
  }
}

export default
  connect(mapStateToProps, mapDispatchToProps)(
    wrap(mapFunToComponent)(Order)
  )
         
 
 
 
 shengxian/containers/orderDetails.js 
 
import React from 'react'
import { connect } from 'react-redux'
// import { browserHistory } from 'react-router'
import { Toast } from 'antd-mobile'
import { get } from '@boluome/common-lib'
import { SlidePage, Mask, wrap, Loading } from '@boluome/oto_saas_web_app_component'
import { afterOrdering, login } from 'business'
import OrderDetails, { Logs } from '../components/orderDetails'
import { odlReset } from '../actions/orderDetails.js'

const mapStateToProps = ({ orderDetails }) => ({ ...orderDetails, login })

const mapDispatchToProps = dispatch => {
  return {
    dispatch,

    handleLog: (id, orderDetailInfo) => {
      // const data = {
      //   expressNumber:   'ex5cddx889',
      //   express:         '易果生鲜物流',
      //   logisticsDetail: [
      //     {
      //       time:   '2016-07-26 14:47:33',
      //       detail: '您提交了订单，等待客服审核。',
      //     },
      //     {
      //       time:   '2016-07-26 15:57:23',
      //       detail: '您的订单已通过审核。',
      //     },
      //   ],
      // }
      // Mask(
      //   <SlidePage target='right' showClose={ false } >
      //     <Logs orderDetailInfo={ orderDetailInfo } data={ data } />
      //   </SlidePage>,
      //   { mask: false }
      // )
      // 获取物流信息
      const closeLoading = Loading()
      get('/shengxian/v1/order/logistics', {
        id,
        channel: 'yiguo',
      }).then(({ code, data, message }) => {
        closeLoading()
        if (code === 0) {
          console.log(data)
          Mask(
            <SlidePage target='right' showClose={ false } >
              <Logs orderDetailInfo={ orderDetailInfo } data={ data } />
            </SlidePage>,
            { mask: false }
          )
        } else {
          console.log(message)
          Toast.info(message)
        }
      })
    },

    goPay: orderNo => {
      afterOrdering({ id: orderNo })
    },
  }
}

const mapFunToComponent  = (dispatch, state) => ({
  componentWillMount: () => {
    const { routeParams } = state
    const { orderNo } = routeParams
    console.log(123456)
    dispatch(odlReset({
      orderNo,
    }))
  },
})

export default
connect(mapStateToProps, mapDispatchToProps)(
  wrap(mapFunToComponent)(OrderDetails)
)
         
 
 
 
 shengxian/containers/sear.js 
 
import { connect } from 'react-redux'
import { browserHistory } from 'react-router'
import { wrap, Loading } from '@boluome/oto_saas_web_app_component'
import { get, send, getStore, setStore } from '@boluome/common-lib'
import { Toast } from 'antd-mobile'
import { seaReset } from '../actions/sear.js'
import Sear from '../components/sear'

const mapStateToProps = state => {
  const { sear } = state
  return {
    ...sear,
  }
}

const mapDispatchToProps = dispatch => {
  return {
    dispatch,
    goBack: () => {
      browserHistory.go(-1)
    },
    goDetail: (areaId, detail) => {
      dispatch({ type: 'DET_INIT' })
      browserHistory.push(`/shengxian/${ getStore('channel', 'session') }/detail/${ areaId }/${ detail.commodityCode }/`)
    },
    goOrder: () => {
      const handleClose = Loading()
      const cartdata = getStore('cartdata') || []
      const commodityList = cartdata.reduce((arr, item) => {
        arr.push({
          areaId:        item.cityId,
          commodityId:   item.commodityId,
          commodityCode: item.commodityCode.split(',')[0],
          number:        item.buyQuantity,
        })
        return arr
      }, [])
      send('/shengxian/v2/commodity/status', { channel: getStore('channel', 'session'), commodityList }).then(({ code, data, message }) => {
        handleClose()
        if (code === 0) {
          console.log(data)
          const noBuy = data.filter(e => {
            if (e.isBuy) {
              return true
            }
            return false
          })
          if (getStore('customerUserId', 'session') && !noBuy.length) {
            browserHistory.push(`/shengxian/${ getStore('channel', 'session') }/order/defined`)
          } else if (!noBuy.length) {
            Toast.info('未登录', 1)
          } else {
            for (let i = 0; i < noBuy.length; i++) {
              for (let j = 0; j < cartdata.length; j++) {
                if ((cartdata[j].commodityCode).split(',')[0] === (noBuy[i].commodityCode).split(',')[0]) {
                  cartdata[j].isBuy = false
                  break
                }
              }
            }
            setStore('cartdata', cartdata)
            dispatch(
              seaReset({
                cartdata,
              })
            )
            Toast.info('购物车中有无效商品', 1)
          }
        } else {
          console.log(message)
        }
      })
    },
    handleSwitchmask: detMask => {
      dispatch(
        seaReset({
          detMask: !detMask,
        })
      )
    },
    handleSelectspec: specData => {
      dispatch(
        seaReset({
          specData,
        })
      )
    },
    search: (searchKey, cb) => {
      if (searchKey) {
        const handleClose = Loading()
        get('/shengxian/v2/search', { channel: getStore('channel', 'session'), areaId: getStore('areaId', 'session'), keyword: searchKey }).then(({ code, data, message }) => {
          handleClose()
          if (code === 0) {
            const cinema2 = data.filter(item => {
              return (item.commodityName.indexOf(searchKey) >= 0)
            })
            cb(null, cinema2)
          } else {
            // cb(message)
            console.log(message)
          }
        })
        .catch(err => {
          // cb(err)
          console.log(err)
          handleClose()
        })
      } else {
        cb('searchKey is undefined')
      }
    },
    setpreBuy: (e, num, bool) => {
      e.stopPropagation()
      if (bool && (num < 20)) {
        num++
      } else if (bool && (num === 20)) {
        Toast.info('最多购买20件', 1)
      } else if (num > 1) {
        num--
      }
      dispatch(
        seaReset({
          num,
        })
      )
    },
    delBuycart: way => {
      const cartdata = getStore('cartdata') || []
      let newCartdata = []
      if (way === 'clear') {
        newCartdata = cartdata.filter(el => {
          if (el.isBuy) {
            return true
          }
          return false
        })
      }
      setStore('cartdata', newCartdata)
      dispatch(
        seaReset({
          cartdata: newCartdata,
        })
      )
    },
    setpreCart: (infoData, num) => {
      const cartdata = getStore('cartdata') || []
      let index = 'string'
      for (let i = 0; i < cartdata.length; i++) {
        if ((cartdata[i].commodityCode).split(',')[0] === (infoData.commodityCode).split(',')[0]) {
          index = i
          break
        }
      }
      if (typeof index === 'number') {
        const numb = cartdata[index].buyQuantity + num
        if (numb > 20) {
          Toast.info('最多购买20件', 1)
          cartdata[index].buyQuantity = 20
        } else {
          cartdata[index].buyQuantity = numb
        }
      } else {
        infoData.buyQuantity = num
        infoData.isBuy = true
        cartdata.push(infoData)
      }
      setStore('cartdata', cartdata)
      dispatch(
        seaReset({
          num:     1,
          detMask: false,
          cartdata,
        })
      )
    },
    setBuycart: (e, infoData, way) => {
      e.stopPropagation()
      const cartdata = getStore('cartdata') || []
      let index = 'string'
      for (let i = 0; i < cartdata.length; i++) {
        if ((cartdata[i].commodityCode).split(',')[0] === (infoData.commodityCode).split(',')[0]) {
          index = i
          break
        }
      }
      if (typeof index === 'number') {
        const numb = cartdata[index].buyQuantity
        switch (way) {
          case 'add':
            if (numb === 20) {
              Toast.info('最多购买20件', 1)
            } else {
              cartdata[index].buyQuantity = numb + 1
            }
            break
          case 'sub':
            if (numb === 1) {
              cartdata.splice(index, 1)
            } else {
              cartdata[index].buyQuantity = numb - 1
            }
            break
          default:
            console.log('参数错误')
        }
      } else if (way === 'add') {
        infoData.buyQuantity = 1
        infoData.isBuy = true
        cartdata.push(infoData)
      }
      setStore('cartdata', cartdata)
      dispatch(
        seaReset({
          cartdata,
        })
      )
    },
  }
}

const mapFunToComponent  = dispatch => {
  return {
    componentWillMount: () => {
      // const { routeParams } = state
      // const { channel, areaId, commodityCode } = routeParams
      // 购物车数据
      const cartdata = getStore('cartdata') || []
      console.log(cartdata)
      dispatch(
        seaReset({
          cartdata,
          areaId: getStore('areaId', 'session'),
        })
      )
    },
  }
}

export default
  connect(mapStateToProps, mapDispatchToProps)(
    wrap(mapFunToComponent)(Sear)
  )
         
 
 
 
 shengxian/index.js 
 
import React        from 'react'
import { createStore, applyMiddleware } from 'redux'
import { render }   from 'react-dom'
import { Provider } from 'react-redux'
import thunk        from 'redux-thunk'
import reducers     from './reducers'
import Routes       from './routes'

// 定义根组件
const Root  = () => (
  <Provider store={ createStore(reducers, applyMiddleware(thunk)) }>
    <Routes />
  </Provider>
)
render(<Root />, document.querySelector('#root'))
         
 
 
 
 shengxian/reducers/addr.js 
 
import { mergeState } from '@boluome/common-lib'

const initialState = {
}

const addr = (state = initialState, action) => {
  switch (action.type) {
    case 'ADDR_INIT':
      return initialState
    case 'ADDR_RESET':
      return mergeState(state, action)
    default: return state
  }
}

export default addr
         
 
 
 
 shengxian/reducers/app.js 
 
import { mergeState } from '@boluome/common-lib'

const initialState = {
  limit:    20,
  cityName: '上海',
  tip:      true,
}

const app = (state = initialState, action) => {
  switch (action.type) {
    case 'ADD_RESET':
      return mergeState(state, action)
    default: return state
  }
}

export default app
         
 
 
 
 shengxian/reducers/detail.js 
 
import { mergeState } from '@boluome/common-lib'

const initialState = {
  data:          ['AiyWuByWklrrUDlFignR', 'TekJlZRVCjLFexlOCuWn', 'IJOtIlfsYdTyaDTRVrLI'],
  initialHeight: 200,
  num:           1,
  detMask:       false,
}
const detail = (state = initialState, action) => {
  switch (action.type) {
    case 'DET_INIT':
      return initialState
    case 'DET_RESET':
      return mergeState(state, action)
    default: return state
  }
}

export default detail
         
 
 
 
 shengxian/reducers/index.js 
 
import { combineReducers } from 'redux'
// 引入reducers
import app  from './app'
import detail  from './detail'
import order  from './order'
import addr  from './addr'
import sear  from './sear'
import orderDetails  from './orderDetails'
// 组合reducers
export default combineReducers({
  app, detail, order, addr, sear, orderDetails,
})
         
 
 
 
 shengxian/reducers/order.js 
 
import { mergeState } from '@boluome/common-lib'

const initialState = {
  invoiceName: '',
  other:       true,
}
const order = (state = initialState, action) => {
  switch (action.type) {
    case 'DER_RESET':
      return mergeState(state, action)
    case 'DER_INIT':
      return initialState
    default: return state
  }
}

export default order
         
 
 
 
 shengxian/reducers/orderDetails.js 
 
import { mergeState } from '@boluome/common-lib'

const initialState = {
}

const orderDetails = (state = initialState, action) => {
  switch (action.type) {
    case 'ODL_RESET':
      return mergeState(state, action)
    case 'ODL_INIT':
      return initialState
    default: return state
  }
}

export default orderDetails
         
 
 
 
 shengxian/reducers/sear.js 
 
import { mergeState } from '@boluome/common-lib'

const initialState = {
}
const sear = (state = initialState, action) => {
  switch (action.type) {
    case 'SEA_RESET':
      return mergeState(state, action)
    default: return state
  }
}

export default sear
         
 
 
 
 shengxian/routes.js 
 
import React from 'react'
import { Router, Route, browserHistory, IndexRoute } from 'react-router'
// 路由配置
const Routes = () => (
  <Router history={ browserHistory } >
    <Route path='/shengxian' component={ require('react-router?name=root!./components/root') } >
      <IndexRoute component={ require('react-router?name=app!./containers/app') } />
      <Route path='city' component={ require('react-router?name=city!./containers/city') } />
      <Route path=':channel/detail/:areaId/:commodityCode' component={ require('react-router?name=detail!./containers/detail') } />
      <Route path=':channel/order/:contactId' component={ require('react-router?name=order!./containers/order') } />
      <Route path=':channel/addr/:contactId' component={ require('react-router?name=addr!./containers/addr') } />
      <Route path=':channel/sear' component={ require('react-router?name=sear!./containers/sear') } />
      <Route path='orderDetails/:orderNo' component={ require('react-router?name=orderDetails!./containers/orderDetails') } />
    </Route>
  </Router>
)
export default Routes
         
 
 
 
 shengxian/style/app.scss 
 
.app{
    height: 100%;
    .tip{
      font-size:0.24rem;
      color:#ff6e19;
      background:#fefceb;
      height: 0.55rem;
      line-height: 0.55rem;
      padding: 0 0.3rem;
      text-indent: 0;
      position: relative;
      white-space: nowrap;
      overflow: hidden;
      text-overflow:ellipsis;
      .am-icon-md{
        display: inline-block;
        position: absolute;
        top: 0.1rem;
        right: 0.3rem;
        width: 0.35rem;
        height: 0.35rem;
      }
    }
    .top{
      height: 0.88rem;
      font-size: 0.28rem;
      padding: 0 0.3rem;
      position: relative;
      .locCity{
        height: 100%;
        line-height: 0.88rem;
        font-size: 0.32rem;
        .am-icon-md{
          width: 0.32rem;
          height: 0.2rem;
        }
      }
      .search{
        float: right;
        position: absolute;
        top: 0.22rem;
        right: 0.3rem;
      }
    }
    .productList{
      .wrap{
        background: #f5f5f9;
        .list{
          background: #ffffff;
        }
      }
    }
}
.listitem_shop{
  width: 100%;
  padding: 0.22rem 0.24rem;
  box-sizing: border-box;
  border-bottom: 0.01rem solid #d8d8d8;
  background: #ffffff;
  position: relative;
  .list_mask{
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    background: rgba(255, 255, 255, 0.4);
    z-index: 1;
  }
  .pic{
    display: inline-block;
    width:1.3rem;
    height:1.3rem;
    float: left;
    img{
      width:1.3rem;
      height:1.3rem;
      border-radius: 0.05rem;
    }
  }
  .info{
    padding: 0 0 0 0.2rem;
    box-sizing: border-box;
    width: calc(100% - 1.3rem);
    display: inline-block;
    h1{
      margin: 0.1rem 0;
      font-size:0.28rem;
      color:#333333;
      font-weight: 500;
      white-space: nowrap;
      overflow: hidden;
      text-overflow:ellipsis;
    }
    >p{
      color:#999999;
      margin: 0.1rem 0;
      font-size:0.24rem;
    }
    .bottomPart{
      >p{
        font-size:0.24rem;
        color:#ff4848;
        height: 0.5rem;
        line-height: 0.5rem;
        display: inline-block;
      }
      .buyBtn{
        display: inline-block;
        float: right;
        height: 0.5rem;
        .am-icon-md{
          position: relative;
          top: 0.02rem;
          float: right;
        }
        span{
          float: right;
          display: inline-block;
          width: 0.5rem;
          line-height: 0.5rem;
          font-size:0.28rem;
          color:#404040;
          text-align: center;
        }
      }
    }
  }
}
.am-tabs-bar .am-tabs-tab{
  color:#adadad;
}
.am-tabs-bar .am-tabs-tab-active{
  color:#333333;
}
.am-tabs-ink-bar{
  background-color: #ffab00;
}
.mask-container{
  z-index: 3000;
}
.am-modal-mask{
  z-index: 3000;
}
.am-modal-wrap{
  z-index: 3001;
}
.am-toast.am-toast-mask{
  z-index: 3000;
}
.am-picker-popup-mask, .am-picker-popup-wrap{
  z-index: 3000;
}
.noServ{
  width: 100%;
  height: 100%;
  position: relative;
  .empShop{
    width: auto;
    height: auto;
    display: inline-block;
    position: absolute;
    left: 50%;
    top: 40%;
    transform: translateX(-50%) translateY(-50%);
    -webkit-transform:translateX(-50%) translateY(-50%);
    text-align: center;
    img{
      width: 2.5rem;
      height: 2.5rem;
    }
    .am-icon-md{
      width: 2.5rem;
      height: 2.5rem;
    }
    p{
      font-size: 0.28rem;
      line-height: 1.5;
      color:#999999;
    }
  }
}
         
 
 
 
 shengxian/style/cart.scss 
 
body{

}
.buy_cart{
  background: #ffffff;
  width: 100%;
  height: 1rem;
  border-top: 1px solid #e5e5e5;
  position: relative;
  .cart_mask{
    z-index: 1001;
    background:rgba(0,0,0,0.5);
    width: 100%;
    position: absolute;
    top: 0;
    left: 0;
  }
  .cart_listwarp{
    z-index: 1002;
    width: 100%;
    position: absolute;
    top: 0;
    left: 0;
    background:#f8f8f8;
    padding-left: 0.3rem;
    border-top: 1px solid #e5e5e5;
    box-sizing: border-box;
    .cart_titile{
      height: 0.44rem;
      line-height: 0.44rem;
      margin: 0.18rem 0;
      padding-left: 0.2rem;
      border-left: 0.1rem solid #ffab00;
      font-size:0.32rem;
      color:#666666;
      display: flex;
      display: -webkit-flex;
      justify-content: space-between;
      -webkit-justify-content: space-between;
      .clear_noeff{
        font-size:0.24rem;
        color:#999999;
      }
      .delete_icon{
        float: right;
        margin-right: 0.3rem;
        font-size:0.24rem;
        color:#999999;
      }
      .am-icon-md{
        width: 0.27rem;
        height: 0.27rem;
        margin-right: 0.1rem;
        position: relative;
        top: 0.06rem;
      }
    }
    >div{
      max-height: 5rem;
      overflow: auto;
      margin-left: -0.3rem;
      padding-left: 0.3rem;
      background: #ffffff;
    }
  }
  .cart_sum{
    z-index: 1003;
    position: relative;
    background: #ffffff;
    height: 100%;
    .cart_info{
      float: left;
      height: 100%;
      width: calc( 100% - 3rem);
      display: inline-block;
      box-sizing: border-box;
      padding-left: 0.3rem;
      .cart_icon{
        display: inline-block;
        width: 0.7rem;
        float: left;
        padding: 0.15rem 0;
        position: relative;
        .am-icon-md{
          width: 0.7rem;
          height: 0.7rem;
        }
        .cart_badge{
          position: absolute;
          top: 0;
          right: -0.15rem;
          display: inline-block;
          height: 0.3rem;
          line-height: 0.3rem;
          border-radius: 0.15rem;
          font-size: 0.24rem;
          background:#ff4848;
          padding: 0 0.1rem;
          color:#ffffff;
        }
      }
      .cart_price{
        width: calc( 100% - 0.7rem);
        padding: 0.15rem 0;
        text-indent: 0.3rem;
        line-height: 0.25rem;
        font-size: 0.2rem;
        color:#999999;
        .sum_price{
          font-size:0.4rem;
          color: #ff4848;
          line-height: 0.45rem;
        }
      }
    }
    .cart_btn{
      float: left;
      display: inline-block;
      color: #ffffff;
      width:3rem;
      height:100%;
      font-size: 0.38rem;
      line-height: 1rem;
      text-align: center;
    }
  }
}
         
 
 
 
 shengxian/style/detail.scss 
 
*{margin: 0;padding: 0}
.detail{
  height: 100%;
  width: 100%;
  position: relative;
  .picDatiles{
    width: 100%;
    background: #ffffff;
    >p{
      height: 0.88rem;
      line-height: 0.88rem;
      padding: 0 0.3rem;
      font-size: 0.28rem;
      box-sizing: border-box;
      border-bottom: 1px solid #e5e5e5;
    }
    >div{
      padding: 0.3rem;
      box-sizing: border-box;
      img{
        width: 100%;
      }
    }
  }
  .deMask{
    width: 100%;
    height: 100%;
    position: absolute;
    background: rgba(0,0,0,0.5);
    z-index: 2000;
  }
  .deInfo{
    background:#ffffff;
    border-radius: 0.05rem;
    width: 85%;
    padding: 0.3rem 0.3rem 0;
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translateX(-50%) translateY(-50%);
    -webkit-transform:translateX(-50%) translateY(-50%);
    z-index: 2001;
    h2{
      font-size: 0.32rem;
      color:#333333;
      padding: 0.2rem;
      text-align: center;
    }
    p{
      font-size: 0.28rem;
      color:#999999;
      padding: 0.15rem 0;
    }
    .specInfo{
      border-bottom:1px solid #cccccc;
      padding: 0.3rem 0 0.4rem;
      span{
        font-size: 0.24rem;
        display: inline-block;
        border:1px solid #cccccc;
        border-radius: 0.25rem;
        padding: 0 0.25rem;
        height:0.5rem;
        line-height:0.5rem;
        margin-right: 0.2rem;
      }
      .selectSpec{
        color: #ffab00;
        background: rgba(255,171,0,0.05);
        border: 1px solid #ffab00;
      }
    }
    .specNum{
      height: 1rem;
      line-height: 1rem;
      font-size:0.28rem;
      color:#999999;
      .buyBtn{
        display: inline-block;
        float: right;
        height: 0.5rem;
        margin-top: 0.25rem;
        .am-icon-md{
          position: relative;
          top: 0.02rem;
          float: right;
        }
        span{
          float: right;
          display: inline-block;
          width: 0.5rem;
          line-height: 0.5rem;
          font-size:0.28rem;
          color:#404040;
          text-align: center;
        }
      }
    }
    .addSpec{
      height: 1.1rem;
      line-height: 1.1rem;
      font-size: 0.36rem;
      color: #ff4848;
      background:#f8f8f8;
      margin: 0 -0.3rem;
      padding: 0 0.3rem;
      border-radius: 0 0 0.05rem 0.05rem;
      span{
        display: inline-block;
        float: right;
        height: 0.7rem;
        line-height: 0.7rem;
        margin-top: 0.2rem;
        padding: 0 0.36rem;
        font-size: 0.36rem;
        color: #ffffff;
        background: #ffab00;
        border-radius: 0.05rem;
      }
    }
  }
  .listitem{
    width: 100%;
    padding: 0.22rem 0.24rem;
    box-sizing: border-box;
    border-bottom: 0.01rem solid #d8d8d8;
    background: #ffffff;
    .pic{
      display: inline-block;
      width:1.3rem;
      height:1.3rem;
      float: left;
      img{
        width:1.3rem;
        height:1.3rem;
        border-radius: 0.05rem;
      }
    }
    .info{
      padding: 0 0 0 0.2rem;
      box-sizing: border-box;
      width: calc(100% - 1.3rem);
      display: inline-block;
      h1{
        margin: 0.1rem 0;
        font-size:0.28rem;
        color:#333333;
        font-weight: 500;
        white-space: nowrap;
        overflow: hidden;
        text-overflow:ellipsis;
      }
      >p{
        color:#999999;
        margin: 0.1rem 0;
        font-size:0.24rem;
      }
      .bottomPart{
        >p{
          font-size:0.24rem;
          color:#ff4848;
          height: 0.5rem;
          line-height: 0.5rem;
          display: inline-block;
        }
        .buyBtn{
          display: inline-block;
          float: right;
          height: 0.5rem;
          .am-icon-md{
            position: relative;
            top: 0.02rem;
            float: right;
          }
          span{
            float: right;
            display: inline-block;
            width: 0.5rem;
            line-height: 0.5rem;
            font-size:0.28rem;
            color:#404040;
            text-align: center;
          }
        }
      }
    }
  }
}
.detailWrap{
  height: calc(100% - 1rem);
  width: 100%;
  overflow-y: auto;
  .detailInfo{
    padding: 0.3rem;
    box-sizing: border-box;
    background: #ffffff;
    h2{
      font-size:0.32rem;
      color:#333333;
      .specTip{
        display: inline-block;
        float: right;
        padding: 0.03rem 0.05rem;
        border: 1px solid #ffab00;
        border-radius: 0.03rem;
        font-size: 0.18rem;
        color: #ffab00;
        text-align: center;
      }
    }
    >div{
      margin-top: 0.2rem;
      line-height: 0.5rem;
      font-size: 0.24rem;
      color:#ff4848;
      .addCart{
        float: right;
        display: inline-block;
        background:#ffab00;
        border-radius:0.04rem;
        padding: 0 0.13rem;
        height: 0.5rem;
        line-height: 0.5rem;
        font-size:0.24rem;
        color:#ff4848;
        color:#ffffff;
      }
      .buyBtn{
        display: inline-block;
        float: right;
        height: 0.5rem;
        .am-icon-md{
          position: relative;
          top: 0.02rem;
          float: right;
        }
        span{
          float: right;
          display: inline-block;
          width: 0.5rem;
          line-height: 0.5rem;
          font-size:0.28rem;
          color:#404040;
          text-align: center;
        }
      }
    }
  }
  .otherInfo{
    border-top: 1px solid #e5e5e5;
    background: #ffffff;
    padding: 0.3rem;
    box-sizing: border-box;
    font-size:0.24rem;
    color:#999999;
    .place{
      font-size:0.28rem;
      line-height: 0.45rem;
      span{
        color:#333333;
        margin-left: 0.3rem;
      }
    }
  }
}
.mask-container{
  z-index: 3000;
}
.am-modal-mask{
  z-index: 3000;
}
.am-toast.am-toast-mask{
  z-index: 3000;
}
.am-modal-wrap{
  z-index: 3001;
}
         
 
 
 
 shengxian/style/order.scss 
 
*{margin: 0;padding: 0}

.orderWrap{
  height: 100%;
  width: 100%;
  position: relative;
  .bottomDiv{
    width: 100%;
    position:absolute;
    z-index: 1;
    left: 0;
    bottom: 0;
    height: 1rem;
    background: #ffffff;
    padding-left: 0.24rem;
    box-sizing: border-box;
    border-top: 0.01rem solid #e8e8e9;
    font-size: 0.28rem;
    .info{
      display: inline-block;
      width: calc(100% - 2.8rem);
      height: 100%;
      line-height: 0.99rem;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      float: left;
      span{
        color: #ff4848;
        margin-right: 0.15rem;
        i{
          color: #ff4848;
          font-size: 0.28rem;
        }
      }
      i{
        font-style: normal;
        font-size: 0.2rem;
        color:#999999;
      }
    }
    .btn{
      display: inline-block;
      width: 2.8rem;
      height: 100%;
      border-radius: 0;
      line-height: 0.99rem;
      background: #ffab00;
      color: #ffffff;
      text-align: center;
      font-size: 0.38rem !important;
    }
  }
}
.order{
  width: 100%;
  height: calc( 100% - 1rem );
  overflow-y: auto;
  box-sizing: border-box;
  padding-bottom: 1.2rem;
  .postDate .am-list-line .am-list-extra{
    color:#333333;
  }
  .listWrap{
    background: #ffffff;
    >p{
      border-bottom: 0.01rem solid #d8d8d8;
      height: 0.9rem;
      line-height: 0.9rem;
      padding: 0 0.3rem;
      font-size: 0.28rem;
      color:#999999;
      text-align: center;
      span{
        float: right;
      }
    }
    .freight{
      color:#333333;
      text-align: left;
    }
  }
  .listitem{
    width: calc(100% - 0.3rem);
    padding: 0.22rem 0.3rem 0.22rem 0;
    margin-left: 0.3rem;
    box-sizing: border-box;
    border-bottom: 0.01rem solid #d8d8d8;
    background: #ffffff;
    .pic{
      display: inline-block;
      width:1.4rem;
      height:1.4rem;
      float: left;
      img{
        width:1.4rem;
        height:1.4rem;
        border-radius: 0.05rem;
      }
    }
    .info{
      padding: 0 0 0 0.2rem;
      box-sizing: border-box;
      width: calc(100% - 1.4rem);
      display: inline-block;
      h1{
        height: 1rem;
        margin: 0;
        font-size:0.28rem;
        color:#333333;
        font-weight: 500;
      }
      .bottomPart{
        font-size:0.28rem;
        color:#ff4848;
        span{
          float: right;
          color:#999999;
        }
      }
    }
  }
}

.fapiao{
  h2{
    height: 0.88rem;
    line-height: 0.88rem;
    text-align: center;
    font-size: .32rem;
    color: #333333;
    background-color: #ffffff;
    font-weight: 300;
  }
  .inputWrap{
    padding: 0.4rem 0.3rem;
    textarea{
      resize: none;
      width: 100%;
      padding: 0.35rem 0.25rem;
      box-sizing: border-box;
      font-size: .28rem;
      border: none;
      border-radius: 5px;
    }
  }
  .fpbtn{
    width: 90%;
    height: .9rem;
    background: #ffab00;
    color: #fff;
    font-size: .36rem;
    font-weight: 300;
    text-align: center;
    line-height: .9rem;
    position: absolute;
    left: 5%;
    border-radius: .06rem;
  }
}
.am-picker-popup-header-left{color: #999 !important;}
.am-picker-popup-title{color: #333 !important;}
.am-picker-popup-item{color: #ffab00;}
.am-list-item .am-list-line .am-list-content{font-size: 28px;}
.am-list-item .am-list-line .am-list-extra{font-size: 28px;}
         
 
 
 
 shengxian/style/orderDetails.scss 
 
*{margin: 0;padding: 0}
@mixin all_center($row: center) {
  display: flex;
  display: -webkit-flex;
  align-items: center;
  -webkit-align-items: center;
  justify-content: $row;
  -webkit-justify-content: $row;
}

.orderDetails{
  width: 100%;
  height: 100%;
  .wuliutip{
    .am-list-extra{
      color: #666666 !important;
    }
  }
  .logo{
    width: 0.75rem;
    height: 0.3rem;
    position: relative;
    top: -0.03rem;
    margin-right: 0.15rem;
  }
  .jianhui{
    display: inline-block;
    vertical-align: middle;
    background: #ff4848;
    border-radius: .06rem;
    width: .32rem;
    height: .32rem;
    font-size: .2rem;
    color: #fff;
    line-height: .32rem;
    text-align: center;
    margin-right: .1rem;
    float: left;
  }
  .odlcenter{
    width: 100%;
    padding-bottom: 2rem;
  }
  .tgTip{
    background: #ffffff;
    height: 0.9rem;
    line-height: 0.9rem;
    font-size: 0.28rem;
    color: #ffab00;
    padding:  0 0.3rem;
    box-sizing: border-box;
    border-top: 1px solid #e5e5e5;
    border-bottom: 1px solid #e5e5e5;
  }
  .numpri{
    font-size: 0.28rem;
    color: #ff4848;
  }
  .realsubpri{
    position: relative;
    .am-icon-md{
      width: 0.38rem;
      height: 0.38rem;
      position: absolute;
      top: -0.02rem;
      right: 0;
    }
  }
  .am-list-item .am-list-line .am-list-content{
    font-size:0.28rem;
    color:#333333;
    i{
      font-style:normal;
      font-size:0.26rem;
      color:#999999;
    }
  }
  .am-list-item .am-list-line .am-list-extra{
    font-size:0.28rem;
    color:#333333;
    overflow: initial;
  }
  .am-list-item .am-input-control input, .am-list-item .am-input-label{
    font-size:0.28rem;
    color:#333333;
  }
  .s-promotion {
    margin-bottom: 1.5rem;
  }
}

.am-modal-button-group-h .am-modal-button{
  color: #ffab00;
}
// 列表
.comlist{
  @include all_center(space-between);
  font-size: 0.28rem;
  color: #333333;
  p{
    margin: 0.2rem 0;
    white-space: normal;
    &:nth-child(2){
      @include all_center(none);
    }
  }
  span{
    &:nth-child(1){
      font-size: 0.24rem;
      color: #adadad;
    }
    &:nth-child(2){
      min-width: 1.5rem;
      text-align: right;
    }
  }
}

// 快递配送
.discontact{
  >h3{
    border-top: 1px solid #e5e5e5;
    padding: 0.2rem 0.3rem;
    font-size: 0.28rem;
    color: #333333;
    background: #ffffff;
    font-weight: 300;
    span{
      float: right;
    }
  }
  .nocant{
    border-top: 1px solid #e5e5e5;
    border-bottom: 1px solid #e5e5e5;
    background: #ffffff;
    padding: 0.2rem 0.3rem;
    h3{
      float: left;
      line-height: 1.5;
      font-size: 0.28rem;
      color: #333333;
      font-weight: 300;
      margin-right: 0.4rem;
    }
    >div{
      display: table;
    }
    p{
      font-size: 0.28rem;
      color: #333333;
      line-height: 1.5;
      .am-icon-md{
        margin-right: 0.2rem;
      }
      i{
        font-style: normal;
        margin: 0 0.5rem 0 0.3rem;
      }
      span{
        display: inline-block;
        margin-left: 0.5rem;
        font-size: 0.2rem;
        color:#ffab00;
        padding: 0.05rem 0.1rem;
        background:#fff3db;
        border-radius: 0.04rem;
        border: 1px solid #ffab00;
      }
    }
  }
}
// 提示
.fapiao{
  border-top: 1px solid #e5e5e5;
  border-bottom: 1px solid #e5e5e5;
  background: #ffffff;
  padding: 0.2rem 0.3rem;
  h3{
    float: left;
    width: 1rem;
    line-height: 1.5;
    font-size: 0.28rem;
    color: #333333;
    font-weight: 300;
  }
  >div{
    display: table;
    width: calc(100% - 1rem);
  }
  p{
    font-size: 0.28rem;
    line-height: 1.5;
    text-align: right;
    color:#333333;
  }
  .addr{
    color: #666666;
    font-size: 0.24rem;
  }
}

// logtitle
.log_wrap{
  width: 100%;
  height: 100%;
  overflow: auto;
}
.logtitle{
  box-sizing: border-box;
  padding: 0.3rem;
  background: #ffffff;
  >p{
    display: inline-block;
    position: relative;
    width: 1.4rem;
    height: 1.4rem;
    float: left;
    img{
      width: 100%;
      height: 100%;
    }
    .imgtip{
      width: 100%;
      height: 0.3rem;
      line-height: 0.3rem;
      background: #333333;
      color: #ffffff;
      text-align: center;
      position: absolute;
      left: 0;
      bottom: 0;
    }
  }
  .info{
    display: inline-block;
    width: calc(100% - 1.4rem);
    padding-left: 0.2rem;
    box-sizing: border-box;
    p{
      font-size: 0.28rem;
      color: #999999;
      &:nth-child(2){
        margin: 0.2rem 0;
      }
    }
  }
}
.loglist{
  box-sizing: border-box;
  padding: 0.3rem;
  background: #ffffff;
  >div{
    border-left: 1px solid #e5e5e5;
    padding-left: 0.3rem;
    div{
      border-bottom: 1px solid #e5e5e5;
      padding: 0.3rem 0;
      position: relative;
      &:before{
        content: '';
        display: inline-block;
        width: 0.2rem;
        height: 0.2rem;
        border-radius: 50%;
        border: 1px solid #e5e5e5;
        position: absolute;
        top: calc(50% - 0.1rem);
        left: -0.4rem;
        background: #e5e5e5;
      }
      &:last-child{
        &:before{
          content: '';
          display: inline-block;
          width: 0.2rem;
          height: 0.2rem;
          border-radius: 50%;
          border: 1px solid #e5e5e5;
          position: absolute;
          top: calc(50% - 0.1rem);
          left: -0.4rem;
          background: #ffab00;
        }
      }
      p{
        font-size: 0.28rem;
        color: #999999;
        line-height: 1.5;
      }
    }
  }
}
         
 
 
 
 shengxian/style/sear.scss 
 
*{margin: 0;padding: 0}
.sear{
  height: 100%;
  height: 100%;
  position: relative;
  display: flex;
  display: -webkit-flex;
  flex-direction: column;
  -webkit-flex-direction: column;
  .searWarp{
    flex: auto;
    position: relative;
  }
  .listitem{
    width: 100%;
    padding: 0.22rem 0.24rem;
    box-sizing: border-box;
    border-bottom: 0.01rem solid #d8d8d8;
    background: #ffffff;
    .pic{
      display: inline-block;
      width:1.3rem;
      height:1.3rem;
      float: left;
      img{
        width:1.3rem;
        height:1.3rem;
        border-radius: 0.05rem;
      }
    }
    .info{
      padding: 0 0 0 0.2rem;
      box-sizing: border-box;
      width: calc(100% - 1.3rem);
      display: inline-block;
      h1{
        margin: 0.1rem 0;
        font-size:0.28rem;
        color:#333333;
        font-weight: 500;
        white-space: nowrap;
        overflow: hidden;
        text-overflow:ellipsis;
      }
      >p{
        color:#999999;
        margin: 0.1rem 0;
        font-size:0.24rem;
      }
      .bottomPart{
        >p{
          font-size:0.24rem;
          color:#ff4848;
          height: 0.5rem;
          line-height: 0.5rem;
          display: inline-block;
        }
        .buyBtn{
          display: inline-block;
          float: right;
          height: 0.5rem;
          .am-icon-md{
            position: relative;
            top: 0.02rem;
            float: right;
          }
          span{
            float: right;
            display: inline-block;
            width: 0.5rem;
            line-height: 0.5rem;
            font-size:0.28rem;
            color:#404040;
            text-align: center;
          }
        }
      }
    }
  }
}
.mask-container{
  z-index: 3000;
}
.am-modal-mask{
  z-index: 3000;
}
.am-toast.am-toast-mask{
  z-index: 3000;
}
.am-modal-wrap{
  z-index: 3001;
}
         
 
 
 
 shengxian/style/selectTab.scss 
 
.select_tabs{
  position: relative;
  background: #ffffff;
  color:#adadad;
  .select_icon{
    display: inline-block;
    position: absolute;
    top: 0.28rem;
    right: 0.24rem;
    width: 0.33rem;
    height: 0.33rem;
    z-index: 2;
    transition: .3s ease;
    .am-icon-md{
      width: 0.33rem;
      height: 0.33rem;
    }
  }
  .select_cro{
    height: 0.9rem;
    width: calc( 100% - 0.88rem);
    overflow: hidden;
    p{
      font-size: 0.28rem;
      position: relative;
      display: inline-block;
      height: 0.9rem;
      line-height: 0.9rem;
      white-space: nowrap;
      .select_li{
        display: inline-block;
        padding: 0 0.4rem;
        position: relative;
      }
      .select_foucs{
        position: absolute;
        bottom: 0;
        left: 0;
        display: inline-block;
        transition: .3s ease;
      }
    }
  }
  .select_shade{
    z-index: 1;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: auto;
    overflow: hidden;
    background: #ffffff;
    p{
      height: 0.9rem;
      line-height: 0.9rem;
      font-size: 0.28rem;
      width: calc( 100% - 0.92rem);
      text-indent: 0.24rem;
    }
    >div{
      width: 100%;
      border-top: 1px solid #e5e5e5;
      border-bottom: 1px solid #e5e5e5;
      padding: 0.15rem 0.24rem;
      box-sizing: border-box;
      .select_li{
        display: inline-block;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        width: 25%;
        height: 0.75rem;
        line-height: 0.45rem;
        padding: 0.15rem 0.1rem;
        box-sizing: border-box;
        font-size: 0.28rem;
      }
    }
  }
}
