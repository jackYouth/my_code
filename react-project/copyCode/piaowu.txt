         
 
 
 
 piaowu/actions/addr.js 
 

export const addrReset = data => ({
  type: 'ADDR_RESET',
  ...data,
})
         
 
 
 
 piaowu/actions/app.js 
 
import { get, getStore, setStore } from '@boluome/common-lib'

export const appReset = data => ({
  type: 'APP_RESET',
  ...data,
})

const filterdata = {
  categoryCode: [
    {
      code: 0,
      text: '全部分类',
    },
  ],
  sort: [
    {
      code: 0,
      text: '默认排序',
    },
    {
      code: 'time',
      text: '按时间',
    },
    {
      code: 'hot',
      text: '按热度',
    },
  ],
  timeRange: [
    {
      code: 0,
      text: '全部时间',
    },
    {
      code: 'in_week',
      text: '一周内',
    },
    {
      code: 'in_month',
      text: '一月内',
    },
  ],
}
const defiltered = {
  categoryCode: 0,
  sort:         0,
  timeRange:    0,
}

export const resetData = (cityArr, categoryArr, cityName, filtered) => dispatch => {
  const channel = getStore('piaowu_channel', 'session')
  const cityNow = cityArr[channel].filter(o => o.name.indexOf(cityName) >= 0)
  setStore('piaowu_cityCode', cityNow[0].channelCityId, 'session')
  filterdata.categoryCode = [
    {
      code: 0,
      text: '全部分类',
    },
    ...categoryArr[channel],
  ]
  dispatch(
    appReset({
      channel,
      cityArr,
      categoryArr,
      offset:    0,
      cityName:  cityNow[0].name,
      filtering: false,
      filtered:  filtered || defiltered,
      filterdata,
    })
  )
}
export const getActivityCategory = (cityArr, categoryArr, cityName) => dispatch => {
  const channel = getStore('piaowu_channel', 'session')
  console.log(channel, cityArr)
  if (cityArr && cityArr[channel]) {
    console.log(cityArr, categoryArr, cityName)
    dispatch(resetData(cityArr, categoryArr, cityName))
  } else {
    const getURL = (sendURL, sendData) => {
      return new Promise((resolve, reject) => {
        get(sendURL, sendData).then(({ code, data, message }) => {
          if (code === 0) {
            resolve(data)
          } else {
            reject(new Error(message))
          }
        })
      })
    }
    const request = {
      citys: () => {
        return getURL(`/basis/v1/piaowu/${ channel }/cities`)
      },
      categorys: () => {
        return getURL('/piaowu/queryActivityCategory', { channel })
      },
    }
    const main = () => {
      return Promise.all([request.citys(), request.categorys()])
    }
    // 运行示例
    main().then(value => {
      dispatch(appReset({ filtering: false }))
      console.log(value)
      cityArr = cityArr || {}
      categoryArr = categoryArr || {}
      cityArr[channel] = value[0]
      categoryArr[channel] = value[1].reduce((a, e) => {
        a.push({
          code: e.categoryCode,
          text: e.categoryName,
        })
        return a
      }, [])
      dispatch(resetData(cityArr, categoryArr, cityName))
    }).catch(error => {
      console.log(error)
    })
  }
}
         
 
 
 
 piaowu/actions/detail.js 
 
export const delReset = data => ({
  type: 'DEL_RESET',
  ...data,
})
         
 
 
 
 piaowu/actions/order.js 
 

export const derReset = data => ({
  type: 'DER_RESET',
  ...data,
})
         
 
 
 
 piaowu/actions/orderDetails.js 
 
export const odlReset = data => ({
  type: 'ODL_RESET',
  ...data,
})
         
 
 
 
 piaowu/actions/select.js 
 
import { get, getStore } from '@boluome/common-lib'
import { Loading } from '@boluome/oto_saas_web_app_component'

export const secReset = data => ({
  type: 'SEC_RESET',
  ...data,
})

export const getData = (activityCode, eventId) => dispatch => {
  const closeLoading = Loading()
  get('/piaowu/queryTicketList', {
    channel: getStore('piaowu_channel', 'session'),
    activityCode,
    eventId,
  }).then(({ code, data, message }) => {
    closeLoading()
    if (code === 0) {
      console.log(data)
      dispatch(secReset({
        ticketList: data,
        datali:     data[0] || '',
        num:        0,
      }))
    } else {
      console.log(message)
    }
  })
  .catch(err => {
    closeLoading()
    console.log(err)
  })
}
         
 
 
 
 piaowu/components/addr.js 
 
import React from 'react'
import { MapShowGaode } from '@boluome/oto_saas_web_app_component'

const Addr = ({ addrTitlename, addrnameStr, longitude, latitude }) => {
  if (addrTitlename || addrnameStr) {
    return (
      <MapShowGaode addrTitlename={ addrTitlename } addrnameStr={ addrnameStr } latitude={ latitude } longitude={ longitude } />
    )
  }
  return (
    <div />
  )
}

export default Addr
         
 
 
 
 piaowu/components/app.js 
 
import React, { Component } from 'react'
import { getStore, setStore, removeStore, parseLocName } from '@boluome/common-lib'
import { UserCenter, Mask, Search, SlidePage, CitySearch, Supplier, Listview, Empty } from '@boluome/oto_saas_web_app_component'
import { Icon } from 'antd-mobile'
import SelectTab from './selectTab'
import '../style/app.scss'
import noticket from '../img/noticket.png'

const App = app => {
  const { offset, cityName, cityArr, categoryArr, channel, filtered, filtering, handleChannel, addfun, goDetail } = app
  console.log(app)
  return (
    <div className='app'>
      <UserCenter categoryCode='piaowu' orderTypes='piaowu' />
      <Supplier categoryCode='piaowu' onChange={ result => handleChannel(result, cityArr, categoryArr, channel, cityName) } />
      <SearchTitle app={ app } />
      <Seltab app={ app } />
      <div className='tabs' ref={ node => { if (node) { node.style.height = window.getComputedStyle(node).height } } }>
        { filtering && <SelectTab { ...app } /> }
        <Listview
          listItem={ <Listviewli onClick={ e => goDetail(e) } /> }
          onFetch={ addfun }
          limit={ 20 }
          offset={ offset }
          fetchData={ filtered }
        />
      </div>
    </div>
  )
}

const Seltab = ({ app }) => {
  const { filterdata, filtered, filtering, handlePush } = app
  const categoryCodearr = filterdata.categoryCode.filter(o => o.code === filtered.categoryCode)
  const sortarr = filterdata.sort.filter(o => o.code === filtered.sort)
  const timeRangearr = filterdata.timeRange.filter(o => o.code === filtered.timeRange)
  return (
    <div className='themeWrap'>
      <span style={ categoryCodearr[0].code ? { color: '#ffab00' } : {} } onClick={ () => handlePush(filtering, 'categoryCode') }>
        { categoryCodearr[0].text }
        <Icon style={ filtering === 'categoryCode' ? { transform: 'rotate(180deg)' } : { transform: 'rotate(0deg)' } } type={ categoryCodearr[0].code ? require('svg/piaowu/arrowdowning.svg') : require('svg/piaowu/arrowdown.svg') } />
      </span>
      <span style={ sortarr[0].code ? { color: '#ffab00' } : {} } onClick={ () => handlePush(filtering, 'sort') }>
        { sortarr[0].text }
        <Icon style={ filtering === 'sort' ? { transform: 'rotate(180deg)' } : { transform: 'rotate(0deg)' } } type={ sortarr[0].code ? require('svg/piaowu/arrowdowning.svg') : require('svg/piaowu/arrowdown.svg') } />
      </span>
      <span style={ timeRangearr[0].code ? { color: '#ffab00' } : {} } onClick={ () => handlePush(filtering, 'timeRange') }>
        { timeRangearr[0].text }
        <Icon style={ filtering === 'timeRange' ? { transform: 'rotate(180deg)' } : { transform: 'rotate(0deg)' } } type={ timeRangearr[0].code ? require('svg/piaowu/arrowdowning.svg') : require('svg/piaowu/arrowdown.svg') } />
      </span>
    </div>
  )
}

const Listviewli = ({ data, onClick }) => {
  const { lowPrice, begin, end, name, imgUrlv, venuesName, status } = data
  return (
    <div className='contentBox' onClick={ () => { if (onClick) onClick(data.code) } }>
      <div className='contentinner'>
        <div className='contentImgBox'>
          <img alt='票务' src={ imgUrlv } />
        </div>
        <div className='contentMain'>
          <h2>{ name }</h2>
          <div className='context'>
            <p>{ begin === end ? begin : `${ begin } - ${ end }` }</p>
            <p>{ venuesName }</p>
          </div>
          <div className='price'>
            <span
              className='status'
              style={ status ? {} : { color: '#ffa600', border: '1px solid #ffa600' } }
            >{ status ? '预售' : '售票中' }</span>
            <span className='qi'>起</span>
            <span className='money'>¥{ lowPrice }</span>
          </div>
        </div>
      </div>
    </div>
  )
}

// 取消组件
const Cancel = props => {
  const { handleContainerClose } = props
  return (
    <span className='cancel' onClick={ () => handleContainerClose() }>取消</span>
  )
}

// 搜索列表组件
const Searchlist = props => {
  const { data, searchKey } = props
  const { fullName } = data
  const arr = fullName.split(searchKey)
  const clicklist = () => {
    const piaowuHistory = getStore('piaowu_History') || []
    if (!piaowuHistory.some(o => o === searchKey)) piaowuHistory.push(searchKey)
    setStore('piaowu_History', piaowuHistory)
  }
  return (
    <div className='searchliBox' onClick={ () => { clicklist() } }>
      <p dangerouslySetInnerHTML={{ __html: arr.join(`<i>${ searchKey }</i>`) }} />
    </div>
  )
}

// 搜索历史组件
class Serhistory extends Component {
  constructor(props) {
    super(props)
    const arr = getStore('piaowu_History') || []
    this.state = { arr }
  }

  handleClearhistory() {
    removeStore('piaowu_History')
    this.setState({ arr: [] })
  }

  handleClearonehistory(kk) {
    const piaowuHistory = getStore('piaowu_History')
    let num = 0
    piaowuHistory.map((o, i) => {
      if (o === kk) num = i
      return o
    })
    piaowuHistory.splice(num, 1)
    setStore('piaowu_History', piaowuHistory)

    this.setState({ arr: piaowuHistory })
  }

  render() {
    console.log(this.props)
    const { onKeywordChange } = this.props
    const { arr } = this.state
    if (arr.length > 0) {
      return (
        <div className='serhistory'>
          <p>历史记录</p>
          {
            arr.length > 0 && arr.map(o => {
              return (
                <p key={ Math.random() }>
                  <span onClick={ () => onKeywordChange(o) }>{ o }</span>
                  <Icon onClick={ () => this.handleClearonehistory(o) } type={ require('svg/piaowu/cha.svg') } />
                </p>
              )
            })
          }
          <p onClick={ () => this.handleClearhistory() }>
            <Icon type={ require('svg/piaowu/delete.svg') } />清除历史记录
          </p>
        </div>
      )
    }
    return (
      <div />
    )
  }
}

// 顶部搜索组件
const SearchTitle = ({ app }) => {
  const { filtering, cityArr, categoryArr, cityName, filtered, handleSelct, handlePush, search, goDetail } = app
  return (
    <div className='searchTitle'>
      <span onClick={ () => {
        handlePush(filtering, filtering)
        Mask(
          <SlidePage target='right' showClose={ false } >
            <CitySearch
              localCity={ getStore('currentPosition', 'session') ? parseLocName(getStore('currentPosition', 'session').city) : cityName }
              categoryCode='piaowu'
              handleCityData={ result => { handleSelct(cityArr, categoryArr, result.name, filtered) } }
              api={ cityArr[getStore('piaowu_channel', 'session')] }
            />
          </SlidePage>, { mask: false, style: { position: 'absolute' } })
      } }
      >
        { cityName }
        <Icon type={ require('svg/piaowu/arrowdownall.svg') } />
      </span>
      <form className='search' onClick={ () => {
        handlePush(filtering, filtering)
        Mask(
          <SlidePage target='right' showClose={ false }>
            <Search
              inputPlaceholder={ '请输入搜索内容' }
              listItem={ <Searchlist /> }
              noResult={ <Empty message='没有找到相关演出~' imgUrl={ noticket } /> }
              onFeach={ search }
              rightComponent={ <Cancel /> }
              content={ <Serhistory /> }
              handleResult={ result => { goDetail(result.code) } }
            />
          </SlidePage>, { mask: false })
      } }
      >
        <Icon type={ require('svg/piaowu/sousuo.svg') } />
        <span className='input'>搜索明星、演唱会、场馆</span>
      </form>
    </div>
  )
}

export default App
         
 
 
 
 piaowu/components/detail.js 
 
import React from 'react'
// import { getStore, parseLocName } from '@boluome/common-lib'
import { Mask, SlidePage } from '@boluome/oto_saas_web_app_component'
import { Icon, WhiteSpace, Popup } from 'antd-mobile'
import '../style/detail.scss'
import seat from '../img/seat.png'

const Detail = detail => {
  const { data, goAddr, goSel } = detail
  const onMaskClose = () => {
    console.log('onMaskClose')
  }
  if (data) {
    const { code, lowPrice, begin, end, name, imgUrlv, seatmapUrl, desc, venuesName, venuesAddr, status } = data
    return (
      <div className='detail'>
        <div className='detailmain'>
          <div className='focusPic' style={{ backgroundImage: `url(${ imgUrlv })`, backgroundSize: '2000%', backgroundPosition: 'center', backgroundRepeat: 'no-repeat', backgroundAttachment: 'fixed' }}>
            <div className='focusPicbg' />
            <img alt='票务' src={ imgUrlv } />
            <p>{ name }</p>
          </div>

          <div className='statusShow'>
            <span style={ status ? {} : { color: '#ffa600', border: '1px solid #ffa600' } }>{ status ? '预售' : '售票中' }</span>
            <p><span>¥{ lowPrice }</span>起</p>
          </div>

          <div className='detinfo'>
            <p><span>演出时间：</span><span>{ begin === end ? begin : `${ begin } - ${ end }` }</span></p>
          </div>

          <WhiteSpace size='lg' />

          <div className='detinfo'>
            <p>演出场馆：{ venuesName }</p>
            <img alt='seat' src={ seat } onClick={ () => { Popup.show(<img style={{ width: '100%' }} alt='seat' src={ seatmapUrl } />, { animationType: 'slide-up', onMaskClose }) } } />
          </div>
          <div className='detinfo' style={{ borderTop: 'none' }} onClick={ () => { goAddr(venuesName, venuesAddr) } }>
            <p><span>演出地址：</span><span>{ venuesAddr }</span></p>
            <Icon type={ require('svg/piaowu/arrowright.svg') } />
          </div>

          <WhiteSpace size='lg' />

          <div className='detinfo' onClick={ () => {
            Mask(
              <SlidePage target='right'>
                <div className='zhuyi'>
                  <p>a)演出详情仅供参考，具体信息以现场为准；</p>

                  <p>b)1.2米以下儿童谢绝入场，1.2米以上儿童需持票入场；</p>

                  <p>c)演出票品具有唯一性、时效性等特殊属性，如非活动变
                  更、活动取消、票品错误的原因外，不提供退换票品服务，
                  购票时请务必仔细核对并审慎下单。</p>

                  <p>d)需要开具发票的购票客户，请您在演出/活动开始5天前
                  提供相关发票信息至在线客服，演出/活动结束后将统一
                  由演出/活动主办单位开具增值税发票</p>
                </div>
              </SlidePage>, { mask: false, style: { position: 'absolute' } })
          } }
          >
            <p>注意事项</p>
            <Icon type={ require('svg/piaowu/arrowright.svg') } />
          </div>

          <WhiteSpace size='lg' />

          <div className='detinfo'>
            <p className='flexinfo'><span className='rodtip' />演出详情</p>
          </div>
          <div className='descinfo'>{ desc }</div>
        </div>
        <div className='buyBtn' onClick={ () => { goSel(code) } }><span>选座购票</span></div>
      </div>
    )
  }
  return <div />
}


export default Detail
         
 
 
 
 piaowu/components/order.js 
 
import React from 'react'
import { browserHistory } from 'react-router'
import { Mask, SlidePage, Contact, NewPromotion } from '@boluome/oto_saas_web_app_component'
// import { List, WhiteSpace, InputItem, Modal, Icon } from 'antd-mobile'
import { Icon, List, InputItem, WhiteSpace } from 'antd-mobile'
import '../style/order.scss'
import bg from '../img/bg.png'

const Item = List.Item

const Order = order => {
  console.log(order)
  const {
    channel,
    contact,
    activity,
    event,
    ticket,
    num,
    fee = 0,
    receivingArr,
    receivingStyle,
    receName,
    recePhone,
    curDiscountData,
    handleChangeName,
    handleChangePhone,
    handleCur,
    handleChangecontact,
    handleChangereceivingStyle,
    handleSubmit,
  } = order
  if (event) {
    return (
      <div className='order'>
        <div className='orderwrap'>
          <Oderdetl event={ event } ticket={ ticket } num={ num } />
          <div className='borderimg' style={{ backgroundImage: `url(${ bg })` }} />
          <WhiteSpace size='lg' />
          <List>
            <Item
              arrow='horizontal'
              extra={ `${ activity.venuesName }` }
              onClick={ () => { browserHistory.push(`/piaowu/addr?addrTitlename=${ activity.venuesName }&addrnameStr=${ activity.venuesAddr }`) } }
            >
              演出地址：
            </Item>
          </List>
          <WhiteSpace size='lg' />
          { receivingArr.length > 1 && <div className='recev_sel'>
            { receivingArr.some(e => e === 1) && <span onClick={ () => handleChangereceivingStyle(1) } className={ receivingStyle === 1 ? 'seling' : '' }>快递配送</span> }
            { receivingArr.some(e => e === 2) && <span onClick={ () => handleChangereceivingStyle(2) } className={ receivingStyle === 2 ? 'seling' : '' }>上门自取</span> }
            { receivingArr.some(e => e === 3) && <span onClick={ () => handleChangereceivingStyle(3) } className={ receivingStyle === 3 ? 'seling' : '' }>现场取票</span> }
            { receivingArr.some(e => e === 4) && <span onClick={ () => handleChangereceivingStyle(4) } className={ receivingStyle === 4 ? 'seling' : '' }>电子票</span> }
          </div> }
          <div>
            { receivingStyle === 1 && <Continfo fee={ fee } contact={ contact } handleChangecontact={ handleChangecontact } /> }
            { receivingStyle === 2 && <div className='smzq'>
              <List>
                <InputItem
                  placeholder={ '请输入取票人姓名' }
                  value={ receName }
                  onChange={ e => { handleChangeName(e) } }
                >取票人姓名</InputItem>
                <InputItem
                  placeholder={ '请输入取票人手机号' }
                  maxLength={ 11 }
                  value={ recePhone }
                  onChange={ e => { handleChangePhone(e) } }
                >取票人手机号</InputItem>
              </List>
              <p>自取地址：{ event.smzqAddress }</p>
              <p>自取时间：{ event.smzqTime }</p>
              <p>{ event.smzqMessage }</p>
            </div> }
            { receivingStyle === 3 && <List>
              <InputItem
                placeholder={ '请输入取票人姓名' }
                value={ receName }
                onChange={ e => { handleChangeName(e) } }
              >取票人姓名</InputItem>
              <InputItem
                placeholder={ '请输入取票人手机号' }
                maxLength={ 11 }
                value={ recePhone }
                onChange={ e => { handleChangePhone(e) } }
              >取票人手机号</InputItem>
            </List> }
            { receivingStyle === 4 && <List>
              <InputItem
                placeholder={ '请输入取票人姓名' }
                value={ receName }
                onChange={ e => { handleChangeName(e) } }
              >取票人姓名</InputItem>
              <InputItem
                placeholder={ '请输入取票人手机号' }
                maxLength={ 11 }
                value={ recePhone }
                onChange={ e => { handleChangePhone(e) } }
              >取票人手机号</InputItem>
            </List> }
            { receivingStyle === 3 && <p className='infotip'>现场取票：请携带和所填姓名一致的身份证前往演出地址取票</p> }
            { receivingStyle === 4 && <p className='infotip'>出票成功后，会通过短信将电子票凭证发到上面手机号</p> }
          </div>
          <WhiteSpace size='lg' />
          <NewPromotion handleChange={ res => { handleCur(res) } } orderType='piaowu' channel={ channel } amount={ ticket.dealPrice * num * 1 } count={ num * 1 } />
        </div>
        <div className='sebt_bt'>
          <p className='real_pri'>
            <span className='sebt_cl'>已优惠:{ (curDiscountData && curDiscountData.discount) ? curDiscountData.discount.toFixed(2) : '0.0' }</span>
            <span>实付:<i>¥{ ticket ? (receivingStyle === 1 ? ((ticket.dealPrice * num) + fee).toFixed(2) : (ticket.dealPrice * num).toFixed(2)) : '0.0' }</i></span>
          </p>
          <p className='real_go' onClick={ () => { handleSubmit(curDiscountData, contact, receivingStyle, receName, recePhone) } }>立即下单</p>
        </div>
      </div>
    )
  }
  return (
    <div />
  )
}

// 订单详情组件
const Oderdetl = ({ event, ticket, num }) => {
  const { eventDate, eventWeekday, eventTime, eventImgUrlv } = event
  const { facePrice, dealPrice } = ticket
  return (
    <div className='Oderdetail'>
      <img alt='piaowu' src={ eventImgUrlv } />
      <div className='orderInfo'>
        <p>{ event.name || ticket.name }</p>
        <p>{ `时间：${ eventDate }  ${ eventWeekday }${ eventTime }` }</p>
        { facePrice && <p>{ `票面价：¥${ facePrice }` }</p> }
        <p><span>售价：<i style={{ color: 'ff4848' }}>¥{ dealPrice }</i></span><span>{ `数量：${ num }张` }</span></p>
      </div>
    </div>
  )
}

// 乘客信息组件
const Continfo = ({ fee, contact, handleChangecontact }) => {
  // const { name, gender, phone, city, county, address, detail, houseNum } = contact
  return (
    <div
      className='nocant'
      onClick={ () => {
        Mask(
          <SlidePage target='right' type='root'>
            <Contact handleChange={ res => { handleChangecontact(res) } } contact={ contact } source={ 'piaowu' } />
          </SlidePage>, { mask: false }
        )
      } }
    >
      { contact &&
        <div>
          <p>{ contact.name }<i>{ contact.gender === 1 ? '  女士' : '  先生' }</i>{ contact.phone }{ contact.tag && <span>{ contact.tag }</span> }</p>
          <p className='addr'>{ `${ contact.city }${ contact.county }${ contact.address }${ contact.detail }${ contact.houseNum }` }</p>
          <p>快递费：{ fee }元</p>
        </div>
      }
      { !contact && <p><Icon type={ require('svg/piaowu/add.svg') } />添加收货地址</p> }
      <Icon type={ require('svg/piaowu/arrowright.svg') } />
    </div>
  )
}

export default Order
         
 
 
 
 piaowu/components/orderDetails.js 
 
import React, { Component } from 'react'
import { browserHistory } from 'react-router'
import { OrderDetail } from '@boluome/oto_saas_web_app_component'
import { moment } from '@boluome/common-lib'
import { WhiteSpace, List } from 'antd-mobile'
import { equals } from 'ramda'
import bg from '../img/bg.png'
import '../style/orderDetails.scss'

const Item = List.Item
// id='bl001773304153338'
const OrderDetails = orderDetails => {
  const { orderNo, goPay, login } = orderDetails
  return (
    <div className='orderDetails'>
      { orderNo && <OrderDetail
        content={ <Content orderDetails={ orderDetails } /> }
        id={ orderNo }
        orderType='piaowu'
        login={ login }
        goPay={ () => { goPay(orderNo) } }
      /> }
    </div>
  )
}

class Content extends Component {
  constructor(props) {
    super(props)
    this.state = {}
  }

  componentWillReceiveProps(nextProps) {
    const a = this.props.orderDetailInfo
    const b = nextProps.orderDetailInfo
    if (!equals(a, b)) {
      console.log(b)
    }
  }
  render() {
    const { orderDetailInfo, orderDetails } = this.props
    const { id, price, contact, realPrice, event, ticket, quantity, platformActivity, coupon, createdAt, dispatchWay } = orderDetailInfo
    const { orderNo } = orderDetails
    console.log(orderNo)
    if (id) {
      return (
        <div className='odlcenter'>
          <Oderdetl event={ event } ticket={ ticket } quantity={ quantity } />
          <div className='borderimg' style={{ backgroundImage: `url(${ bg })` }} />

          <WhiteSpace size='lg' />

          <List>
            <Item
              arrow='horizontal'
              extra={ `${ event.venuesName }` }
              onClick={ () => { browserHistory.push(`/piaowu/addr?addrTitlename=${ event.venuesName }&addrnameStr=${ event.venuesAddr }`) } }
            >
              演出地址：
            </Item>
          </List>

          <WhiteSpace size='lg' />

          { dispatchWay === 1 && <div className='discontact'>
            <h3>配送方式：快递配送</h3>
            <div className='nocant'>
              <h3>收获地址：</h3>
              <div>
                <p>{ contact.name }<i>{ contact.gender === 1 ? '  女士' : '  先生' }</i>{ contact.phone }{ contact.tag && <span>{ contact.tag }</span> }</p>
                <p className='addr'>{ `${ contact.city }${ contact.county }${ contact.address }${ contact.detail }${ contact.houseNum }` }</p>
              </div>
            </div>
          </div> }

          { dispatchWay === 2 && <div className='smzq'>
            <p><i>自取地址：</i><span>{ event.smzqAddress }</span></p>
            <p><i>自取时间：</i><span>{ event.smzqTime }</span></p>
            <p><i>自取提示：</i><span>{ event.smzqMessage }</span></p>
          </div> }

          { dispatchWay === 3 && <p className='infotip'>现场取票：请携带和所填姓名一致的身份证前往演出地址取票</p> }

          <WhiteSpace size='lg' />

          <List>
            <Item extra={ <span>{ price }</span> }>总价</Item>
            { platformActivity && <Item extra={ <span className='numpri'>－ ¥{ platformActivity.price }</span> }><span className='jianhui' style={{ background: '#ff6e19' }}>减</span>{ platformActivity.title }</Item> }
            <Item extra={ <span className='numpri'>- ¥{ coupon ? coupon.price : 0.0 }</span> }><span className='jianhui'>红</span>红包抵扣／兑换红包</Item>
            <Item extra={ <span className='realsubpri'>{ `实付 ¥${ realPrice }` }</span> }><span /></Item>
          </List>

          <WhiteSpace size='lg' />

          <List>
            <Item extra={ <span>{ id }</span> }>订单编号</Item>
            <Item extra={ <span>{ moment('YYYY-MM-DD HH:mm:ss')(createdAt) }</span> }>下单时间</Item>
          </List>
        </div>
      )
    }
    return (
      <div />
    )
  }
}

// 订单详情组件
const Oderdetl = ({ event, ticket, quantity }) => {
  const { eventDatetime, eventImgUrlv } = event
  const { facePrice, dealPrice } = ticket
  return (
    <div className='Oderdetail'>
      <img alt='piaowu' src={ eventImgUrlv } />
      <div className='orderInfo'>
        <p>{ event.name || ticket.name }</p>
        <p>{ `时间：${ eventDatetime }` }</p>
        { facePrice && <p>{ `票面价：¥${ facePrice }` }</p> }
        <p><span>售价：<i style={{ color: 'ff4848' }}>¥{ dealPrice }</i></span><span>{ `数量：${ quantity }张` }</span></p>
      </div>
    </div>
  )
}

export default OrderDetails
         
 
 
 
 piaowu/components/root.js 
 
import React from 'react'
import customize from 'customize'

export default customize(
  ({ children }) => (
    <div>{ children }</div>
  )
)
         
 
 
 
 piaowu/components/select.js 
 
import React from 'react'
import { WhiteSpace, Icon } from 'antd-mobile'
import { Empty } from '@boluome/oto_saas_web_app_component'
import SlideTab from './SlideTab'
import '../style/select.scss'
import noticket from '../img/noticket.png'

const Select = sel => {
  const { num, datali, ticketList, data, dataList, handleSelectsub, handleSelectpri, handleChangenum, handleSubmit } = sel
  const qto = [3, 4, 5]
  const qte = [2, 4, 6]
  if (dataList) {
    return (
      <div className='select'>
        <SlideTab data={ data } dataList={ dataList } selectSub={ res => handleSelectsub(res) } />
        <div className='slist_wrap' style={ (!ticketList || ticketList.length === 0) ? { height: 'calc(100% - 0.9rem)' } : {} }>
          {
            (!ticketList || ticketList.length === 0) && <Empty message='票已经被黄牛哥哥吃掉了，下次小觅绝对不会容忍' imgUrl={ noticket } />
          }
          {
            ticketList && ticketList.length > 0 && <div>
              <WhiteSpace size='lg' />
              <div className='pri_list' style={ ticketList && ticketList.length ? { background: '#ffffff' } : {} }>
                {
                  ticketList.map(o => {
                    return (
                      <span
                        className='pri_li'
                        key={ `list${ o.dealPrice * Math.random() }` }
                        onClick={ () => handleSelectpri(o) }
                        style={ o.quantity === 0 ? { color: '#e5e5e5', border: '1px solid #e5e5e5' } : (o.ticketsId === datali.ticketsId) ? { color: '#ffab00', background: '#fffbf2', border: '1px solid #ffab00' } : {} }
                      >
                        { `¥${ o.dealPrice }` }{ o.quantity === 0 ? '（售完）' : '（预定）' }<br />
                        { o.info }
                      </span>
                    )
                  })
                }
              </div>
            </div>
          }
        </div>
        {
          ticketList && ticketList.length > 0 && <div className='select_bottom'>
            <p>选择张数</p>
            <div className='sebt_select'>
              { (datali.quantity > 5 && datali.splitStyle !== 4 && datali.splitStyle !== 2) && <div className='select_indeirect'>
                {
                  qto.map(e => <span key={ `a${ Math.random() }` } onClick={ () => handleChangenum(e) }>{ e }张</span>)
                }
              </div> }
              { (datali.quantity > 6 && datali.splitStyle === 4) && <div className='select_indeirect'>
                {
                  qte.map(e => <span key={ `b${ Math.random() }` } onClick={ () => handleChangenum(e) }>{ e }张</span>)
                }
              </div> }
              <div className='select_deirect'>
                <p>
                  <Icon onClick={ () => { if (datali.splitStyle !== 2) { handleChangenum(num, 0, datali) } } }
                    type={ datali.splitStyle === 2 ? require('svg/piaowu/subh.svg') : require('svg/piaowu/sub.svg') }
                  />
                  <span>{ num }</span>
                  <Icon onClick={ () => { if (datali.splitStyle !== 2) { handleChangenum(num, 1, datali) } } }
                    type={ datali.splitStyle === 2 ? require('svg/piaowu/addh.svg') : require('svg/piaowu/add.svg') }
                  />
                </p>
              </div>
            </div>
            <div className='sebt_bt'>
              <p className='real_pri'>实付:<i>¥{ datali ? (datali.dealPrice * num).toFixed(2) : '0.0' }</i></p>
              <p className='real_go' onClick={ () => { handleSubmit(data.id, datali.ticketsId, num) } }>选好了</p>
            </div>
          </div>
        }
      </div>
    )
  }
  return (
    <div />
  )
}

export default Select
         
 
 
 
 piaowu/components/selectTab.js 
 

import React, { Component } from 'react'
import { Icon } from 'antd-mobile'

import '../style/selectTab.scss'

export default class SelectTab extends Component {
  static defaultProps = {
  }
  constructor(props) {
    super(props)
    this.state = {
      filtering: this.props.filtering,
    }
  }

  componentWillReceiveProps(nextProps) {
    console.log(nextProps)
    // 重置
    const preData = this.state.filtering
    const { filtering } = nextProps
    if (preData !== filtering) this.setState({ filtering })
  }

  componentWillMount() {
    // 数据还原
  }

  handleSelect(filtered, filtering, o) {
    const { cityArr, categoryArr, cityName, handleSelct } = this.props
    filtered[filtering] = o.code
    handleSelct(cityArr, categoryArr, cityName, filtered)
  }

  render() {
    const { filterdata, filtered, handlePush } = this.props
    const { filtering } = this.state
    const dataLi = filterdata
                  && filtering
                  && filterdata[filtering].map(o => {
                    return (
                      <p key={ `${ o.text }${ o.code }` }
                        className='select_li'
                        style={ o.code === filtered[filtering] ? { color: '#ffab00' } : {} }
                        onClick={ () => this.handleSelect(filtered, filtering, o) }
                      >
                        { o.text }
                        { o.code === filtered[filtering] && <Icon type={ require('svg/piaowu/selected.svg') } /> }
                      </p>
                    )
                  })
    if (filtering) {
      return (
        <div className='select_shade' onClick={ () => handlePush(filtering, filtering) }>
          <div className='select_wrap'>
            { dataLi }
          </div>
        </div>
      )
    }
    return <div />
  }
}
         
 
 
 
 piaowu/components/slideTab.js 
 

import React, { Component } from 'react'
// import { Icon } from 'antd-mobile'

import '../style/slideTab.scss'

let startX
let preNode = 'undefined'
let bool = true
const dpr = document.documentElement.clientWidth / window.screen.width
export default class SlideTab extends Component {
  static defaultProps = {
  }
  constructor(props) {
    super(props)
    this.state = {
      dataList: this.props.dataList,
    }
    this.tabWarp = null
    this.tabCro = null
    this.tabFoucs = null
    this.tabSpan = []
    this.translateX = 0
  }

  handleSelect(i, o) {
    // const endAnchor = e.offsetLeft
    if (preNode !== i) {
      if (preNode === 'undefined') {
        preNode = 0
      }
      if (this.props.selectSub) {
        this.props.selectSub(o, this.props.dataList)
      }
      this.tabSpan[preNode].style.color = ''
      this.tabSpan[i].style.color = '#333333'
      this.tabFoucs.style.borderTop = '0.04rem solid #ffab00'
      this.tabFoucs.style.width = this.tabSpan[i].offsetWidth
      this.tabFoucs.style.WebkitTransform = `translateX(${ this.tabSpan[i].offsetLeft }px)`
      if (this.tabWarp) {
        let disX = (this.tabSpan[i].offsetLeft * (-1)) + 150
        const warpWidth = parseFloat(window.getComputedStyle(this.tabWarp).width, 10) - parseFloat(window.getComputedStyle(this.tabCro).width, 10)
        if (disX < (warpWidth * (-1))) {
          disX = warpWidth * (-1)
        }
        if (disX > 0) {
          disX = 0
        }
        this.translateX = disX
        this.tabWarp.style.WebkitTransition = '.3s ease'
        this.tabWarp.style.WebkitTransform = `translateX(${ this.translateX }px)`
      }
      preNode = i
    }
  }


  handleTouchStart(e) {
    // e.preventDefault()
    this.tabWarp.style.WebkitTransition = ''
    startX = e.touches ? e.touches[0].screenX : e.screenX
  }


  handleTouchMove(e) {
    // e.preventDefault()
    const { translateX } = this
    const warpWidth = parseFloat(window.getComputedStyle(this.tabWarp).width, 10) - parseFloat(window.getComputedStyle(this.tabCro).width, 10)
    const movedX = e.touches ? e.touches[0].screenX : e.screenX
    let disX = translateX + ((movedX - startX) * dpr)

    if (disX > 0) {
      disX = 0
    }
    if (disX < (warpWidth * (-1))) {
      disX = warpWidth * (-1)
    }
    if (warpWidth < 0) {
      disX = 0
    }
    this.translateX = disX
    startX = movedX
    this.tabWarp.style.WebkitTransform = `translateX(${ this.translateX }px)`
  }
  handleTouchEnd() {
    // e.preventDefault()
  }

  componentWillReceiveProps(nextProps) {
    // 重置
    const preData = this.state.dataList
    const { dataList } = nextProps
    if (preData !== dataList) {
      // 状态还原
      this.tabSpan[preNode].style.color = ''
      this.tabWarp.style.WebkitTransform = `translateX(${ 0 }px)`
      // 数据还原
      this.tabWarp = null
      this.tabCro = null
      this.tabFoucs = null
      this.tabSpan = []
      this.translateX = 0
      preNode = 'undefined'
      bool = true
      this.setState({ dataList })
    }
  }

  componentWillMount() {
    // 数据还原
    this.tabWarp = null
    this.tabCro = null
    this.tabFoucs = null
    this.tabSpan = []
    this.translateX = 0
    preNode = 'undefined'
    bool = true
  }

  render() {
    const { dataList } = this.state
    const { data } = this.props
    let index = 0
    if (dataList) {
      for (let i = 0; i < dataList.length; i++) {
        if (data && (dataList[i].id === data.id)) {
          index = i
        }
      }
    }
    const dataLi = dataList && dataList.map((o, i) => <span ref={ node => { if (node) { this.tabSpan[i] = node } } } key={ `${ i + 1 }` } className='select_li' onClick={ () => this.handleSelect(i, o) }>{ o.eventDate }<br />{ o.eventWeekday }</span>)
    return (
      <div className='select_tabs'>
        <div className='select_cro' ref={ node => { if (node) { this.tabCro = node } } }>
          <p
            ref={ node => { if (node) { this.tabWarp = node } } }
            onTouchStart={ e => this.handleTouchStart(e) }
            onTouchMove={ e => this.handleTouchMove(e) }
            onTouchEnd={ e => this.handleTouchEnd(e) }
          >
            { dataLi }
            <span className='select_foucs' ref={ node => { if (node && bool) { this.tabFoucs = node; this.handleSelect(index, dataList[index]); bool = false } } } />
          </p>
        </div>
      </div>
    )
  }
}
         
 
 
 
 piaowu/containers/addr.js 
 
import { connect } from 'react-redux'
import { parseQuery }  from '@boluome/common-lib'
import { wrap } from '@boluome/oto_saas_web_app_component'
import { Modal } from 'antd-mobile'
import Addr from '../components/addr'
import { addrReset } from '../actions/addr.js'

const alert = Modal.alert

const mapStateToProps = state => {
  const { addr } = state
  return {
    ...addr,
  }
}

const mapDispatchToProps = dispatch => {
  return {
    dispatch,
  }
}

const mapFunToComponent  = dispatch => {
  return {
    componentWillMount: () => {
      const search = parseQuery(location.search)
      const { addrTitlename, addrnameStr } = search
      const { AMap } = window
      console.log(addrTitlename, addrnameStr)
      AMap.service('AMap.Geocoder', () => {
        const geocoder = new AMap.Geocoder()
        geocoder.getLocation(addrTitlename, (status, result) => {
          if (status === 'complete' && result.info === 'OK') {
            console.log(result)
            const { geocodes } = result
            const { lat, lng } = geocodes[0].location
            dispatch(
              addrReset({
                addrTitlename,
                addrnameStr,
                longitude: lng,
                latitude:  lat,
              })
            )
          } else {
            geocoder.getLocation(addrnameStr, (sta, res) => {
              if (sta === 'complete' && res.info === 'OK') {
                console.log('二次搜索', res, addrTitlename)
                const { geocodes } = res
                const { lat, lng } = geocodes[0].location
                dispatch(
                  addrReset({
                    addrTitlename: addrTitlename || '演出场馆',
                    addrnameStr,
                    longitude:     lng,
                    latitude:      lat,
                  })
                )
              } else {
                console.log('二次搜索', sta, res)
                alert('', '此地址没有解析到结果', [
                  {
                    text:    '确定',
                    onPress: () => {
                      window.history.go(-1)
                    },
                  },
                ])
              }
            })
            // console.log(status, result)
            // alert('', '此地址没有解析到结果', [
            //   {
            //     text:    '确定',
            //     onPress: () => {
            //       window.history.go(-1)
            //     },
            //   },
            // ])
          }
        })
      })
      // const { BMap } = window
      // const myGeo = new BMap.Geocoder()
      // myGeo.getPoint(`${ addrTitlename }${ addrnameStr }`, e => {
      //   if (e) {
      //     console.log(e.lng, e.lat)
      //     dispatch(
      //       addrReset({
      //         addrTitlename,
      //         addrnameStr,
      //         longitude: e.lng,
      //         latitude:  e.lat,
      //       })
      //     )
      //   } else {
      //     alert('', '此地址没有解析到结果', [
      //       {
      //         text:    '确定',
      //         onPress: () => {
      //           window.history.go(-1)
      //         },
      //       },
      //     ])
      //   }
      // })
    },
  }
}

export default
  connect(mapStateToProps, mapDispatchToProps)(
    wrap(mapFunToComponent)(Addr)
  )
         
 
 
 
 piaowu/containers/app.js 
 
import { connect } from 'react-redux'
import { browserHistory } from 'react-router'
import { wrap }    from '@boluome/oto_saas_web_app_component'
import { get, parseLocName, setStore, getStore } from '@boluome/common-lib'
import { Toast } from 'antd-mobile'
import { keys } from 'ramda'
import { getLocationGaode, login } from 'business'
import App from '../components/app'
import { appReset, resetData, getActivityCategory } from '../actions/app.js'

const mapStateToProps = porps => {
  console.log(porps)
  const { app } = porps
  return {
    ...app,
  }
}

const mapDispatchToProps = dispatch => ({

  addfun: (limit, offset, fetchData, onSuccess, datalist) => {
    const a = keys(fetchData).reduce((arr, p) => {
      if (fetchData[p]) arr[p] = fetchData[p]
      return arr
    }, {})
    get('/piaowu/queryActivityList', {
      channel:  getStore('piaowu_channel', 'session'),
      cityCode: getStore('piaowu_cityCode', 'session'),
      limit,
      offset,
      ...a,
    }).then(({ code, data, message }) => {
      if (code === 0) {
        onSuccess(data)
        dispatch(appReset({ offset: datalist.length + data.length }))
      } else {
        console.log(message)
      }
    })
    .catch(err => {
      console.log(err)
    })
  },

  search: (searchKey, cb) => {
    if (searchKey) {
      get('/piaowu/queryActivityList', {
        channel:  getStore('piaowu_channel', 'session'),
        cityCode: getStore('piaowu_cityCode', 'session'),
        search:   searchKey,
      }).then(({ code, data, message }) => {
        if (code === 0) {
          cb(null, data)
        } else {
          console.log(message)
        }
      })
      .catch(err => {
        console.log(err)
      })
    } else {
      cb('searchKey is undefined')
    }
  },

  goDetail: activityCode => {
    dispatch({ type: 'DEL_INIT' })
    browserHistory.push(`/piaowu/detail?channel=${ getStore('piaowu_channel', 'session') }&activityCode=${ activityCode }`)
  },

  handleSelct: (cityArr, categoryArr, cityName, filtered) => {
    dispatch(resetData(cityArr, categoryArr, cityName, filtered))
  },

  handleChannel: (result, cityArr, categoryArr, channel, cityName) => {
    console.log(result)
    // if (result.brandCode !== channel) {
    setStore('piaowu_channel', result.brandCode, 'session')
    // if (getStore('currentPosition', 'session')) {
    //   if (!cityName) cityName = parseLocName(getStore('currentPosition', 'session').city)
    //   dispatch(getActivityCategory(cityArr, categoryArr, cityName))
    // } else {
    getLocationGaode(
      err => {
        if (err && !cityName) {
          cityName = '上海'
        } else if (!cityName) {
          cityName = parseLocName(getStore('currentPosition', 'session').city)
        }
        dispatch(getActivityCategory(cityArr, categoryArr, cityName))
      }
    )
    // }
    // } else {
    //   dispatch(appReset({ filtering: false }))
    // }
  },

  handlePush: (pro, filtering) => {
    console.log(pro, filtering)
    if (pro === filtering) filtering = false
    dispatch(appReset({ filtering }))
  },
  dispatch,
})

const mapFunToComponent  = () => ({
  componentWillMount: () => {
    login(err => {
      if (err) {
        Toast.info('未登录', 1)
      }
    })
  },
})

export default
connect(mapStateToProps, mapDispatchToProps)(
  wrap(mapFunToComponent)(App)
)
         
 
 
 
 piaowu/containers/detail.js 
 
import { connect } from 'react-redux'
import { browserHistory } from 'react-router'
import { wrap }    from '@boluome/oto_saas_web_app_component'
import { get, parseQuery } from '@boluome/common-lib'
// import { Toast } from 'antd-mobile'
// import { keys } from 'ramda'
// import { getLocation, login } from 'business'
import Detail         from '../components/detail'
import { delReset } from '../actions/detail.js'

const mapStateToProps = porps => {
  const { detail } = porps
  return {
    ...detail,
  }
}

const mapDispatchToProps = dispatch => ({

  goSel: activityCode => {
    dispatch({ type: 'SEC_INIT' })
    browserHistory.push(`/piaowu/select?activityCode=${ activityCode }`)
  },

  goAddr: (addrTitlename, addrnameStr) => {
    dispatch({ type: 'ADDR_INIT' })
    browserHistory.push(`/piaowu/addr?addrTitlename=${ addrTitlename }&addrnameStr=${ addrnameStr }`)
  },
  dispatch,
})

const mapFunToComponent  = (dispatch, state) => ({
  componentWillMount: () => {
    // 查询
    if (!state.data) {
      const search = parseQuery(location.search)
      const { channel, activityCode } = search
      get('/piaowu/queryActivity', { channel, activityCode })
      .then(({ code, data, message }) => {
        if (code === 0) {
          dispatch(delReset({ data }))
        } else {
          console.log(message)
        }
      })
    }
  },
})

export default
connect(mapStateToProps, mapDispatchToProps)(
  wrap(mapFunToComponent)(Detail)
)
         
 
 
 
 piaowu/containers/order.js 
 
import { connect } from 'react-redux'
import { wrap, Loading } from '@boluome/oto_saas_web_app_component'
import { parseQuery, get, getStore, send }  from '@boluome/common-lib'
import { Toast } from 'antd-mobile'
import { afterOrdering } from 'business'
import { derReset } from '../actions/order.js'
import Order from '../components/order'

const mapStateToProps = state => {
  const { order } = state
  return {
    ...order,
  }
}

const mapDispatchToProps = dispatch => {
  return {
    dispatch,

    handleSubmit: (curDiscountData, contacts, receivingStyle, receName, recePhone) => {
      const channel = getStore('piaowu_channel', 'session')
      const search = parseQuery(location.search)
      const { activityCode, eventId, ticketsId, num } = search
      const activityId =  curDiscountData.activities ? curDiscountData.activities.id : ''
      const couponId =  curDiscountData.coupon ? curDiscountData.coupon.id : ''
      const reg = /^1[34578]\d{9}$/
      if (receivingStyle === 1 && !contacts) {
        Toast.info('未选择收货地址', 1)
      } else if (receivingStyle !== 1 && !receName && !recePhone) {
        Toast.info('未填写取票人信息', 1)
      } else if (receivingStyle !== 1 && !(reg.test(recePhone))) {
        Toast.info('请输入正确手机号', 1)
      } else {
        const contactId = contacts ? contacts.contactId : ''
        const contact = {
          name:  receName,
          phone: recePhone,
        }
        const handleClose = Loading()
        send('/piaowu/saveOrder', {
          customerUserId: getStore('customerUserId', 'session'),
          userPhone:      getStore('userPhone', 'session'),
          quantity:       num * 1,
          dispatchWay:    receivingStyle,
          ticketId:       ticketsId,
          channel,
          contact,
          contactId,
          activityCode,
          eventId,
          couponId,
          activityId,
        }).then(({ code, data, message }) => {
          handleClose()
          if (code === 0) {
            console.log(data)
            afterOrdering(data)
          } else {
            console.log(message)
            Toast.info(message)
          }
        })
        .catch(err => {
          console.log(err)
          handleClose()
          Toast.info('网络错误')
        })
      }
    },

    handleCur: curDiscountObj => {
      dispatch(
        derReset({
          curDiscountData: curDiscountObj,
        })
      )
    },

    handleChangePhone: recePhone => {
      dispatch(derReset({
        recePhone,
      }))
    },

    handleChangeName: receName => {
      dispatch(derReset({
        receName,
      }))
    },

    handleChangereceivingStyle: receivingStyle => {
      if (receivingStyle) dispatch(derReset({ receivingStyle }))
    },

    handleChangecontact: contact => {
      if (contact) {
        const channel = getStore('piaowu_channel', 'session')
        const search = parseQuery(location.search)
        const { ticketsId } = search
        get('/piaowu/estimateShippingFee', {
          channel,
          ticketsId,
          countyId: contact.countyId,
        }).then(({ code, data, message }) => {
          if (code === 0) {
            console.log(data)
            dispatch(derReset({ contact, fee: data || 10 }))
          } else {
            console.log(message)
            dispatch(derReset({ contact, fee: 10 }))
          }
        })
        .catch(err => {
          console.log(err)
          Toast.info('网络错误')
        })
      }
    },
  }
}

const mapFunToComponent  = dispatch => {
  return {
    componentWillMount: () => {
      const search = parseQuery(location.search)
      const { activityCode, eventId, ticketsId, num } = search
      const channel = getStore('piaowu_channel', 'session')
      get('/piaowu/queryTicketDetail', {
        channel,
        activityCode,
        eventId,
        ticketsId,
      }).then(({ code, data, message }) => {
        if (code === 0) {
          console.log(data)
          const { ticket } = data
          const receivingArr = channel === 'xishiqu' ? [(ticket.receivingStyle * 1) + 1]
                                                     : [
                                                       ticket.receivingStyle,
                                                       ticket.kdpsDispatchWay ? 2 : 0,
                                                     ]
          dispatch(derReset({ ...data, channel, num, receivingArr, receivingStyle: receivingArr[0] || receivingArr[1] }))
        } else {
          console.log(message)
        }
      })
      .catch(err => {
        console.log(err)
        Toast.info('网络错误')
      })
    },
  }
}

export default
  connect(mapStateToProps, mapDispatchToProps)(
    wrap(mapFunToComponent)(Order)
  )
         
 
 
 
 piaowu/containers/orderDetails.js 
 
// import React from 'react'
import { connect } from 'react-redux'
// import { browserHistory } from 'react-router'
// import { Toast } from 'antd-mobile'
// import { get, send, setStore, getStore } from '@boluome/common-lib'
import { wrap }    from '@boluome/oto_saas_web_app_component'
import { afterOrdering, login } from 'business'
import { odlReset } from '../actions/orderDetails.js'
import OrderDetails from '../components/orderDetails'

const mapStateToProps = ({ orderDetails }) => ({ ...orderDetails, login })

const mapDispatchToProps = dispatch => {
  return {
    dispatch,

    goPay: orderNo => {
      afterOrdering({ id: orderNo })
    },
  }
}

const mapFunToComponent  = (dispatch, state) => ({
  componentWillMount: () => {
    const { routeParams } = state
    const { orderNo } = routeParams
    console.log(123456)
    dispatch(odlReset({
      orderNo,
    }))
  },
})

export default
connect(mapStateToProps, mapDispatchToProps)(
  wrap(mapFunToComponent)(OrderDetails)
)
         
 
 
 
 piaowu/containers/select.js 
 
import { connect } from 'react-redux'
import { browserHistory } from 'react-router'
import { parseQuery, get, getStore }  from '@boluome/common-lib'
import { wrap } from '@boluome/oto_saas_web_app_component'
import { Toast } from 'antd-mobile'
import Select from '../components/select'
import { secReset, getData } from '../actions/select.js'

// const alert = Modal.alert

const mapStateToProps = state => {
  const { select } = state
  return {
    ...select,
  }
}

const mapDispatchToProps = dispatch => {
  return {

    handleSubmit: (eventId, ticketsId, num) => {
      if (num > 0 && ticketsId) {
        const search = parseQuery(location.search)
        const { activityCode } = search
        browserHistory.push(`/piaowu/order?activityCode=${ activityCode }&eventId=${ eventId }&ticketsId=${ ticketsId }&num=${ num }`)
      } else if (ticketsId) {
        Toast.info('请选择票数')
      } else {
        Toast.info('暂未选票')
      }
    },

    handleChangenum: (ynum, tp, datali) => {
      if (tp && datali.quantity) {
        let num = ynum
        if (datali.splitStyle === 4) {
          const oe = datali.quantity % 2 ? datali.quantity - 1 : datali.quantity
          num = ynum < oe ? ynum + 2 : ynum
        } else if (datali.splitStyle === 3) {
          num = ynum < (datali.quantity - 1) ? ynum + 1 : ynum
        } else {
          num = ynum < datali.quantity ? ynum + 1 : ynum
        }
        if (num === ynum) Toast.info(`该票剩余${ num }张`)
        dispatch(secReset({ num }))
      } else if (datali && ynum > 0) {
        let num = ynum
        if (datali.splitStyle === 4) {
          num = ynum >= 2 ? ynum - 2 : ynum
        } else {
          num = ynum - 1
        }
        dispatch(secReset({ num }))
      } else {
        dispatch(secReset({ num: ynum }))
      }
    },

    handleSelectpri: data => {
      if (data && data.quantity > 0 && data.splitStyle === 2) {
        dispatch(secReset({ num: data.quantity, datali: data }))
      } else if (data && data.quantity > 0) {
        dispatch(secReset({ num: 0, datali: data }))
      }
    },

    handleSelectsub: data => {
      if (data) dispatch(secReset({ data }))
      const search = parseQuery(location.search)
      const { activityCode } = search
      dispatch(getData(activityCode, data.id))
    },

    dispatch,
  }
}

const mapFunToComponent  = dispatch => {
  return {
    componentWillMount: () => {
      const search = parseQuery(location.search)
      const { activityCode } = search
      get('/piaowu/queryEventList', {
        channel: getStore('piaowu_channel', 'session'),
        activityCode,
      }).then(({ code, data, message }) => {
        if (code === 0) {
          console.log(data)
          const { id, priceLevel } = data[0]
          dispatch(getData(activityCode, id, priceLevel[0]))
          dispatch(secReset({
            dataList: data,
            data:     data[0],
          }))
        } else {
          console.log(message)
        }
      })
      .catch(err => {
        console.log(err)
      })
    },
  }
}

export default
  connect(mapStateToProps, mapDispatchToProps)(
    wrap(mapFunToComponent)(Select)
  )
         
 
 
 
 piaowu/index.js 
 
import React        from 'react'
import { createStore, applyMiddleware } from 'redux'
import { render }   from 'react-dom'
import { Provider } from 'react-redux'
import thunk        from 'redux-thunk'
import reducers     from './reducers'
import Routes       from './routes'
import '../../styles/index.scss'
// 定义根组件
const Root  = () => (
  <Provider store={ createStore(reducers, applyMiddleware(thunk)) }>
    <Routes />
  </Provider>
)
render(<Root />, document.querySelector('#root'))
         
 
 
 
 piaowu/reducers/addr.js 
 
import { mergeState } from '@boluome/common-lib'

const initialState = {}
const addr = (state = initialState, action) => {
  switch (action.type) {
    case 'ADDR_RESET':
      return mergeState(state, action)
    case 'ADDR_INIT':
      return initialState
    default: return state
  }
}

export default addr
         
 
 
 
 piaowu/reducers/app.js 
 
import { mergeState } from '@boluome/common-lib'

const initialState = {
  title:      'piaowu',
  filtering:  false,
  filterdata: {
    categoryCode: [
      {
        code:   0,
        text:   '全部分类',
        choose: false,
      },
    ],
    sort: [
      {
        code:   0,
        text:   '默认排序',
        choose: false,
      },
      {
        code:   'time',
        text:   '按时间',
        choose: false,
      },
      {
        code:   'hot',
        text:   '按热度',
        choose: false,
      },
    ],
    timeRange: [
      {
        code:   0,
        text:   '全部时间',
        choose: false,
      },
      {
        code:   'in_week',
        text:   '一周内',
        choose: false,
      },
      {
        code:   'in_month',
        text:   '一月内',
        choose: false,
      },
    ],
  },
  filtered: {
    categoryCode: 0,
    sort:         0,
    timeRange:    0,
  },
}

const app = (state = initialState, action) => {
  switch (action.type) {
    case 'APP_RESET':
      return mergeState(state, action)
    default: return state
  }
}

export default app
         
 
 
 
 piaowu/reducers/detail.js 
 
import { mergeState } from '@boluome/common-lib'

const initialState = {}
const detail = (state = initialState, action) => {
  switch (action.type) {
    case 'DEL_RESET':
      return mergeState(state, action)
    case 'DEL_INIT':
      return initialState
    default: return state
  }
}

export default detail
         
 
 
 
 piaowu/reducers/index.js 
 
import { combineReducers } from 'redux'
// 引入reducers
import app  from './app'
import detail  from './detail'
import addr from './addr'
import select from './select'
import order from './order'
import orderDetails  from './orderDetails'
// 组合reducers
export default combineReducers({
  app, detail, addr, select, order, orderDetails,
})
         
 
 
 
 piaowu/reducers/order.js 
 
import { mergeState } from '@boluome/common-lib'

const initialState = {
  tip: false,
}
const order = (state = initialState, action) => {
  switch (action.type) {
    case 'DER_RESET':
      return mergeState(state, action)
    case 'DER_INIT':
      return initialState
    default: return state
  }
}

export default order
         
 
 
 
 piaowu/reducers/orderDetails.js 
 
import { mergeState } from '@boluome/common-lib'

const initialState = {
}

const orderDetails = (state = initialState, action) => {
  switch (action.type) {
    case 'ODL_RESET':
      return mergeState(state, action)
    case 'ODL_INIT':
      return initialState
    default: return state
  }
}

export default orderDetails
         
 
 
 
 piaowu/reducers/select.js 
 
import { mergeState } from '@boluome/common-lib'

const initialState = {}
const select = (state = initialState, action) => {
  switch (action.type) {
    case 'SEC_RESET':
      return mergeState(state, action)
    case 'SEC_INIT':
      return initialState
    default: return state
  }
}

export default select
         
 
 
 
 piaowu/routes.js 
 
import React from 'react'
import { Router, Route, browserHistory, IndexRoute } from 'react-router'
// 路由配置
const Routes = () => (
  <Router history={ browserHistory } >
    <Route path='/piaowu' component={ require('react-router?name=root!./components/root') } >
      <IndexRoute component={ require('react-router?name=app!./containers/app') } />
      <Route path='detail' component={ require('react-router?name=detail!./containers/detail') } />
      <Route path='addr' component={ require('react-router?name=addr!./containers/addr') } />
      <Route path='select' component={ require('react-router?name=select!./containers/select') } />
      <Route path='order' component={ require('react-router?name=order!./containers/order') } />
      <Route path='orderDetails/:orderNo' component={ require('react-router?name=orderDetails!./containers/orderDetails') } />
    </Route>
  </Router>
)
export default Routes
         
 
 
 
 piaowu/style/addr.js 
 
import { mergeState } from '@boluome/common-lib'

const initialState = {}
const addr = (state = initialState, action) => {
  switch (action.type) {
    case 'ADDR_RESET':
      return mergeState(state, action)
    case 'ADDR_INIT':
      return initialState
    default: return state
  }
}

export default addr
         
 
 
 
 piaowu/style/app.scss 
 
*{margin: 0;padding: 0}
@mixin all_center($row: center) {
  display: flex;
  display: -webkit-flex;
  align-items: center;
  -webkit-align-items: center;
  justify-content: $row;
  -webkit-justify-content: $row;
}
.app{
  display: flex;
  display: -webkit-flex;
  flex-direction: column;
  -webkit-flex-direction: column;
  height: 100%;
  // 主题选择部分
  .themeWrap{
      width: 100%;
      height: 80px;
      border-bottom: 1px solid #e5e5e5;
      border-top: 1px solid #e5e5e5;
      background: #fff;
      position: relative;
      span{
        width: 33%;
        height:auto;
        margin: 0.2rem 0;
        display:inline-block;
        font-size: 0.26rem;
        color: #333333;
        text-align: center;
        &:nth-child(2){
          border-left: .01rem solid #e5e5e5;
          border-right: .01rem solid #e5e5e5;
        }
        .am-icon-md{
          position: relative;
          width: 0.3rem;
          height: 0.3rem;
          top: 0.05rem;
          margin-left: 0.03rem;
          transition: transform .2s;
        }
      }
  }
  .tabs{
    flex: auto;
    -webkit-flex: auto;
    position: relative;
    overflow: hidden;
    background: #fff;
  }
  //title
  .searchTitle{
    display: flex;
    display: -webkit-flex;
    align-items: center;
    -webkit-align-items: center;
    height: 0.8rem;
    background: #ffffff;
    border-bottom: 0.01rem solid #d8d8d8;
    >span{
      max-width: 25%;
      padding-left: 0.24rem;
      box-sizing: border-box;
      height: 100%;
      display: flex;
      display: -webkit-flex;
      -align-items: center;
      -webkit-align-items: center;
      justify-content: center;
      -webkit-justify-content: center;
      font-size: .28rem;
      .am-icon{
        width: 0.3rem;
        height: 0.25rem;
        margin: 0 0.1rem;
      }
    }
    .mainCity{
      width: 100%;
      max-width: 100%;
    }
    .search{
      margin: 0 0.3rem 0 0.2rem;
      flex: auto;
      -webkit-flex: auto;
      display: flex;
      display: -webkit-flex;
      align-items: center;
      -webkit-align-items: center;
      justify-content: center;
      -webkit-justify-content: center;
      height: 0.5rem;
      background-color: #F5F5F6;
      border-radius: 0.08rem;
      // border: 0.01rem solid #d8d8d8;
      box-sizing: border-box;
      .input{
        color: #999;
        background-color: #F5F5F6;
        border: 0;
        flex: auto;
        -webkit-flex: auto;
        display: flex;
        display: -webkit-flex;
        -align-items: center;
        -webkit-align-items: center;
        height: 100%;
        outline: none;
        font-size: .28rem;
        border-radius: 0.05rem;
      }
      .am-icon{
        width: 0.27rem;
        height: 0.27rem;
        margin: 0 0.2rem;
      }
    }
  }
}
//列表
.contentBox {
  padding: 0.25rem 0.3rem 0;
  .contentinner {
    width: 100%;
    border-bottom: 1px solid #F5F5F6;
    position: relative;
    display: inline-block;
    padding-bottom: 0.25rem;
    .contentImgBox {
        padding-right: 5%;
        display: inline-block;
        img {
            width: 1.5rem;
            height: 2.1rem;
            border-radius: 0.05rem;
            border: 1px solid #F5F5F6;
        }
    }
    .contentMain {
      display: inline-block;
      vertical-align: top;
      width: calc(95% - 1.55rem);
      overflow: hidden;
      h2 {
         font-size: 0.28rem;
         min-height: 0.7rem;
         line-height: 0.35rem;
         color: #333333;
         overflow: hidden;
         text-overflow: ellipsis;
         display: -webkit-box;
         -webkit-line-clamp: 2;
         -webkit-box-orient: vertical;
         margin-bottom: 0.15rem;
      }
      .context{
        font-size: .26rem;
        color: #939393;
        margin-bottom: 0.2rem;
        p{
          margin-bottom: 0.05rem;
        }
      }
      .price {
          overflow: hidden;
          line-height: 1.5;
          .status {
              color: #4990e2;
              border:1px solid #4990e2;
              border-radius: 0.05rem;
              font-size: .24rem;
              padding: 0.03rem 0.05rem;
              float: left;
              line-height: 0.3rem;
          }
          .money {
              font-size: 0.3rem;
              color: #ff6666;
              margin-left: 0.1rem;
              float: right;
              line-height: 0.43rem;
              display: inline-block;
          }
          .qi {
              font-size: 0.28rem;
              color: #666666;
              margin-left: 5px;
              line-height: 0.43rem;
              display: inline-block;
              float: right;
          }
      }
    }
  }
}
// 搜索列表
.dataList{
  .searchliBox{
    padding: 0.25rem 0 0 0.3rem;
    p{
      font-size: 0.28rem;
      color: #333333;
      border-bottom: 1px solid #e5e5e5;
      padding: 0 0.3rem 0.25rem 0;
      i{
        font-style: normal;
        color: #ff4848;
        margin: 0 0.06rem;
      }
    }
  }
  li{
    &:last-child{
      margin-bottom: 1rem;
      position: relative;
      &:after{
        content: '没有更多了';
        display: block;
        width: 100%;
        height: 1rem;
        line-height: 1rem;
        font-size: 0.28rem;
        color: #999999;
        position: absolute;
        bottom: auto;
        left: 0;
        text-align: center;
      }
    }
  }
}

.empty-container{
  background: #f2f2f2;
  color: #888888;
}
// 历史记录
.serhistory{
  background: #fff;
  p{
    margin: 0 0 0 0.3rem;
    padding: 0.25rem 0.3rem 0.25rem 0;
    width: calc(100% - 0.3rem);
    border-top: 1px solid #e5e5e5;
    @include all_center(space-between);
    font-size: 0.24rem;
    color: #999999;
    .am-icon-md{
      width: 0.3rem;
      height: 0.3rem;
    }
    span{
      font-size: 0.28rem;
      color: #333333;
      display: inline-block;
      width: calc(100% - 1rem);
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
    }
    &:last-child{
      @include all_center(center);
      .am-icon-md{
        width: 0.3rem;
        height: 0.3rem;
        margin-right: 0.1rem;
      }
    }
  }
}
         
 
 
 
 piaowu/style/detail.scss 
 
*{margin: 0;padding: 0}
.detail{
  .detailmain{
    background: #f5f5f6;
    overflow: auto;
    height: calc(100% - 1rem);
  }
  .buyBtn{
    display: inline-block;
    width: 100%;
    height: 1rem;
    line-height: 1rem;
    background: #ffab00;
    color: #ffffff;
    font-size: 0.32rem;
    text-align: center;
  }
  .focusPic{
    height: 2.2rem;
    position: relative;
    .focusPicbg{
      width: 100%;
      height: 100%;
      background-color: #000;
      opacity: .2;
      position: absolute;
    }
    img{
      width: 1.8rem;
      height: 2.5rem;
      border-radius: 0.05rem;
      position: absolute;
      top: 0.5rem;
      left: 0.3rem;
    }
    p{
      color: #ffffff;
      font-size: 0.36rem;
      padding-right: 0.3rem;
      width: calc(100% - 2.4rem);
      box-sizing: border-box;
      position: absolute;
      top: 0.5rem;
      right: 0;
    }
  }
  .statusShow{
    height: 1.1rem;
    box-sizing: border-box;
    padding-left: 2.3rem;
    display: -webkit-flex;
    display: flex;
    -webkit-align-items: center;
    align-items: center;
    >span{
      border:1px solid #4990e2;
      border-radius: 0.03rem;
      padding: 0.03rem 0.05rem;
      font-size: 0.24rem;
      color: #4990e2;
    }
    p{
      font-size: 0.24rem;
      color: #666666;
      margin-left: 0.3rem;
      span{
        font-size: 0.36rem;
        color: #ff6666;
      }
    }
  }
  .detinfo{
    box-sizing: border-box;
    padding: 0 0.3rem;
    height: 1rem;
    font-size: 0.28rem;
    color: 333333;
    background: #fff;
    border-top: 1px solid #e5e5e5;
    border-bottom: 1px solid #e5e5e5;
    display: -webkit-flex;
    display: flex;
    -webkit-align-items: center;
    align-items: center;
    -webkit-justify-content: space-between;
    justify-content: space-between;
    .flexinfo{
      display: -webkit-flex;
      display: flex;
      -webkit-align-items: center;
      align-items: center;
    }
    img{
      width: 0.48rem;
      height: 0.48rem;
    }
    p{
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      .rodtip{
        display: inline-block;
        border-radius: 0.05rem;
        margin-right: 0.1rem;
        width: 0.1rem;
        height: 0.3rem;
        background: #ffab00;
      }
    }
    .am-icon-md{
      -webkit-flex: none;
      flex: none;
    }
  }
  .descinfo{
    background: #ffffff;
    font-size: 0.24rem;
    line-height: 1.5;
    padding: 0.3rem;
  }
}

.zhuyi{
  font-size: 0.28rem;
  color: #666666;
  line-height: 1.5;
  p{
    margin: 0.3rem;
  }
}
         
 
 
 
 piaowu/style/order.scss 
 
*{margin: 0;padding: 0}

@mixin all_center($row: center) {
  display: flex;
  display: -webkit-flex;
  align-items: center;
  -webkit-align-items: center;
  justify-content: $row;
  -webkit-justify-content: $row;
}
.order{
  height: 100%;
  width: 100%;
  overflow: hidden;
  .orderwrap{
    height: calc(100% - 1rem);
  }
  .sebt_bt{
    display: flex;
    display: -webkit-flex;
    height: 1rem;
    box-sizing: border-box;
    border-top: 1px solid #e5e5e5;
    background: #ffffff;
    .real_pri{
      @include all_center(space-between);
      width: calc(100% - 2rem);
      height: 100%;
      line-height: 1rem;
      box-sizing: border-box;
      padding-left: 0.3rem;
      padding-right: 0.1rem;
      font-size: 0.28rem;
      color: #ff4848;
      i{
        font-style: normal;
        font-size: 0.32rem;
      }
      .sebt_cl{
        font-size: 0.24rem;
        color: #999999;
      }
    }
    .real_go{
      display: inline-block;
      width: 2rem;
      height: 100%;
      line-height: 1rem;
      text-align: center;
      font-size: 0.36rem;
      color: #ffffff;
      background: #ffab00;
    }
  }
  .infotip{
    font-size: 0.24rem;
    color: #999999;
    padding: 0 0.3rem;
    margin: 0.1rem 0;
  }
  .recev_sel{
    height: 1rem;
    background: #ffffff;
    span{
      display: inline-block;
      background:rgba(255,255,255,0.20);
      border: 1px solid #e5e5e5;
      text-align: center;
      border-radius: 0.05rem;
      width: 1.5rem;
      height: 0.6rem;
      line-height: 0.6rem;
      margin: 0.2rem;
      font-size: 0.28rem;
      color: #666666;
    }
    .seling{
      background: rgba(255,161,0,0.05);
      border: 1px solid #ffa100;
      color: #ffa100;
    }
  }
  .borderimg{
    height: 0.3rem;
    background-size: 102%;
    background-position: center;
  }
  .smzq{
    // border-top: 1px solid #e5e5e5;
    // border-bottom: 1px solid #e5e5e5;
    // background: #ffffff;
    // padding: 0.2rem 0.3rem;
    p{
      font-size: 0.24rem;
      color: #999999;
      padding: 0 0.3rem;
      margin: 0.1rem 0;
      &:last-child{
        color:#ffab00;
      }
    }
  }
  .nocant{
    border-top: 1px solid #e5e5e5;
    border-bottom: 1px solid #e5e5e5;
    background: #ffffff;
    padding: 0.45rem 0.3rem;
    @include all_center(space-between);
    p{
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
      @include all_center(none);
      font-size: 0.28rem;
      color: #333333;
      .am-icon-md{
        margin-right: 0.2rem;
      }
      i{
        font-style: normal;
        margin: 0 0.5rem 0 0.3rem;
      }
      span{
        display: inline-block;
        margin-left: 0.5rem;
        font-size: 0.2rem;
        color:#ffab00;
        padding: 0.05rem 0.1rem;
        background:#fff3db;
        border-radius: 0.04rem;
        border: 1px solid #ffab00;
      }
    }
    .addr{
      font-size: 0.24rem;
      color: #999999;
      margin: 0.1rem 0;
    }
  }
}

// 票务详情
.Oderdetail {
  background: #ffffff;
  padding: 0.3rem 0.24rem 0;
  overflow: hidden;
  box-sizing: border-box;
  img{
    width: 1.7rem;
    height: 2.4rem;
    float: left;
  }
  .orderInfo{
    display: inline-block;
    width: calc( 100% - 2.1rem);
    padding-left: 0.24rem;
    p{
      padding: 0 0.1rem;
      span{
        margin-right: 0.3rem;
      }
      i{
        font-style: normal;
      }
      &:nth-child(1){
        font-size: 0.28rem;
        color: #333333;
        padding-top: 0;
        padding-bottom: 0.2rem;
        border-bottom: 1px dashed #ccc;
        margin-bottom: 0.2rem;
      }
      &:nth-child(2), &:nth-child(3){
        font-size: 0.24rem;
        color: #666666;
        padding-bottom: 0.15rem;
      }
      &:nth-child(4){
        padding-top: 0.15rem;
        font-size: 0.24rem;
        color:#333333;
      }
    }
  }
}
.am-list-item .am-input-label.am-input-label-5{
  font-size: 0.28rem;
  color:#333333;
}
.am-list-item .am-input-control input{
  font-size: 0.28rem;
}
         
 
 
 
 piaowu/style/orderDetails.scss 
 
*{margin: 0;padding: 0}
@mixin all_center($row: center) {
  display: flex;
  display: -webkit-flex;
  align-items: center;
  -webkit-align-items: center;
  justify-content: $row;
  -webkit-justify-content: $row;
}

.orderDetails{
  width: 100%;
  height: 100%;
  .jianhui{
    display: inline-block;
    vertical-align: middle;
    background: #ff4848;
    border-radius: .06rem;
    width: .32rem;
    height: .32rem;
    font-size: .2rem;
    color: #fff;
    line-height: .32rem;
    text-align: center;
    margin-right: .1rem;
    float: left;
  }
  .odlcenter{
    width: 100%;
    padding-bottom: 2rem;
  }
  .tgTip{
    background: #ffffff;
    height: 0.9rem;
    line-height: 0.9rem;
    font-size: 0.28rem;
    color: #ffab00;
    padding:  0 0.3rem;
    box-sizing: border-box;
    border-top: 1px solid #e5e5e5;
    border-bottom: 1px solid #e5e5e5;
  }
  .numpri{
    font-size: 0.28rem;
    color: #ff4848;
  }
  .realsubpri{
    position: relative;
    .am-icon-md{
      width: 0.38rem;
      height: 0.38rem;
      position: absolute;
      top: -0.02rem;
      right: 0;
    }
  }
  .am-list-item .am-list-line .am-list-content{
    font-size:0.28rem;
    color:#333333;
    i{
      font-style:normal;
      font-size:0.26rem;
      color:#999999;
    }
  }
  .am-list-item .am-list-line .am-list-extra{
    font-size:0.28rem;
    color:#333333;
  }
  .am-list-item .am-input-control input, .am-list-item .am-input-label{
    font-size:0.28rem;
    color:#333333;
  }
  .s-promotion {
    margin-bottom: 1.5rem;
  }
}

.am-modal-button-group-h .am-modal-button{
  color: #ffab00;
}

// 票务详情
.Oderdetail {
  background: #ffffff;
  padding: 0.3rem 0.24rem 0;
  overflow: hidden;
  box-sizing: border-box;
  img{
    width: 1.7rem;
    height: 2.4rem;
    float: left;
  }
  .orderInfo{
    display: inline-block;
    width: calc( 100% - 2.1rem);
    padding-left: 0.24rem;
    p{
      padding: 0 0.1rem;
      span{
        margin-right: 0.3rem;
      }
      i{
        font-style: normal;
      }
      &:nth-child(1){
        font-size: 0.28rem;
        color: #333333;
        padding-top: 0;
        padding-bottom: 0.2rem;
        border-bottom: 1px dashed #ccc;
        margin-bottom: 0.2rem;
      }
      &:nth-child(2), &:nth-child(3){
        font-size: 0.24rem;
        color: #666666;
        padding-bottom: 0.15rem;
      }
      &:nth-child(4){
        padding-top: 0.15rem;
        font-size: 0.24rem;
        color:#333333;
      }
    }
  }
}
// 快递配送
.discontact{
  >h3{
    border-top: 1px solid #e5e5e5;
    padding: 0.2rem 0.3rem;
    font-size: 0.28rem;
    color: #333333;
    background: #ffffff;
    font-weight: 300;
  }
  .nocant{
    border-top: 1px solid #e5e5e5;
    border-bottom: 1px solid #e5e5e5;
    background: #ffffff;
    padding: 0.2rem 0.3rem;
    h3{
      float: left;
      line-height: 1.5;
      font-size: 0.28rem;
      color: #333333;
      font-weight: 300;
    }
    >div{
      display: table;
    }
    p{
      font-size: 0.28rem;
      color: #666666;
      line-height: 1.5;
      .am-icon-md{
        margin-right: 0.2rem;
      }
      i{
        font-style: normal;
        margin: 0 0.5rem 0 0.3rem;
      }
      span{
        display: inline-block;
        margin-left: 0.5rem;
        font-size: 0.2rem;
        color:#ffab00;
        padding: 0.05rem 0.1rem;
        background:#fff3db;
        border-radius: 0.04rem;
        border: 1px solid #ffab00;
      }
    }
    .addr{
      font-size: 0.24rem;
      color: #999999;
      margin: 0.1rem 0;
    }
  }
}
// 上门自取
.smzq{
  border-top: 1px solid #e5e5e5;
  border-bottom: 1px solid #e5e5e5;
  background: #ffffff;
  padding: 0.2rem 0.3rem;
  p{
    margin: 0.2rem 0;
    font-size: 0.28rem;
    color: #333333;
  }
  i{
    font-style: normal;
    float: left;
  }
  span{
    display: table;
  }
}
// 提示
.infotip{
  font-size: 0.24rem;
  color: #999999;
  padding: 0 0.3rem;
}
         
 
 
 
 piaowu/style/select.scss 
 
*{margin: 0;padding: 0}

@mixin all_center($row: center) {
  display: flex;
  display: -webkit-flex;
  align-items: center;
  -webkit-align-items: center;
  justify-content: $row;
  -webkit-justify-content: $row;
}

.select{
  height: 100%;
  width: 100%;
  overflow: hidden;
  .slist_wrap{
    height: calc(100% - 4.4rem);
    overflow: auto;
    position: relative;
    .pri_list{
      box-sizing: border-box;
      padding: 0.1rem 0.15rem;
      .pri_li{
        color: #666666;
        display: inline-block;
        box-sizing: border-box;
        width: calc(33% - 0.3rem);
        margin: 0.1rem 0.15rem;
        padding: 0.1rem 0;
        text-align: center;
        border:1px solid #666666;
        border-radius: 4px;
        font-size: 0.28rem;
      }
    }
    .main_li{
      border-bottom: 1px solid #e5e5e5;
      box-sizing: border-box;
      padding: 0.3rem;
      background: #fff;
      .li_left{
        display: table-cell;
        width: 62%;
        h3{
          font-size: 0.28rem;
          font-weight: normal;
          min-height: 0.8rem;
          margin-bottom: 0.15rem;
          color: #666666;
        }
        span{
          display: inline-block;
          padding: 0.03rem 0.05rem;
          border: 1px solid #ffab00;
          border-radius: 0.05rem;
          color: #ffab00;
          font-size: .24rem;
          margin-right: 0.2rem;
          font-weight: 300;
        }
      }
      .li_right{
        display: table-cell;
        width: 38%;
        text-align: right;
        .dealPrice{
          font-size: 0.32rem;
          color: #ffab00;
        }
        .facePrice{
          font-size: 0.24rem;
          color: #999999;
          margin: 0.1rem 0;
        }
        >span{
          display: inline-block;
          box-sizing: border-box;
          padding: 0.1rem 0.2rem;
          border: 1px solid #ffab00;
          border-radius: 0.05rem;
          background: #ffab00;
          color: #fff;
          font-size: 0.28rem;
        }
      }
    }
  }
  .select_bottom{
    background: #ffffff;
    height: 3.5rem;
    >p{
      font-size: 0.28rem;
      color: #333333;
      box-sizing: border-box;
      border-bottom: 1px solid #e5e5e5;
      height: 0.7rem;
      line-height: 0.7rem;
      text-align: center;
    }
    .sebt_select{
      height: 1.8rem;
      box-sizing: border-box;
      display: flex;
      display: -webkit-flex;
      flex-direction: column;
      -webkit-flex-direction: column;
      .select_indeirect{
        height: 0.8rem;
        text-align: center;
        span{
          display: inline-block;
          box-sizing: border-box;
          height: 0.6rem;
          line-height: 0.6rem;
          width: 1rem;
          margin: 0.2rem 0.2rem 0;
          border: 1px solid #e5e5e5;
          position: relative;
          font-size: 0.24rem;
          color: #666666;
          &:before{
            content: '';
            display: inline-block;
            width: 0.2rem;
            height: 0.2rem;
            border-radius: 50%;
            border-top: 1px solid #e5e5e5;
            border-right: 1px solid #e5e5e5;
            -webkit-transform:rotate(45deg);
            transform:rotate(45deg);
            position: absolute;
            top: 0.2rem;
            left: -0.1rem;
            background: #ffffff;
          }
          &:after{
            content: '';
            display: inline-block;
            width: 0.2rem;
            height: 0.2rem;
            border-radius: 50%;
            border-top: 1px solid #e5e5e5;
            border-left: 1px solid #e5e5e5;
            -webkit-transform:rotate(-45deg);
            transform:rotate(-45deg);
            position: absolute;
            top: 0.2rem;
            right: -0.1rem;
            background: #ffffff;
          }
        }
      }
      .select_deirect{
        flex: auto;
        flex: -webkit-auto;
        @include all_center;
        p{
          @include all_center;
          span{
            min-width: 1rem;
            text-align: center;
            font-size: 0.32rem;
            color: #ffab00;
          }
        }
      }
    }
    .sebt_bt{
      height: 1rem;
      box-sizing: border-box;
      border-top: 1px solid #e5e5e5;
      .real_pri{
        display: inline-block;
        width: calc(100% - 2rem);
        height: 100%;
        line-height: 1rem;
        box-sizing: border-box;
        padding-left: 0.3rem;
        font-size: 0.28rem;
        color: #ff4848;
        i{
          font-style: normal;
          font-size: 0.32rem;
        }
      }
      .real_go{
        display: inline-block;
        width: 2rem;
        height: 100%;
        line-height: 1rem;
        text-align: center;
        font-size: 0.36rem;
        color: #ffffff;
        background: #ffab00;
      }
    }
  }
}
.empty-container{
  background: #f2f2f2;
  color: #888888;
}
         
 
 
 
 piaowu/style/selectTab.scss 
 
.select_shade{
  position: absolute;
  top: 0;
  left: 0;
  background: rgba(0, 0, 0, 0.5);
  width: 100%;
  height: 100%;
  transition: 2s ease;
  z-index: 1;
  .select_wrap{
    z-index: 2;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: auto;
    overflow: hidden;
    background: #ffffff;
    transition: .2s ease;
    p{
      display: flex;
      display: -webkit-flex;
      align-items: center;
      -webkit-align-items: center;
      justify-content: space-between;
      -webkit-justify-content: space-between;
      height: 0.9rem;
      line-height: 0.9rem;
      font-size: 0.28rem;
      color: #999999;
      border-bottom: 1px solid #e5e5e5;
      padding: 0 0.3rem;
    }
  }
}
         
 
 
 
 piaowu/style/slideTab.scss 
 
.select_tabs{
  position: relative;
  background: #ffffff;
  color:#adadad;
  .select_cro{
    height: 0.9rem;
    width: 100%;
    overflow: hidden;
    p{
      margin: 0;
      font-size: 0.24rem;
      position: relative;
      display: inline-block;
      height: 0.9rem;
      line-height: 0.3rem;
      white-space: nowrap;
      .select_li{
        display: inline-block;
        box-sizing: border-box;
        height: 100%;
        text-align: center;
        padding: 0.15rem 0.4rem;
        position: relative;
      }
      .select_foucs{
        position: absolute;
        bottom: 0;
        left: 0;
        display: inline-block;
        transition: .3s ease;
      }
    }
  }
}
