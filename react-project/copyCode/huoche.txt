         
 
 
 
 huoche/actions/details.js 
 
import { get, setStore } from '@boluome/common-lib'
import { Loading } from '@boluome/oto_saas_web_app_component'

// 通过经纬度定位商家，在展示一系列数据请求
export const seatsDataFn = (chooseTime, chooseCity, ticketDetails) => dispatch => {
  const handleClose = Loading()
  const schedulesUrl = '/huoche/v1/seats'
  const { from, to } = chooseCity
  const { date } = chooseTime
  const { number } = ticketDetails
  const sendData = {
    from,
    to,
    date,
    train_number: number,
  }
  get(schedulesUrl, sendData).then(reply => {
    const { code, data, message } = reply
    if (code === 0) {
      console.log('indexDatalist', data)
      let noSeats = true
      if (data.length === 0) {
        noSeats = false
      } else {
        noSeats = true
      }
      console.log('---test---noSeats', noSeats)
      dispatch({
        type:      'KJIN_SEATSDATA',
        seatsData: data,
        noSeats,
      })
      setStore('huoche_seatsData', data, 'session')
      // handleClose()
    } else {
      console.log('数据请求失败', message)
    }
    handleClose()
  })
}
         
 
 
 
 huoche/actions/index.js 
 

         
 
 
 
 huoche/actions/moredata.js 
 
import { get, getStore, setStore } from '@boluome/common-lib'
import { Loading } from '@boluome/oto_saas_web_app_component'

// 获取所有火车站
const getStationsFn = (chooseCity, dispatch) => {
  const handleClose = Loading()
  const stationsUrl = '/huoche/v1/city/stations'
  // 处理上一个页面如果带来了 指查看高铁动车
  const nowChecked = getStore('huoche_SpeedRail', 'session')
  const changeFilter = filiterObj => {
    const { trainline } = filiterObj
    if (nowChecked) {
      for (let i = 0; i < trainline.length; i++) {
        if (trainline[i].name === '高铁（G／C）' || trainline[i].name === '动车（D）') {
          trainline[i].choose = true
        }
      }
      dispatch({ type: 'KJIN_FILTEROBJ', iSconditions: true })
    }
    return filiterObj
  }
  // 筛选做处理数据
  const timeLimit = [
    '0:00-6:00',
    '6:00-12:00',
    '12:00-18:00',
    '18:00-24:00',
  ]
  const train = [
    '高铁（G／C）',
    '动车（D）',
    '普通（Z／K／T）',
    '其他（L／Y等）',
  ]
  get(stationsUrl, chooseCity).then(reply => {
    const { code, data, message } = reply
    if (code === 0) {
      const { departCitys, arriveCitys } = data
      const filiterObj = {
        trainline: train.map(e => ({ name: e, choose: false })),
        fromTime:  timeLimit.map(e => ({ name: e, choose: false })),
        toTime:    timeLimit.map(e => ({ name: e, choose: false })),
        fromArr:   departCitys.map(e => ({ name: e, choose: false })),
        toArr:     arriveCitys.map(e => ({ name: e, choose: false })),
      }
      dispatch({
        type:         'KJIN_STATIONS',
        defiliterObj: JSON.parse(JSON.stringify(filiterObj)),
        filiterObj:   changeFilter(filiterObj),
      })
    } else {
      console.log('getStationsFn---', message)
    }
    handleClose()
  })
}


// 处理从上个页面带过来的只看高铁
const handleSpeedRail = data => {
  console.log('ssss')
  const arr = data.filter(item => item.number.split('')[0] === 'G' || item.number.split('')[0] === 'D')
  return arr
}
// 通过经纬度定位商家，在展示一系列数据请求
export const scheduleslistFn = (chooseTime, chooseCity, filiterObj, gethandleFilter) => dispatch => {
  const handleClose = Loading()
  const schedulesUrl = '/huoche/v1/schedules'
  const { from, to } = chooseCity
  const { date } = chooseTime
  const sendData = {
    from,
    to,
    date,
  }
  get(schedulesUrl, sendData).then(reply => {
    const { code, data, message } = reply
    if (code === 0) {
      setStore('huoche_withoutDiscountedPrice', data.withoutDiscountedPrice, 'session')
      let datas = data.list
      let nolist = true
      let notOnceList = true
      const nowChecked = getStore('huoche_SpeedRail', 'session')
      const filterObj = getStore('huoche_filiterObj', 'session')
      if (nowChecked) {
        datas = handleSpeedRail(data.list)
        if (datas.length === 0) {
          nolist = false
        }
      }
      if (data.list.length === 0) {
        // 这里是第一次请求数据没有的话，不显示筛选栏，---test
        notOnceList = false
        nolist = false
      }
      dispatch({
        type:                'KJIN_SCHEDULES',
        scheduleslist:       data.list, // 这里修改是因为 --->首页的高铁动车 - 2017-09-21
        scheduleslistFilter: datas,
        nolist,
        notOnceList,
      })
      console.log('test--list', data)
      if (!filterObj) {
        getStationsFn(chooseCity, dispatch)
      }
      if (gethandleFilter) {
        console.log('wozoule', filiterObj)
        gethandleFilter(filiterObj, datas)
      }
    } else {
      console.log('数据请求失败', message)
    }
    handleClose()
  })
}
         
 
 
 
 huoche/actions/order.js 
 
import { Toast } from 'antd-mobile'
import { get, send, afterOrdering } from 'business'
import { Loading } from '@boluome/oto_saas_web_app_component'
import { getStore, removeStore, setStore } from '@boluome/common-lib'  // , removeStore

// 火车意外险须知请求
export const AccidentFn = () => dispatch => {
  const handleClose = Loading()
  const accidentUrl = '/baoxian/v1/insurance/query'
  const sendData = {
    channel:  'dashubao',
    category: 'huoche',
  }
  get(accidentUrl, sendData).then(reply => {
    const { code, data, message } = reply
    if (code === 0) {
      console.log('huoche----', data[0])
      dispatch({
        type:         'KJIN_ACCIDENT',
        accidentData: data[0],
      })
      dispatch({ type: 'ORDER_CHECKED', checkAccient: data[0] })
    } else {
      console.log('数据请求失败', message)
    }
    handleClose()
  })
}

// 清楚缓存的数据 removeStore('huoche_', 'session')
export const removeStoreFn = () => {
  setStore('huoche_alterTime', [], 'session')
  setStore('huoche_chooseTrain', [], 'session')
  setStore('huoche_chooseZuowei', [], 'session')
  // removeStore('huoche_details', 'session')
  setStore('huoche_haveChooseZuo', [], 'session')
  setStore('huoche_chooseSeat', [], 'session')
  setStore('huoche_seatsData', [], 'session')
  setStore('huoche_maxprice', 0, 'session')
  setStore('huoche_chooseArrtime', [], 'session')
  setStore('huoche_haschecked', true, 'session')
  removeStore('huoche_packagePrice', 'session')
  removeStore('huoche_chooseSpeedname', 'session')
  removeStore('huoche_maxpriceObj', 'session')
}
// 首页和列表页面进入抢票，需要归零的数据
export const removeStoreAppMore = () => {
  removeStore('huoche_details', 'session')
  removeStore('huoche_seats', 'session')
  removeStore('huoche_maxpriceObj', 'session')
  removeStore('huoche_maxprice', 'session')
  removeStore('huoche_seatsData_grab', 'session')
}
// 提交订单后数据清除
const ClearData = () => {
  // removeStore('huoche_details', 'session')
  removeStore('TOURISTNUMBER', 'session')
  removeStore('huoche_ChangeSign_partnerId', 'session')
  removeStoreFn()
  setStore('huoche_passengersChoose', '', 'session')
  setStore('huoche_ChooseCredentialarr', '', 'session')
}
// 提交订单，进行下单
export const OrderSave = (promotion, touristNumer, seatsChoose, ticketDetails, phone, chooseTime, contactName, checkAccient, ChangeSign, haschecked) => {
  const handleClose = Loading()
  let orderUrl = '/huoche/v1/order'
  let type = 'NORMAL'
  let parentId = ''
  const { name } = seatsChoose
  const channel = 'tieyou'
  if (ChangeSign && ChangeSign.indexOf('ChangeSign') > 0) {
    orderUrl = '/huoche/v1/change/apply'
    type = 'CHANGE'
    parentId = seatsChoose.parentId
  }
  const customerUserId = getStore('customerUserId', 'session')
  let userPhone = getStore('userPhone', 'session')
  if (!userPhone) {
    userPhone = phone
  }
  const appCode = getStore('customerCode', 'session')
  const { from, to, startTime, endTime, duration, number } = ticketDetails

  const passenger = []
  const { activities = {}, coupon = {} } = promotion
  const couponId = coupon && coupon.id ? coupon.id : ''
  const activityId = activities && activities.id ? activities.id : ''
  const { date } = chooseTime
  for (let i = 0; i < touristNumer.length; i++) {
    passenger.push(touristNumer[i].id)
  }
  const insuranceList = []
  if (checkAccient && haschecked) {
    const { code } = checkAccient
    const obj = {
      credentialCodes: passenger,
      code,
    }
    insuranceList.push(obj)
  }
  const useTime = duration
  const sendData = {
    channel,
    customerUserId,
    userPhone,
    couponId,
    activityId,
    from,
    to,
    date,
    startTime,
    endTime,
    useTime,
    trainNumber:  number,
    seatName:     name,
    passenger,
    contactPhone: phone,
    contactName,
    count:        touristNumer.length,
    insuranceList,
    type,
    parentId,
    appCode,
  }
  console.log('test--obj-', sendData, ChangeSign)
  send(orderUrl, sendData).then(reply => {
    const { code, data, message } = reply
    if (code === 0) {
      console.log('huoche----', data, afterOrdering)
      const { isNeedPay, id } = data
      if (isNeedPay) {
        afterOrdering(data)
      } else {
        window.location.href = `${ location.protocol }//${ location.host }/huoche/orderDetails/${ id }`
      }
      ClearData()
    } else {
      console.log('数据请求失败', message)
      Toast.info(message, 3)
    }
    handleClose()
  })
}
// 计算如果是凌晨，截止时间是前一天
const handleMorning = date => {
  const datesplit = date.split('-')
  const nextdate = new Date()
  nextdate.setFullYear(datesplit[0], (datesplit[1] * 1) - 1, (datesplit[2] * 1) - 1)
  // const dateObj = nextdate.toLocaleDateString()
  const dateObj = `${ nextdate.getFullYear() }/${ nextdate.getMonth() + 1 }/${ nextdate.getDate() }`
  const m = `${ dateObj.split('/')[1] > 9 ? dateObj.split('/')[1] : `0${ dateObj.split('/')[1] }` }`
  const d = dateObj.split('/')[2] > 9 ? dateObj.split('/')[2] : `0${ dateObj.split('/')[2] }`
  const t = `${ dateObj.split('/')[0] }-${ m }-${ d }`
  // console.log('morning---', t)
  return t
}
// 计算备用时间的最后一天
const handleLastTime = (chooseArrtime, time) => {
  console.log('test--chooseArrtime-', chooseArrtime, time)
  const s = time.startTime.split(':')
  const ss = s[0] * 1
  const f = s[1] * 1
  const hours = (-1) + ss
  let last = chooseArrtime.reduce((pre, cur) => {
    if (pre.datestr < cur.datestr) {
      return cur
    }
    return pre
  }, chooseArrtime[0])
  if (chooseArrtime.length === 0) {
    last = getStore('huoche_ChooseTime', 'session')
  }
  const { date } = last
  let lastPost = ''
  if (hours < 0) {
    const hDate = handleMorning(date)
    lastPost = `${ hDate } ${ hours < 9 ? `0${ hours }` : `${ hours }` }:${ f }:59`
  } else {
    lastPost = `${ date } ${ hours < 9 ? `0${ hours }` : `${ hours }` }:${ f }:59`
  }
  console.log('ggg---', hours, last, lastPost)
  return lastPost
}
// 抢票提交订单
export const OrderSaveGrab = (promotion, touristNumer, phone, chooseTime, contactName, chooseCity, checkAccient, timearr, chooseSeat, chooseArrtime, haveChooseZuo, startTime, haschecked) => {
  const handleClose = Loading()
  const orderUrl = '/huoche/v1/rob/tickets/order'
  const customerUserId = getStore('customerUserId', 'session')
  let userPhone = getStore('userPhone', 'session')
  if (!userPhone) {
    userPhone = phone
  }
  const details = getStore('huoche_details', 'session')
  const appCode = getStore('customerCode', 'session')
  let grabSeat = getStore('huoche_seatsData_grab', 'session') ? getStore('huoche_seatsData_grab', 'session') : '' // 这里有待确认
  const packagePrice = getStore('huoche_packagePrice', 'session')
  const schedules = getStore('huoche_chooseTrain', 'session') ? getStore('huoche_chooseTrain', 'session') : []
  // const { from, to } = chooseCity
  const passenger = []
  const { activities = {}, coupon = {} } = promotion
  const couponId = coupon && coupon.id ? coupon.id : ''
  const activityId = activities && activities.id ? activities.id : ''
  const { date } = chooseTime
  const channel = 'tieyou'
  for (let i = 0; i < touristNumer.length; i++) {
    passenger.push(touristNumer[i].id)
  }
  const insuranceList = []
  if (checkAccient && haschecked) {
    const { code } = checkAccient
    const obj = {
      credentialCodes: passenger,
      code,
    }
    insuranceList.push(obj)
  }
  const acceptDate = []
  if (chooseArrtime) {
    for (let i = 0; i < chooseArrtime.length; i++) {
      acceptDate.push(chooseArrtime[i].date)
    }
  }
  const allTrainNumber = []
  if (chooseSeat) {
    for (let i = 0; i < chooseSeat.length; i++) {
      allTrainNumber.push(chooseSeat[i].number)
    }
  }
  const acceptSeat = []
  if (haveChooseZuo) {
    for (let i = 0; i < haveChooseZuo.length; i++) {
      acceptSeat.push(haveChooseZuo[i].name)
      // 默认坐席
      if (!grabSeat) {
        grabSeat = haveChooseZuo[0].name
      }
    }
  }
  // 如果两种情况，没有备选则默认details为主要的
  if (schedules.length === 0 && details) {
    schedules.push(details)
  }
  console.log('--test-startTime--', startTime)
  //  获取最后时间
  const leakCutOffTime = handleLastTime(chooseArrtime, startTime)
  let trainObj = {}
  if (details) {
    trainObj = details
  } else {
    trainObj = startTime
  }
  const trainsarr = getStore('huoche_chooseTrain', 'session')
  const maxpriceObj = getStore('huoche_maxpriceObj', 'session')
  if (details) {
    trainsarr.push(details)
  }
  const a = trainsarr.filter(e => {
    return e.seats.some(o => {
      return o.name === maxpriceObj.name
    })
  })
  trainObj = a[0]
  console.log('--test---trainsarr-', trainsarr, '---maxpriceObj---', maxpriceObj, '--a---', a)
  console.log('train-', trainObj, details, chooseArrtime[0])
  // const startTimes = startTime
  const type = 'ROBTICKETS'
  console.log(chooseArrtime)
  console.log('startTime--', startTime, grabSeat)
  const sendData = {
    channel,
    appCode,
    customerUserId,
    userPhone,
    couponId,
    activityId,
    from:         trainObj.from,
    to:           trainObj.to,
    date,
    startTime:    trainObj.startTime,
    endTime:      trainObj.endTime,
    useTime:      trainObj.duration,
    trainNumber:  trainObj.number,
    seatName:     maxpriceObj.name,
    passenger,
    contactPhone: phone,
    contactName,
    count:        touristNumer.length,
    insuranceList,
    allTrainNumber,
    acceptDate,
    acceptSeat,
    leakCutOffTime,
    type,
    packagePrice,
    schedules,
  }
  console.log('抢票的--sendData', sendData)
  send(orderUrl, sendData).then(reply => {
    const { code, data, message } = reply
    if (code === 0) {
      console.log('huoche----', data, afterOrdering)
      afterOrdering(data)
      // removeStore('TOURISTNUMBER', 'session') // 删除本地的乘客
      ClearData()
    } else {
      console.log('数据请求失败', message)
      Toast.info(message, 3)
    }
    handleClose()
  })
}
         
 
 
 
 huoche/components/AccidentCom.js 
 
import React from 'react'
import { Icon, List, WhiteSpace } from 'antd-mobile'
import { Mask, SlidePage } from '@boluome/oto_saas_web_app_component'

import '../style/AccidentCom.scss'

import AccidentRistMask from './AccidentRistMask'

import tipsIcon from '../img/tips.svg'
import closeIcon from '../img/close.png'
// import noChooseIcon from '../img/noChoose.svg'
// import successIcon from '../img/success.svg'

const Item = List.Item
const Brief = Item.Brief
class AccidentCom extends React.Component {
  constructor(props) {
    super(props)
    // const newState = merge(state)(props)
    this.state = {
      ...props,
    }
    this.handleAccidentRist = this.handleAccidentRist.bind(this)
  }
  componentWillUnmount() {
    // Popup.hide()
  }
  componentWillReceiveProps(nextProps) {
    this.setState({
      ...nextProps,
    })
  }
  handleAccidentRist() {
    const { insuranceDoc } = this.props
    const { insuranceName } = insuranceDoc[0]
    const accidentData = {
      name: insuranceName,
    }
    Mask(
      <SlidePage target='left' showClose={ false } >
        <AccidentRistMask accidentData={ accidentData } />
      </SlidePage>
    , { mask: false, style: { position: 'absolute' } })
  }
  render() {
    const { handleContainerClose, insuranceDoc = [] } = this.props
    console.log('test----insuranceDoc-', insuranceDoc)
    const { venders } = insuranceDoc[0]
    return (
      <div className='AccidentCom'>
        <div className='AccidentComWrap'>
          <List className='AccidentTitle'>
            <Item><span className='quxiao'>取消</span><span className='title'>保险信息</span><span className='queding'>确定</span></Item>
          </List>
          <AccidentRistCom handleAccidentRist={ this.handleAccidentRist } data={ insuranceDoc[0] } />
          <AccidentPeopleCom venders={ venders } />
        </div>
        <img onClick={ () => { handleContainerClose() } } src={ closeIcon } alt='' />
      </div>
    )
  }
}
// <AccidentAfterPay />

export default AccidentCom

// 订单详情页面的火车意外险
const AccidentRistCom = ({ handleAccidentRist, data }) => {
  const { insuranceName, brief } = data
  return (
    <List className='AccidentRistWrap'>
      <WhiteSpace />
      <Item
        className='accidenRist'
        extra={ <Icon onClick={ () => { handleAccidentRist() } } type={ tipsIcon } /> }
      >
        { insuranceName }

        <Brief><span style={{ fontSize: '0.28rem' }}>{ brief }</span></Brief>
      </Item>
      <WhiteSpace />
    </List>
  )
}

// 订单详情页面的被保险人部分
const AccidentPeopleCom = ({ venders }) => {
  // console.log('--test--', venders)
  return (
    <List className='AccidentPeople'>
      {
        venders.map(i => (
          <Item key={ i.credentialCode + i.name } extra={ <span className='tuibao'>{ i.displayStatus }</span> }>
            <div className='title'><span>被保险人</span><span>{ i.name }</span></div>
            <div className='fenlie'><span>保单号</span><span>{ i.credentialCode }</span></div>
            {
              i.status === 15 || i.status === 11 ? (<div className='tips'>退款会在1-5个工作日内退回您的支付宝账户</div>) : ('')
            }
          </Item>
        ))
      }
    </List>
  )
}

// 订单详情页面选择被保人 -----> 未支付时
// const AccidentChoose = () => {
//   return (
//     <List className='AccidentBtn'>
//       <Item>
//         <div className='chooseBtn'><Icon type={ successIcon } /><span>阿沁</span></div>
//         <div className='chooseBtn'><Icon type={ noChooseIcon } /><span>阿沁</span></div>
//       </Item>
//     </List>
//   )
// }

// 订单详情页面查看被保险人 ------> 支付之后
// const AccidentAfterPay = () => {
//   return (
//     <List className='AccidentPayment'>
//       <Item><span className='miniN'>被保险人</span><span className='name'>阿沁</span></Item>
//       <Item><span className='miniN'>被保险人</span><span className='name'>阿沁</span></Item>
//     </List>
//   )
// }
         
 
 
 
 huoche/components/AccidentRistMask.js 
 
import React from 'react'
// import { Icon } from 'antd-mobile'
// import { Mask } from '@boluome/oto_saas_web_app_component'

import '../style/AccidentRistMask.scss'
import closeIcon from '../img/close.png'

class AccidentRistMask extends React.Component {
  constructor(props) {
    super(props)
    // const newState = merge(state)(props)
    this.state = {
      ...props,
    }
    // this.handleNoticeShow = this.handleNoticeShow.bind(this)
  }
  componentWillUnmount() {
    // Popup.hide()
  }
  componentWillReceiveProps(nextProps) {
    this.setState({
      ...nextProps,
    })
  }
  // // 获取保险数据
  // getAccidentRist() {
  //
  // }
  render() {
    const { handleContainerClose } = this.props
    const { accidentData } = this.state
    console.log('accidentData---', accidentData)
    const { name = '' } = accidentData // detail
    return (
      <div className='AccidentRistMask'>
        <div className='title'>{ name }</div>
        <div className='details'>
          <p>在保险期间内，被保险人每次以乘客身份乘坐铁路公共交通工具时遭受意外伤害事故导致身故、
          残疾的，保险公司将根据保单约定给付意外身故、残疾保险金。铁路公共交通工具指领有合法的公共运输营业执照，
          以公共运输为目的，被保险人以乘客身份需要付款乘坐的铁路机动运输工具，包括火车、轨道列车。</p>
        </div>
        <img onClick={ () => { handleContainerClose() } } src={ closeIcon } alt='' />
      </div>
    )
  }
}

// {
//   detail.map(i => (
//     <p key={ i }>{ i }</p>
//   ))
// }

// <p>1、声明</p>
// <div>保险名称：《公共交通工具意外伤害保险（2014版）》</div>
// <p>2、取票方式</p>
// <div>保险有效期： 本产品保险期间： 当次列车有效，被保险人以乘客身份乘坐从事赢客运的列车期间
// （自持有效车票检票进入车厢时起，至抵达车票载明的终点离开所乘客运火车车厢时止）</div>
// <p>3、网上退票</p>
// <div>保险责任：火车意外伤害保险最高赔付50万元人民币（按中国保监会规定，
// 10周岁及以下的未成年人累计身故保险金额不得超过人民币20万元；11至17周岁的未成年人累计身故保险金额不得超过人民币50万元。
// 若未成年被保险人的保险金额超过上述规定，则以上述规定的保险金额为限。）</div>
// <img onClick={ () => { Mask.closeAll() } } src={ closeIcon } alt='' />

export default AccidentRistMask
         
 
 
 
 huoche/components/ChangeSign.js 
 
import React from 'react'
import { browserHistory } from 'react-router'
import { List, Icon, WhiteSpace, Toast } from 'antd-mobile'
import { Mask } from '@boluome/oto_saas_web_app_component'
import { setStore, getStore } from '@boluome/common-lib'
import Cardtime from './cardtime'

import '../style/PassengerInformWrap.scss'
import noChooseIcon from '../img/noChoose.svg'
import successIcon from '../img/success.svg'
import logo from '../img/logo.svg'

const Item = List.Item
const Brief = Item.Brief
class ChangeSign extends React.Component {
  constructor(props) {
    super(props)
    const propsObj = getStore('huoche_Change_data', 'session')
    const details = getStore('huoche_details', 'session') ? getStore('huoche_details', 'session') : ''
    const chooseTime = getStore('huoche_ChooseTime', 'session')
    const seats = getStore('huoche_seats', 'session')
    const { passengers, ChooseCredential } = propsObj
    const passengersChoose = getStore('huoche_passengersChoose', 'session') ? getStore('huoche_passengersChoose', 'session') : passengers.filter(i => { return i.id === ChooseCredential })
    const ChooseCredentialarr = getStore('huoche_ChooseCredentialarr', 'session') ? getStore('huoche_ChooseCredentialarr', 'session') : [ChooseCredential]
    this.state = {
      ...propsObj,
      ChooseCredentialarr,
      passengersChoose,
      details,
      chooseTime,
      seats,
    }
    console.log('ChangeSign---', this.props.ChooseCredential, passengersChoose, chooseTime)
    this.handleRefundInfo = this.handleRefundInfo.bind(this)
    this.handlePassengersChoose = this.handlePassengersChoose.bind(this)
  }
  componentWillUnmount() {
    // Popup.hide()
  }
  componentWillReceiveProps(nextProps) {
    this.setState({
      ...nextProps,
    })
  }
  // 选择改签乘客
  handleRefundChecked(code, arr) {
    const passengersChoose = []
    const filter = arr.filter(item => { return item === code })
    if (filter.length > 0) {
      for (let i = 0; i < arr.length; i++) {
        if (arr[i] === code) {
          arr.splice(i, 1)
        }
      }
    } else {
      arr.push(code)
    }
    if (arr.length > 0) {
      this.handlePassengersChoose(arr, passengersChoose)
    } else {
      this.setState({
        passengersChoose,
      })
    }
    setStore('huoche_ChooseCredentialarr', arr, 'session')
    this.setState({
      ChooseCredentialarr: arr,
    })
  }
  // 当有选择了改签人员时
  handlePassengersChoose(arr, passengersChoose) {
    const { passengers } = this.state
    for (let i = 0; i < passengers.length; i++) {
      for (let o = 0; o < arr.length; o++) {
        if (passengers[i].id === arr[o]) {
          passengersChoose.push(passengers[i])
        }
      }
    }
    this.setState({
      passengersChoose,
    })
    setStore('huoche_passengersChoose', passengersChoose, 'session')
  }
  // 提交改签申请
  handleRefundInfo(passengersChoose) {
    // const { passengers, ChooseCredentialarr, orderId } = this.state
    setStore('huoche_passengersChoose', passengersChoose, 'session')
    browserHistory.push('/huoche/order?ChangeSign')
    Mask.closeAll()
  }
  // 点击改签的时候----到列车列表页面
  handleGoList(from, to) {
    const chooseCity = {
      from,
      to,
    }
    // const chooseTime = ''
    setStore('huoche_ChooseCity', chooseCity, 'session')
    setStore('huoche_haschecked', true, 'session')
    // setStore('huoche_ChooseTime', chooseTime, 'session')
    browserHistory.push('/huoche/moredata?ChangeSign')
    Mask.closeAll()
  }
  render() {
    const { passengers, ChooseCredentialarr, trains, chooseTime, passengersChoose, details, trainNumber, seats } = this.state
    console.log('RefundCom--state-sss', this.state, details)
    const endersarr = passengers
    console.log('endersarr', endersarr, ChooseCredentialarr)
    const {
      arriveCity = '上海',
      departureCity = '北京',
      seatName,
    } = trains
    console.log(trains, passengersChoose, details)
    const defaultClass = {
      backgroundColor: '#fffbf2',
    }
    return (
      <div className='refundWrap'>
        <WhiteSpace />
        <Item>选择改签乘客</Item>
        <div className='refundListWrap'>
          <List className='refundList'>
            {
              endersarr.map(o => (
                <div key={ `${ o.credentialCode }-${ 100 * Math.random() }` }>
                  {
                    o.isChange === true ? (
                      <Item key={ o.id } thumb={ <Icon onClick={ () => this.handleRefundChecked(o.id, ChooseCredentialarr) } type={ ChooseCredentialarr.filter(i => { return i === o.id }).length > 0 ? successIcon : noChooseIcon } /> }>
                        <CanChange o={ o } />
                      </Item>
                    ) : ('')
                  }
                </div>
              ))
            }
            <WhiteSpace size='lg' />
            <Item arrow='horizontal' onClick={ () => this.handleGoList(departureCity, arriveCity) }><span className='titleSpan'><Icon type={ logo } /></span><span className='titleSpan'>请选择改签的车次与坐席</span></Item>
            {
              details ? (<Cardtime UserComponent={ <ChoosePeople passengersChoose={ passengersChoose } seats={ seats } /> } ticketDetails={ details } chooseTime={ chooseTime } defaultClass={ defaultClass } />) : ('')
            }
            {
              details ? (<WhiteSpace size='lg' />) : ('')
            }
            <Item extra={ `(${ trainNumber }/${ seatName })` }>原始车票</Item>
            <WhiteSpace />
          </List>
        </div>
        {
          ChooseCredentialarr && ChooseCredentialarr.length > 0 ? (<ChangeBtn details={ details } handleRefundInfo={ this.handleRefundInfo } passengersChoose={ passengersChoose } />) : (<div className='refundFooter refundFooterNouse'>提交退票申请</div>)
        }
      </div>
    )
  }
}

export default ChangeSign

const ChangeBtn = ({ details, passengersChoose, handleRefundInfo }) => {
  return (
    <div>
      { details ? (<div className='refundFooter' onClick={ () => handleRefundInfo(passengersChoose) }>提交改签申请</div>) : (<div className='refundFooter' onClick={ () => Toast.info('请选择改签的车次与坐席!', 2, null, false) }>提交改签申请</div>) }
    </div>
  )
}

const CanChange = ({ o }) => {
  const { name, credentialCode } = o
  return (
    <div key={ credentialCode }><span>乘客</span><span>{ name }</span><span className='numStr'>{ `${ credentialCode.slice(0, 4) } ******** ${ credentialCode.slice(-3) }` }</span></div>
  )
}

const ChoosePeople = ({ passengersChoose, seats }) => {
  const { name, price } = seats
  console.log('--seats--', seats)
  return (
    <div>
      {
        passengersChoose && passengersChoose.map(o => (
          <Item key={ o.credentialCode + o.name } multipleLine align={ top } extra={ <span style={{ marginRight: '0px', color: '#333' }}>{ name } ¥{ price }</span> }>
            <span>{ o.name }</span><span style={{ color: '#999' }}>{ o.ticketType }</span> <Brief><span style={{ color: '#333' }}>{ `${ o.credentialCode.slice(0, 4) } ******** ${ o.credentialCode.slice(-3) }` }</span></Brief>
          </Item>
        ))
      }
    </div>
  )
}
         
 
 
 
 huoche/components/InvoiceDetails.js 
 
import React from 'react'
// import { Icon } from 'antd-mobile'
import { Mask } from '@boluome/oto_saas_web_app_component'

import '../style/InvoiceDetails.scss'
import closeIcon from '../img/close.png'

class InvoiceDetails extends React.Component {
  constructor(props) {
    super(props)
    // const newState = merge(state)(props)
    this.state = {
      ...props,
    }
    // this.handleNoticeShow = this.handleNoticeShow.bind(this)
  }
  componentWillUnmount() {
    // Popup.hide()
  }
  componentWillReceiveProps(nextProps) {
    this.setState({
      ...nextProps,
    })
  }
  handleNoticeShow() {
    Mask(<OrderDetailsNotice />, { mask: false, style: { position: 'absolute' } })
  }
  render() {
    const { seatsChoose, promotion, touristNumer, withoutDiscountedPrice = 0, checkAccient, maxpriceObj = '', packagePrice, haschecked, ChangeSign, isShow = true } = this.state
    console.log('maxpriceObj--', maxpriceObj, seatsChoose, checkAccient, 'packagePrice--', packagePrice)
    console.log('--ChangeSign-', ChangeSign, seatsChoose)
    let price = 0
    let name = ''
    if (maxpriceObj && !seatsChoose && !ChangeSign) {
      price = maxpriceObj.price
      name = maxpriceObj.name
      console.log('maxpriceObj')
    } else if (ChangeSign && isShow === false) {
      price = 0
      name = ''
    } else {
      price = seatsChoose.price
      name = seatsChoose.name
      console.log('seatsChoose')
    }
    const { discount = 0 } = promotion
    const sumDiscounted = Number(withoutDiscountedPrice) * touristNumer.length
    let packagePriceSum = 0
    if (packagePrice) {
      packagePriceSum = Number(packagePrice) * touristNumer.length
    }
    let sum = Number(price) * touristNumer.length
    // console.log('sum--4-', sum)
    sum += sumDiscounted
    // console.log('sum--3-', sum)
    if (checkAccient && haschecked === true) {
      sum += checkAccient.price * touristNumer.length
    }
    // console.log('sum--2-', sum)
    sum += packagePriceSum
    // console.log('sum--1-', sum, packagePriceSum)
    return (
      <div className='InvoiceDetails'>
        <div className='title'>
          <span className='line' />
          <span className='text'>费用明细</span>
          <span className='line' />
        </div>
        <div className='price'>{ `¥ ${ (sum - discount).toFixed(2) }` }</div>
        <div className='list'>
          {
            (!price || price === 0) && ChangeSign ? ('') : (<p><span>{ name }</span><span>{ `¥${ price } X ${ touristNumer.length }份` }</span></p>)
          }
          {
            withoutDiscountedPrice && withoutDiscountedPrice !== 0 ? (<p><span>手续费</span><span>{ `¥${ withoutDiscountedPrice } X ${ touristNumer.length }份` }</span></p>) : ('')
          }
          {
            packagePrice && packagePrice !== 0 ? (<p><span>加速包</span><span>{ `¥${ packagePrice } X ${ touristNumer.length }份` }</span></p>) : ('')
          }
          {
            checkAccient && haschecked ? (<p><span>保险</span><span>{ `¥${ checkAccient.price } X ${ touristNumer.length }份` }</span></p>) : ('')
          }
          <p><span>优惠券</span><span className='Preferential'>-¥{ `${ discount.toFixed(2) }` }</span></p>
        </div>
        <img onClick={ () => { Mask.closeAll() } } src={ closeIcon } alt='' />
      </div>
    )
  }
}

export default InvoiceDetails

const OrderDetailsNotice = () => {
  return (<div />)
}
         
 
 
 
 huoche/components/NoticeMask.js 
 
import React from 'react'
// import { Icon } from 'antd-mobile'
// import { Mask } from '@boluome/oto_saas_web_app_component'

import '../style/ordernotice.scss'
import closeIcon from '../img/close.png'

class NoticeMask extends React.Component {
  constructor(props) {
    super(props)
    this.state = {
      ...props,
    }
  }
  componentWillUnmount() {
    // Popup.hide()
  }
  componentWillReceiveProps(nextProps) {
    this.setState({
      ...nextProps,
    })
  }
  render() {
    const { handleContainerClose } = this.props
    return (
      <div className='noticeMaskwrap'>
        <div className='noticeMask'>
          <p>1、声明</p>
          <div>本产品内含火车票，受全国各铁路局的不同规定与要求，无法承诺百分之百都能预订成功</div>
          <p>2、取票方式</p>
          <div>凭购票时的有效证件和电子取票号，可在全国任意火车站或代售点取票。代售点收取代售费5元/张，
            车站售票窗口取异地票收取费用5元/张，车站取票机不收取任何费用。</div>
          <p>3、网上退票</p>
          <div>
            <ul>
              <li>代购成功，未取票且距发车时间大于1小时，可在“我的订单”中申请网上退票</li>
              <li>申请退票后，卖家1小时内帮您退票</li>
              <li>根据退票时间，铁路局收取5%-20%的退票服务费；建议您尽早提交退票申请，减少手续费损失。
              （对开车前15天以上（不含）退票的，不收取退票费。票面乘车站开车时间开车前15天（含）至48小时以上的按票价5%收取手续费；
              距离发车时间48小时（含）以内、24小时以上的，收取10%退票费；距离发车时间不足24小时（含）的，
              收取20%退票费，根据2015年6月10日新规，距发车时间15天以内的车票，改签到15以上的，
              退票时收取5%退票费；最终以铁路局实退为准。）</li>
              <li>退票成功后，退还款项（含保险）即刻退回您的支付账户</li>
              <li>铁路局规定退票手续费最少收取2元，因此票面价低于2元钱的车票，退票后退款为0元</li>
            </ul>
          </div>
          <p>4、车站退票</p>
          <div>
            <ul>
              <li>代购成功，已换取实体票或距离发车时间小于1小时，需您携带购票时有效证件和火车票，
              前往全国任意火车站退票窗口办理退票。退还款项将在7-20个工作日内退回您的支付宝账户。
              发车后窗口也无法操作退票，该票只能作废。</li>
              <li>如果您购买了交通意外险，窗口退票成功后，请尽快联系卖家为您撤保，
              退还款项将在7-20个工作日内退回您的支付宝账户。如果没有及时通知，保险将按原车次生效，后果由买家自行承担</li>
            </ul>
          </div>
        </div>
        <img onClick={ () => { handleContainerClose() } } src={ closeIcon } alt='' />
      </div>
    )
  }
}

export default NoticeMask
         
 
 
 
 huoche/components/OrderRefundCom.js 
 
import React from 'react'
import { List, Accordion, WhiteSpace, Icon } from 'antd-mobile'
import { Mask, SlidePage } from '@boluome/oto_saas_web_app_component'

// import RefundInfoCom from './RefundInfoCom'

import '../style/OrderRefundCom.scss'
import '../style/InvoiceDetails.scss'
import tipsIcon from '../img/tipsOrgan.svg'
import closeIcon from '../img/close.png'

const Item = List.Item
class OrderRefundCom extends React.Component {
  constructor(props) {
    super(props)
    this.state = {
      ...props,
    }
    this.handRefundInfoCom = this.handRefundInfoCom.bind(this)
  }
  componentWillUnmount() {
    // Popup.hide()
  }
  componentWillReceiveProps(nextProps) {
    this.setState({
      ...nextProps,
    })
  }
  onChange() {
    console.log('onChange')
  }
  handleConfirmRefund(fn) {
    fn()
    console.log('OrderRefundCom---OK')
  }
  handRefundInfoCom(o, withoutDiscountedPrice) {
    Mask(
      <SlidePage target='right' showClose={ false }>
        <InfoCom data={ o } withoutDiscountedPrice={ withoutDiscountedPrice } />
      </SlidePage>
      , { mask: true, style: { position: 'absolute' } }
    )
  }
  render() {
    const { refundList, refundCountPrice, withoutDiscountedPrice } = this.state
    return (
      <div className='OrderrefundWrap'>
        <Accordion accordion openAnimation={{}} className='my-accordion' onChange={ this.onChange }>
          <Accordion.Panel header={ <div><span className='orderrefund'>订单有退款</span><span className='refundCountPrice'>{ `¥${ refundCountPrice.toFixed(2) }` }</span></div> }>
            <List className='my-list'>
              <RefundList handRefundInfoCom={ this.handRefundInfoCom } refundList={ refundList } withoutDiscountedPrice={ withoutDiscountedPrice } />
            </List>
          </Accordion.Panel>
        </Accordion>
        <WhiteSpace size='lg' />
      </div>
    )
  }
}

export default OrderRefundCom

// 如果有退款，展示乘客和退款信息
const RefundList = ({ handRefundInfoCom, refundList, withoutDiscountedPrice }) => {
  if (refundList && refundList[0].name) {
    return (
      <div>
        {
          refundList.map(o => (
            <Item className='refundlistwrap'>
              <div className='refundTitleL'><span>{ o.name }</span><span>{ o.passengerType }</span><span>{ o.seatName }</span></div>
              <div className='refundTitleR'><span>实际退款</span><span>¥{ o.realRefundPrice }</span><span onClick={ () => handRefundInfoCom(o, withoutDiscountedPrice) }><Icon type={ tipsIcon } /></span></div>
              <div className='refundedTips'><span>{ o.date.split(' ')[0] }</span><span>退票成功</span><span className='tips'>预计1-5个工作日内完成退款</span></div>
            </Item>
          ))
        }
      </div>
    )
  }
  return (
    <div>
      {
        refundList.map(o => (
          <Item className='refundlistwrap' key={ `${ o.createdAt + Math.random() }` }>
            <div className='refundTitleR2'><span className='refundTime'>{ o.createdAt }</span><span>{ o.explain }</span><span className='refundRight'>¥{ o.realRefundPrice }</span><span className='refundRight'>退款金额</span></div>
            <div className='refundedTips'><span className='tips'>预计1-5个工作日内完成退款</span></div>
          </Item>
        ))
      }
    </div>
  )
}

const InfoCom = ({ data, withoutDiscountedPrice, handleContainerClose }) => {
  const { realRefundPrice, detail } = data
  const { facePrice, cancellationCharge } = detail
  return (
    <div className='InvoiceDetails'>
      <div className='title'>
        <span className='line' />
        <span className='text'>退款明细</span>
        <span className='line' />
      </div>
      <div className='price'>{ `¥ ${ realRefundPrice.toFixed(2) }` }</div>
      <div className='list'>
        <p><span>车票价</span><span className='spanR'>¥{ facePrice }</span></p>
        <p className='thoughSpan'><span>手续费不可退</span><span className='spanR'>¥{ withoutDiscountedPrice }</span></p>
        <p className='thoughSpan'><span>退票手续费</span><span className='hongColor'>¥{ cancellationCharge }</span></p>
        {
          detail && detail.platformActivity ? (<p><span>平台活动</span><span className='Preferential'>-¥{ detail.platformActivity }</span></p>) : ('')
        }
        {
          detail && detail.coupon ? (<p><span>优惠券</span><span className='Preferential'>-¥{ detail.coupon }</span></p>) : ('')
        }
      </div>
      <img onClick={ () => { handleContainerClose() } } src={ closeIcon } alt='' />
    </div>
  )
}
         
 
 
 
 huoche/components/PassengerInformCom.js 
 
import React from 'react'
import { browserHistory } from 'react-router'
import { List, Modal } from 'antd-mobile'
import { Mask, SlidePage } from '@boluome/oto_saas_web_app_component'
import { moment, setStore, removeStore } from '@boluome/common-lib'

import RefundCom from './RefundCom'
import ChangeSign from './ChangeSign'

import '../style/PassengerInformWrap.scss'

const Item = List.Item
const alert = Modal.alert
class PassengerInformCom extends React.Component {
  constructor(props) {
    super(props)
    // const newState = merge(state)(props)
    this.state = {
      ...props,
      isClose:       false,
      isChangeClose: false,
      isCanChange:   false,
      changeText:    '距离发车小于1小时，需要您前往全国任意火车站售票窗口办理改签',
      isCloseText:   '距离发车时间小于一小时，需要您前往全国任意火车站退票窗口办理退票',
    }
    this.handledoll = this.handledoll.bind(this)
    this.handleChangeSign = this.handleChangeSign.bind(this)
    this.handleChangeCan = this.handleChangeCan.bind(this)
    console.log('PassengerInformCom---', props)
  }
  componentWillUnmount() {
    // Popup.hide()
  }
  componentWillReceiveProps(nextProps) {
    this.setState({
      ...nextProps,
    })
  }
  // // 退票确认弹窗
  // handleRefundInfo() {
  //   Mask(<RefundInfoCom handleConfirmRefund={ this.handleConfirmRefund } />, { mask: true, style: { position: 'absolute' } })
  // }
  // 判断是否在退票时间内
  handledoll(time, passengers, credentialCode, orderId, people) {
    if (time < 61) {
      // this.setState({
      //   isClose:     true,
      //   isCloseText: '距离发车时间小于一小时，需要您前往全国任意火车站退票窗口办理退票',
      // })
      const tipText = '距离发车时间小于一小时，需要您前往全国任意火车站退票窗口办理退票'
      Mask(<CanChangeApplyCom tipText={ tipText } />, { mask: true, style: { position: 'absolute' } })
      console.log('time----', time)
    } else {
      this.handleRefund(passengers, credentialCode, orderId, people)
    }
  }
  // 选择退票
  handleRefund(passengers, credentialCode, orderId, people) {
    const { status, trains, type, partnerId } = this.state
    const { departueDateTime = '' } = trains
    const date = moment('x')(departueDateTime)
    let day = new Date()
    day = moment('x')(day)
    const t = (date - day) / 60000
    console.log('测试时间-date,day--departueDateTime', t)
    if (t < 59) {
      // this.setState({
      //   isClose:     true,
      //   isCloseText: '距离发车时间小于一小时，需要您前往全国任意火车站退票窗口办理退票',
      // })
      const tipText = '距离发车时间小于一小时，需要您前往全国任意火车站退票窗口办理退票'
      Mask(<CanChangeApplyCom tipText={ tipText } />, { mask: true, style: { position: 'absolute' } })
      console.log('我走了这handleRefund')
    } else {
      Mask(
        <SlidePage target='right' type='root' showClose={ false }>
          <RefundCom
            passengers={ passengers }
            ChooseCredential={ credentialCode }
            orderId={ orderId }
            status={ status }
            type={ type }
            refundpeople={ people }
            partnerId={ partnerId }
          />
        </SlidePage>
        , { mask: false, style: { position: 'absolute' } }
      )
    }
  }
  // 提示一个小时之内无法在线上退票
  handlecanotRefund() {
    this.setState({
      isClose: false,
    })
  }
  // 提示30分钟前不能改签
  handlecanotChange() {
    this.setState({
      isChangeClose: false,
      isCanChange:   false,
    })
  }
  // 改签时间判断
  handleChangeCan(passengers, credentialCode) {
    const { trains, canChangeApply } = this.state
    if (!canChangeApply) {
      // this.setState({
      //   isClose:     true,
      //   isCloseText: '该订单尚有改签订单未处理完成，请在处理完成之后再进行申请',
      // })
      const tipText = '该订单尚有改签订单未处理完成，请在处理完成之后再进行申请'
      Mask(<CanChangeApplyCom tipText={ tipText } />, { mask: true, style: { position: 'absolute' } })
      return
    }
    const { departueDateTime = '' } = trains
    const date = moment('x')(departueDateTime)
    let day = new Date()
    day = moment('x')(day)
    const t = (date - day) / 60000
    if (t < 59) {
      // this.setState({
      //   isClose:     true,
      //   isCloseText: '距离发车小于1小时，需要您前往全国任意火车站售票窗口办理改签',
      // })
      const tipText = '距离发车小于1小时，需要您前往全国任意火车站售票窗口办理改签'
      Mask(<CanChangeApplyCom tipText={ tipText } />, { mask: true, style: { position: 'absolute' } })
    } else {
      this.handleChangeSign(passengers, credentialCode)
    }
  }
  // 改签选择框
  handleChangeSign(passengers, credentialCode) {
    console.log(passengers, credentialCode)
    const { trains } = this.state
    alert('温馨提示', '一张火车票只能成功改签一次，请确认是否改签', [
      {
        text:    '考虑一下',
        onPress: () => console.log('cancel'),
      },
      {
        text:    '我意已决',
        onPress: () => {
          const { partnerId } = this.state
          setStore('huoche_ChangeSign_partnerId', partnerId, 'session')
          const { orderId, status } = this.state
          const { trainNumber } = trains
          const propsObj = { passengers, ChooseCredential: credentialCode, trains, orderId, status, trainNumber }
          setStore('huoche_Change_data', propsObj, 'session')
          console.log('trainNumber---', trainNumber, '----propsObj-', propsObj)
          console.log('people--', status, partnerId, ChangeSign)
          // 改签出去重新选车次
          removeStore('huoche_details', 'session')
          browserHistory.push('/huoche/refund')
        },
        style: { fontWeight: 'bold' },
      },
    ])
  }
  render() {
    const { status, passengers, orderId, isClose, trains, isChangeClose, isCanChange, isCloseText, isChangeShow } = this.state
    console.log('PassengerInformCom---', this.state, trains, status, '--orderId-', orderId, isChangeClose, isCanChange, '---isChangeShow--', isChangeShow)
    return (
      <div className='PassengerInformWrap'>
        <List>
          {
            passengers.map(o => (
              <Item key={ `${ o.credentialCode }-${ 100 * Math.random() }` }>
                {
                  o.isChange === false ? (<div className='itemChange' />) : ('')
                }
                <div className='passengerLI'>
                  <div className='item'>
                    <span className='name oto'>{ o.name }</span><span className='people oto'>{ o.passengerType }</span>
                  </div>
                  <div className='item'>
                    <span className='orderId oto'>{ `${ o.credentialCode.slice(0, 4) } ******** ${ o.credentialCode.slice(-3) }` }</span>
                  </div>
                  <div className='item'>
                    <span className='statePass Orange'>{ o.displayStatus }</span>
                  </div>
                </div>
                <div className='passengerRI'>
                  <div className='item'>
                    <span className='zuo oto'>{ o.ticketSeat }</span><span className='price oto'>¥{ o.ticketPrice }</span>
                  </div>
                  <div className='item'>
                    <span className='zuohao Orange'>{ o.seatName }</span>
                  </div>
                  <div className='item'>
                    <span className='fentui hidden'>分享</span>
                    {
                      isChangeShow ? ('') : (o.isChange === false ? (<span className='fentui zhihui'>改签</span>) : (<span className='fentui' onClick={ () => this.handleChangeCan(passengers, o.id) }>改签</span>))
                    }
                    {
                      o.isRefund === false ? (<span className='fentui zhihui'>退票</span>) : (<span className='fentui' onClick={ () => this.handledoll(o.remainingTime, passengers, o.id, orderId, o) }>退票</span>)
                    }
                    <Modal
                      title=''
                      transparent
                      maskClosable='true'
                      visible={ isClose }
                      footer={ [{ text: '知道了', onPress: () => { this.handlecanotRefund() } }] }
                    >
                      { isCloseText }
                    </Modal>

                  </div>
                </div>
              </Item>
            ))
          }
        </List>
      </div>
    )
  }
}

export default PassengerInformCom

const CanChangeApplyCom = ({ tipText }) => {
  return (
    <div className='canChangeApplyCom'>
      <div className='tips'>{ tipText }</div>
      <div className='canChangeBtn' onClick={ () => Mask.closeAll() }>知道了</div>
    </div>
  )
}
// <Modal
//   title=''
//   transparent
//   maskClosable='true'
//   visible={ isChangeClose }
//   footer={ [{ text: '知道了', onPress: () => { this.handlecanotChange() } }] }
// >
//   距离发车小于1小时，需要您前往全国任意火车站售票窗口办理改签
// </Modal>
// <Modal
//   title=''
//   transparent
//   maskClosable='true'
//   visible={ isCanChange }
//   footer={ [{ text: '知道了', onPress: () => { this.handlecanotChange() } }] }
// >
//   该订单尚有改签订单未处理完成，请在处理完成之后再进行申请
// </Modal>
         
 
 
 
 huoche/components/RefundCom.js 
 
import React from 'react'
import { List, Icon, WhiteSpace } from 'antd-mobile'
import { Mask } from '@boluome/oto_saas_web_app_component'

import RefundInfoCom from './RefundInfoCom'
import Ordernotice from './ordernotice'

import noChooseIcon from '../img/noChoose.svg'
import successIcon from '../img/success.svg'

const Item = List.Item
class RefundCom extends React.Component {
  constructor(props) {
    super(props)
    // const newState = merge(state)(props)
    // const arrChoose = [this.props.ChooseCredential]
    this.state = {
      ...props,
      ChooseCredentialarr: [this.props.ChooseCredential],
      refundpeople:        [this.props.refundpeople],
    }
    this.handleRefundInfo = this.handleRefundInfo.bind(this)
  }
  componentWillUnmount() {
    // Popup.hide()
  }
  componentWillReceiveProps(nextProps) {
    this.setState({
      ...nextProps,
    })
  }
  // 退票乘客选择
  handleRefundChecked(code, arr) {
    const { passengers } = this.state
    const filter = arr.filter(item => { return item === code })
    if (filter.length > 0) {
      for (let i = 0; i < arr.length; i++) {
        if (arr[i] === code) {
          arr.splice(i, 1)
        }
      }
    } else {
      arr.push(code)
    }
    const peoplearr = passengers.filter(e => arr.some(o => o === e.id))
    this.setState({
      ChooseCredentialarr: arr,
      refundpeople:        peoplearr,
    })
  }
  // 退票确认弹窗
  handleRefundInfo() {
    // Toast.info('确认退票--', 2)
    const { passengers, ChooseCredentialarr, orderId, type, refundpeople, partnerId } = this.state
    console.log('--test---type', type, passengers, 'orderId---', orderId)
    Mask(<RefundInfoCom
      ChooseCredentialarr={ ChooseCredentialarr }
      passengers={ passengers }
      orderId={ orderId }
      type={ type }
      peoplearr={ refundpeople }
      partnerId={ partnerId }
    />
    , { mask: true, style: { position: 'absolute' } })
  }
  render() {
    const { passengers, ChooseCredentialarr, status } = this.state
    console.log('RefundCom--state-sss', this.state)
    const endersarr = []
    for (let i = 0; i < passengers.length; i++) {
      if (passengers[i].isRefund) {
        endersarr.push(passengers[i])
      }
    }
    console.log('endersarr', endersarr, ChooseCredentialarr, this.handleRefundChecked, this.handleRefundInfo)
    return (
      <div className='refundWrap'>
        <Item>选择退票乘客</Item>
        <List className='refundList'>
          {
            endersarr.map(o => (
              <Item key={ o.id } thumb={ <Icon onClick={ () => this.handleRefundChecked(o.id, ChooseCredentialarr) } type={ ChooseCredentialarr.filter(i => { return i === o.id }).length > 0 ? successIcon : noChooseIcon } /> }>
                <span>乘客</span><span>{ o.name }</span><span className='numStr'>{ `${ o.credentialCode.slice(0, 4) } ******** ${ o.credentialCode.slice(-3) }` }</span>
              </Item>
            ))
          }
          <WhiteSpace size='lg' />
          <Ordernotice status={ status } />
        </List>
        {
          ChooseCredentialarr && ChooseCredentialarr.length > 0 ? (<div className='refundFooter' onClick={ () => this.handleRefundInfo() }>提交退票申请</div>) : (<div className='refundFooter refundFooterNouse'>提交退票申请</div>)
        }
      </div>
    )
  }
}

export default RefundCom

// {
//   endersarr.map(o => (
//     <Item key={ o.credentialCode } thumb={ <Icon onClick={ () => this.handleRefundChecked(o.credentialCode, ChooseCredentialarr) } type={ ChooseCredentialarr.filter(i => { return i === o.credentialCode }).length > 0 ? successIcon : noChooseIcon } /> }>
//       <span>乘客</span><span>{ o.name }</span><span className='numStr'>{ o.credentialCode }</span>
//     </Item>
//   ))
// }
// </List>
// <WhiteSpace size='lg' />
// <Ordernotice />
// {
// ChooseCredentialarr && ChooseCredentialarr.length > 0 ? (<div className='refundFooter' onClick={ () => this.handleRefundInfo() }>提交退票申请</div>) : (<div className='refundFooter refundFooterNouse'>提交退票申请</div>)
// }

// // 退票弹窗部分
// const RefundInfoCom = ({ handleConfirmRefund, handleContainerClose }) => {
//   return (
//     <div className='refundinfoWrap'>
//       <div className='main'>
//         <div className='title'>确认退票</div>
//         <p className='miniTitle'>退票费用明细</p>
//         <p><span>车票价</span><span className='spanR'>¥560</span></p>
//         <p><span>火车意外险</span><span className='spanR'>¥560</span></p>
//         <p><span>手续费不可退</span><span className='spanR'>¥560</span></p>
//         <p><span>退票手续费</span><span className='hongColor'>¥560</span></p>
//         <p><span>优惠券</span><span className='hongColor'>¥560</span></p>
//         <p><span>平台活动</span><span className='hongColor'>¥560</span></p>
//         <p><span>实际退款金额:</span><span className='sumPrice'><i>¥</i>560</span></p>
//         <div className='textTips'>温馨提示：确认退票后将无法取消，请您谨慎操作；退票成功后退款会在1-5个工作日退回您的支付账户</div>
//       </div>
//       <div className='closeBtn'>
//         <div onClick={ () => handleContainerClose() }>取消</div>
//         <div onClick={ () => handleConfirmRefund(handleContainerClose) }>确定</div>
//       </div>
//     </div>
//   )
// }
         
 
 
 
 huoche/components/RefundInfoCom.js 
 
import React from 'react'
import { Toast } from 'antd-mobile'
import { send, get } from '@boluome/common-lib'
import { Loading, Mask } from '@boluome/oto_saas_web_app_component'

import '../style/RefundInfoCom.scss'

import closeIcon from '../img/close.png'
// const Item = List.Item
const timeOut = ''
class RefundInfoCom extends React.Component {
  constructor(props) {
    super(props)
    this.state = {
      ...props,
    }
    this.handleRefundText = this.handleRefundText.bind(this)
    this.handleRefundDetails()
    console.log('------props-props-props-------', props)
  }
  componentWillUnmount() {
    clearTimeout(timeOut)
  }
  componentWillReceiveProps(nextProps) {
    this.setState({
      ...nextProps,
    })
  }
  onChange() {
    console.log('onChange')
  }
  handleRefundText() {
    const handleClose = Loading()
    const { orderId, ChooseCredentialarr = [], type, peoplearr, partnerId } = this.props
    console.log('handleRefundText----type', type, 'ChooseCredentialarr---', ChooseCredentialarr, 'orderId--', orderId)
    console.log(this.state)
    if (type && type === 'CHANGE') {
      const refundtextUrl = '/huoche/v1/change/refund/apply'
      const sendData = {
        channel:         'tieyou',
        id:              orderId,
        credentialCodes: ChooseCredentialarr,
      }
      send(refundtextUrl, sendData).then(reply => {
        const { code, data, message } = reply
        if (code === 0) {
          console.log('handleRefundText-改签', data)
          Mask.closeAll()
          window.location.reload()
        } else {
          Toast.info(message, 3)
        }
        handleClose()
      })
    } else {
      const refundtextUrl = '/huoche/v1/ticket/refund'
      const tickets = []
      if (peoplearr && peoplearr.length > 0) {
        for (let o = 0; o < peoplearr.length; o++) {
          const { name, seatName, credentialCode } = peoplearr[o]
          const obj = {
            name,
            seatName,
            idCard: credentialCode,
          }
          tickets.push(obj)
        }
      }
      const sendData = {
        partnerId,
        tickets,
      }
      send(refundtextUrl, sendData).then(reply => {
        const { code, data, message } = reply
        if (code === 0) {
          console.log('handleRefundText-正常退票', data)
          Mask.closeAll()
          window.location.reload()
        } else {
          Toast.info(message, 3)
        }
        handleClose()
      })
    }
  }
  // 退款明细 查明
  handleRefundDetails() {
    const handleClose = Loading()
    const { orderId, peoplearr } = this.state
    const refundtextUrl = `/huoche/v1/refund/${ orderId }/info`
    const passengerCount = peoplearr.length
    const sendData = {
      channel: 'tieyou',
      passengerCount,
    }
    get(refundtextUrl, sendData).then(reply => {
      const { code, data, message } = reply
      if (code === 0) {
        this.setState({
          refundData: data,
        })
      } else {
        Toast.info(message, 3)
      }
      handleClose()
    })
  }
  // handleConfirmRefund(fn, ChooseCredentialarr, passengers) {
  //   const { orderId } = this.state
  //   const handleClose = Loading()
  //   const refundUrl = '/huoche/v1/ticket/refund'
  //   const arr = []
  //   for (let x = 0; x < passengers.length; x++) {
  //     for (let i = 0; i < ChooseCredentialarr.length; i++) {
  //       if (passengers[x].credentialCode === ChooseCredentialarr[i]) {
  //         const { name, credentialCode, seatName = '' } = passengers[x]
  //         const obj = {
  //           name,
  //           idCard: credentialCode,
  //           seatName,
  //         }
  //         arr.push(obj)
  //       }
  //     }
  //   }
  //   console.log('passengers---', arr)
  //   const sendData = {
  //     partnerId: orderId,
  //     tickets:   arr,
  //   }
  //   send(refundUrl, sendData).then(reply => {
  //     const { code, data, message } = reply
  //     if (code === 0) {
  //       console.log('handleConfirmRefund', data)
  //       fn()
  //       timeOut = setTimeout(() => {
  //         window.location.reload()
  //       }, 600)
  //     } else {
  //       Toast.info(message, 3)
  //     }
  //     handleClose()
  //     Mask.closeAll()
  //   })
  // }
  render() {
    const { handleContainerClose, refund, ChooseCredentialarr, passengers = [], refundData } = this.state
    console.log('RefundInfoCom-passengers--', passengers, refundData, refund, ChooseCredentialarr)
    if (refundData) {
      const { coupon, estimatedAmount, facePrice, platformActivity, refundFee, withoutDiscountedPrice } = refundData
      return (
        <div className='refundinfoWrap'>
          <div className='main'>
            <div className='title'>{ refund ? '退款明细' : '确认退票' }</div>
            {
              refund ? (<p className='miniPrice'><i>¥</i>{ facePrice }</p>) : (<p className='miniTitle'>退票费用明细</p>)
            }
            <p><span>车票价</span><span className='spanR'>¥{ facePrice }</span></p>
            <p className='thoughSpan'><span>手续费不可退</span><span className='spanR'>¥{ withoutDiscountedPrice }</span></p>
            <p><span>预计退票手续费</span><span className='hongColor'>¥{ refundFee }</span></p>
            <p><span>优惠券</span><span className='hongColor'>-¥{ coupon }</span></p>
            <p><span>平台活动</span><span className='hongColor'>-¥{ platformActivity }</span></p>
            <p><span>预计退款金额:</span><span className='sumPrice'><i>¥</i>{ estimatedAmount }</span></p>
            {
              refund ? ('') : (<div className='textTips'>温馨提示：确认退票后将无法取消，请您谨慎操作；退票成功后退款会在1-5个工作日退回您的支付账户</div>)
            }
          </div>
          {
            !refund ? (<div className='closeBtn'>
              <div onClick={ () => handleContainerClose() }>取消</div>
              <div onClick={ () => this.handleRefundText() }>确定</div>
            </div>) : (<div className='closeBtnImg'><img onClick={ () => handleContainerClose() } src={ closeIcon } alt='' /></div>)
          }
        </div>
      )
    }
    return (<div />)
  }
}

export default RefundInfoCom

// {
//   !refund ? (<div className='closeBtn'>
//     <div onClick={ () => handleContainerClose() }>取消</div>
//     <div onClick={ () => this.handleConfirmRefund(handleContainerClose, ChooseCredentialarr, passengers) }>确定</div>
//   </div>) : (<div className='closeBtnImg'><img onClick={ () => handleContainerClose() } src={ closeIcon } alt='' /></div>)
// }
         
 
 
 
 huoche/components/SeatTime.js 
 
import React from 'react'
import { List, Toast } from 'antd-mobile'
import { Mask, Calendar, SlidePage } from '@boluome/oto_saas_web_app_component'
import { getStore, setStore } from '@boluome/common-lib'

import AlternativeSeat from './alternative'
import AlternativeTime from './alternativetime'
import SelectTrain from './SelectTrain'
import '../style/SelectTrain.scss'

const Item = List.Item
// const Brief = Item.Brief

class SeatTime extends React.Component {
  constructor(props) {
    super(props)
    const chooseTrain = getStore('huoche_chooseTrain', 'session') ? getStore('huoche_chooseTrain', 'session') : []
    const chooseSeat = getStore('huoche_chooseSeat', 'session') ? getStore('huoche_chooseSeat', 'session') : []
    const haveChooseZuo = getStore('huoche_haveChooseZuo', 'session') ? getStore('huoche_haveChooseZuo', 'session') : []
    const chooseZuowei = getStore('huoche_chooseZuowei', 'session') ? getStore('huoche_chooseZuowei', 'session') : []
    const chooseArrtime = getStore('huoche_chooseArrtime', 'session') ? getStore('huoche_chooseArrtime', 'session') : []
    const alterTime = getStore('huoche_alterTime', 'session') ? getStore('huoche_alterTime', 'session') : []
    const details = getStore('huoche_details', 'session')
    this.state = {
      ...props.propsObj,
      chooseTrain,
      chooseSeat,
      haveChooseZuo,
      alterTime,
      chooseZuowei,
      chooseArrtime,
      details,
      colorClass: props.colorClass,
    }
    console.log('colorClass--', props.colorClass, props.propsObj)
    // console.log('test--propsObj-', props.propsObj)
    this.handleChooseArr = this.handleChooseArr.bind(this)
    this.handleAlternativeTime = this.handleAlternativeTime.bind(this)
  }
  componentWillUnmount() {
    // Popup.hide()
  }
  componentWillReceiveProps(nextProps) {
    this.setState({
      ...nextProps.propsObj,
    })
  }
  handleSpecifiedDate() {
    const { handleCalendarDate } = this.state
    Mask(
      <SlidePage target='right' showClose={ false } >
        <Calendar pricearr={ [] } onChange={ res => handleCalendarDate(res) } untilDay={ 60 } vipDay={ 28 } />
      </SlidePage>
    , { mask: false, style: { position: 'absolute' } })
  }
  // 接受选择的备选日期
  handleChooseArr(arrTime) {
    // console.log('-----test--arrTime--', arrTime)
    const { handleTimeStart, chooseArrtime } = this.state
    // const alterTime = getStore('huoche_alterTime', 'session')
    this.setState({
      alterTime: arrTime,
    })
    handleTimeStart(arrTime, chooseArrtime)
    // console.log('arrTime-', arrTime, alterTime)
  }
  // 备选车次
  handleSelectTrain() {
    const { chooseTime, chooseCity, chooseTrain, details } = this.state
    Mask(
      <SlidePage target='right' showClose={ false } >
        <SelectTrain details={ details } chooseCity={ chooseCity } chooseTime={ chooseTime } chooseTrain={ chooseTrain } handleGetchooseTrain={ (res, reply, seat, startTime, mark) => this.handleGetchooseTrain(res, reply, seat, startTime, mark) } />
      </SlidePage>
    , { mask: false, style: { position: 'absolute' } })
  }
  // 将备选车次传入
  handleGetchooseTrain(chooseZuowei, chooseTrain, chooseSeat, startTime, mark) {
    const { handleHavechooseTrain } = this.props.propsObj
    // console.log('res--chooseTrain---', chooseTrain, 'chooseSeat---', chooseSeat, 'haveChooseZuo--', chooseZuowei, 'mark---', mark)
    this.setState({
      chooseTrain,
      chooseSeat,
      chooseZuowei,
      startTime,
    })
    let arrhaveChooseZuo = []
    if (mark) {
      // console.log('mark---', mark)
      this.setState({
        haveChooseZuo: [],
      })
    } else {
      const { haveChooseZuo } = this.state
      const arr = haveChooseZuo.filter(e => chooseZuowei.some(o => o.name === e.name))
      this.setState({
        haveChooseZuo: arr,
      })
      arrhaveChooseZuo = arr
      this.handleOkchoose(arr)
      setStore('huoche_haveChooseZuo', arr, 'session')
      // console.log('--arr--', arr)
      // console.log('---test---2--', chooseZuowei, '---chooseSeat--', chooseSeat, '---haveChooseZuo--', haveChooseZuo, '--startTime--', startTime)
    }
    handleHavechooseTrain(chooseZuowei, chooseTrain, chooseSeat, startTime, arrhaveChooseZuo)
  }
  // 修改车次的时候，自动判断做大价格坐席是否还在
  handleOkchoose(haveChooseZuo) {
    let maxprice = 0
    const arr = []
    const seatsData = getStore('huoche_seatsData_grab', 'session') ? getStore('huoche_seatsData_grab', 'session') : 0
    if (seatsData !== 0) {
      arr[0] = seatsData
    } else {
      arr[0] = haveChooseZuo[0]
    }
    if (haveChooseZuo.length > 0) {
      maxprice = haveChooseZuo.reduce((i, o) => {
        console.log('test----', i, o)
        if (o.price > i.price) {
          return o
        }
        return i
      }, arr[0])
    } else {
      maxprice = seatsData
    }
    // console.log('max----', maxprice, 'maxprice.price--', maxprice.price)
    setStore('huoche_haveChooseZuo', haveChooseZuo, 'session')
    setStore('huoche_maxprice', maxprice.price, 'session')
    setStore('huoche_maxpriceObj', maxprice, 'session')
    this.handlechooseZuowei(haveChooseZuo, maxprice.price, maxprice)
  }
  // 从子组件获取到备选的坐席
  handlechooseZuowei(res, price, maxpriceObj) {
    const { handleMaxPrice } = this.props.propsObj
    let p = price
    let pObj = maxpriceObj
    const seatsData = getStore('huoche_seatsData_grab', 'session') ? getStore('huoche_seatsData_grab', 'session') : 0
    if (seatsData !== 0 && price < seatsData.price) {
      p = seatsData.price
      pObj = seatsData
      // console.log('zouwole', seatsData.price, '---p-', p, '--pObj-', pObj)
    }
    this.setState({
      haveChooseZuo: res,
      maxprice:      p,
    })
    setStore('huoche_maxprice', p, 'session')
    setStore('huoche_maxpriceObj', pObj, 'session')
    handleMaxPrice(p, pObj, res)
    console.log(p, pObj, res, 'aaaaaa')
  }
  handleAlternative() {
    const { chooseZuowei, haveChooseZuo, chooseTrain } = this.state
    if (chooseTrain.length === 0) {
      Toast.info('请选择备选车次', 2, null, false)
    } else {
      Mask(<AlternativeSeat chooseZuowei={ chooseZuowei } haveChooseZuo={ haveChooseZuo } handlechooseZuowei={ (res, price, maxpriceObj) => this.handlechooseZuowei(res, price, maxpriceObj) } />, { mask: true, style: { position: 'absolute' } })
    }
  }
  handleAlternativeTime() {
    const { chooseTime, timearr, chooseArrtime } = this.state
    // console.log('test-handleAlternativeTime--', chooseArrtime)
    if (chooseArrtime.length === 0) {
      chooseArrtime.push(chooseTime)
    }
    console.log('----test---chooseArrtime--', chooseArrtime)
    Mask(<AlternativeTime chooseTime={ chooseTime } timearr={ timearr } handleChooseArr={ this.handleChooseArr } chooseArrtime={ chooseArrtime } />, { mask: true, style: { position: 'absolute' } })
  }
  render() {
    const { chooseTime = {}, chooseSeat, haveChooseZuo, alterTime, NotEditable, colorClass = '' } = this.state
    const { dateShow } = chooseTime
    // console.log('res---test-colorClass-', colorClass)
    if (NotEditable) {
      return (
        <div className='SeatTimeWrap'>
          <List>
            <Item arrow='horizontal' onClick={ () => this.handleSpecifiedDate() }>指定日期<span className='itemoto' style={ colorClass }>{ dateShow }</span></Item>
          </List>
          <List>
            <Item arrow='horizontal' onClick={ () => this.handleSelectTrain() }>备选车次<span className='itemoto'>{
              chooseSeat.map(o => (<i key={ `${ o.number + o.no }` }>{ o.number }</i>))
            }{ chooseSeat && chooseSeat.length === 0 ? '建议多选' : '' }</span></Item>
          </List>
          <List>
            <Item arrow='horizontal' onClick={ () => this.handleAlternative() }>备选坐席<span className='itemoto'>{
              haveChooseZuo.map(o => (<i key={ o.name }>{ o.name }</i>))
            }{ haveChooseZuo && haveChooseZuo.length === 0 ? '建议多选' : '' }</span></Item>
          </List>
          <List>
            <Item arrow='horizontal' onClick={ () => this.handleAlternativeTime() }>备选日期<span className='itemoto'>{
              alterTime.map(e => (<i key={ e }>{ e }</i>))
            }{ alterTime && alterTime.length === 0 ? '建议多选' : '' }</span></Item>
          </List>
        </div>
      )
    }
    return (
      <div className='SeatTimeWrap'>
        <List>
          <Item arrow='empty'>指定日期<span className='itemoto' style={ colorClass }>{ dateShow }</span></Item>
        </List>
        <List>
          <Item arrow='empty'>备选车次<span className='itemoto'>{
            chooseSeat.map(o => (<i key={ `${ o.number + o.no }` }>{ o.number }</i>))
          }{ chooseSeat && chooseSeat.length === 0 ? '未选择' : '' }</span></Item>
        </List>
        <List>
          <Item arrow='empty'>备选坐席<span className='itemoto'>{
            haveChooseZuo.map(o => (<i key={ o.name }>{ o.name }</i>))
          }{ haveChooseZuo && haveChooseZuo.length === 0 ? '未选择' : '' }</span></Item>
        </List>
        <List>
          <Item arrow='empty'>备选日期<span className='itemoto'>{
            alterTime.map(e => (<i key={ e }>{ e }</i>))
          }{ alterTime && alterTime.length === 0 ? '未选择' : '' }</span></Item>
        </List>
      </div>
    )
  }
}

export default SeatTime
         
 
 
 
 huoche/components/SelectTrain.js 
 
import React from 'react'
import { Icon, Toast } from 'antd-mobile'
import { Mask, Loading } from '@boluome/oto_saas_web_app_component'
import { get, setStore } from '@boluome/common-lib'

import '../style/SelectTrain.scss'

import line from '../img/line.png'
import notrain from '../img/notrain.png'
import choose from '../img/choose.svg'
import noChoose from '../img/nokong.svg'

// const Item = List.Item
// const Brief = Item.Brief

class SelectTrain extends React.Component {
  constructor(props) {
    super(props)
    console.log('AlternativeTime---', ...props)
    this.state = {
      ...props,
      selectData: [],
      nolist:     false,
    }
    this.handleSelectData()
    this.handleChooseTrain = this.handleChooseTrain.bind(this)
  }
  componentWillUnmount() {
    // Popup.hide()
  }
  componentWillReceiveProps(nextProps) {
    this.setState({
      ...nextProps,
    })
  }
  // 获取筛选的备选数据
  handleSelectData() {
    const handleClose = Loading()
    const schedulesUrl = '/huoche/v1/schedules'
    const { date } = this.state.chooseTime
    const { from, to } = this.state.chooseCity
    const sendData = {
      from,
      to,
      date,
    }
    get(schedulesUrl, sendData).then(reply => {
      const { code, data, message } = reply
      if (code === 0) {
        let nolist = false
        if (data.list.length === 0) {
          nolist = true
        }
        this.setState({
          selectData: data.list,
          nolist,
        })
        console.log('handleSelectData---', data)
      } else {
        console.log('getStationsFn---', message)
      }
      handleClose()
    })
  }
  // 取消选择被选坐席
  handleClose() {
    Mask.closeAll()
  }
  // 点击确认将选中的坐席传入到父组件
  handleOkchoose() {
    Mask.closeAll()
  }
  // 去票的详情页面
  goDetails(res) {
    console.log(res)
  }
  // 选择此为备选车次
  handleChooseTrain(res) {
    const { chooseTrain } = this.state
    const len = chooseTrain.length
    const arr = chooseTrain.filter(item => item.no === res.no)
    if (arr.length > 0) {
      for (let i = 0; i < chooseTrain.length; i++) {
        // console.log('test-for', chooseTrain[i].no, '----', arr[0].no)
        if (chooseTrain[i].no === arr[0].no) {
          chooseTrain.splice(i, 1)
        }
      }
    } else if (len >= 11) {
      Toast.info('最多可备选11个车次哦～', 2, null, false)
    } else {
      chooseTrain.push(res)
    }
    console.log('test---', chooseTrain)
    this.setState({
      chooseTrain,
    })
    // this.handleChooseData()
  }
  // 确定后，将备选车次传入上一页
  handleChooseData() {
    const { chooseTrain } = this.state
    const { handleGetchooseTrain } = this.props
    const res = chooseTrain
    const arr = []
    let c = []
    const zuo = []
    let startTime = ''
    let chearhaveChooseZuo = false
    if (res.length > 0) {
      // 获取车次
      res.map(i => arr.push({ number: i.number, no: i.no }))
      // 获取坐席
      res.map(o => c = c.concat(o.seats))
      for (let e = 0; e < c.length; e++) {
        console.log(c[e])
        if (zuo.length > 0) {
          this.handleZuowei(c[e], zuo)
          // console.log('---zuo---', zuo)
        } else {
          zuo.push(c[e])
        }
      }
      // console.log('---zuo1111---', zuo)
      startTime = this.handleEndstartTime(chooseTrain)
      // console.log('---c--', res, 'zuo---', zuo, '-chooseTrain--', chooseTrain, 'startTime--', startTime)
    } else {
      setStore('huoche_chooseZuowei', [], 'session')
      setStore('huoche_haveChooseZuo', [], 'session')
      chearhaveChooseZuo = true
      // console.log('--test---11--', zuo, '----', chooseTrain, '----', arr, '---', startTime)
    }
    setStore('huoche_chooseZuowei', zuo, 'session')
    setStore('huoche_chooseTrain', chooseTrain, 'session')
    setStore('huoche_chooseSeat', arr, 'session')
    setStore('huoche_startTime', startTime, 'session')
    handleGetchooseTrain(zuo, chooseTrain, arr, startTime, chearhaveChooseZuo)
    Mask.closeAll()
  }
  handleZuowei(data, zuo) {
    const a = zuo.filter(z => { return z.name === data.name })
    if (a.length === 0) {
      zuo.push(data)
    }
    return zuo
  }
  // 比较备选车次的最晚发车时间
  handleEndstartTime(chooseTrain) {
    let startTime = ''
    if (chooseTrain.length > 0) {
      startTime = chooseTrain.reduce((i, cur) => {
        // 当前数据对象
        // const c = cur.startTime.split(':').join('') * 1
        if (cur.startTime.replace(':', '') * 1 > i.startTime.replace(':', '') * 1) {
          return cur
        }
        return i
      }, chooseTrain[0])
    }
    return startTime
  }
  render() {
    const { selectData, votesORprice = [], chooseTrain, details = '', nolist } = this.state
    if (selectData && selectData.length > 0) {
      return (
        <div className='SelectListWrap'>
          <p className='tips'>温馨提示：多选几个车次，抢票成功率会更高！</p>
          <div className='selectList'>
            {
              selectData.map(o => (
                <ItemCom key={ o.no }
                  item={ o }
                  votesORprice={ votesORprice }
                  handleChooseTrain={ this.handleChooseTrain }
                  chooseTrain={ chooseTrain }
                  details={ details }
                />
              ))
            }
          </div>
          <div className='Okbtn' onClick={ () => this.handleChooseData() }>确定</div>
        </div>
      )
    }
    return (
      <div className='SelectListWrap'>
        {
          nolist ? (<div className='nolist'>
            <img src={ notrain } alt='' />
            <p>没有符合条件的车次，请更改条件之后重新搜索</p>
          </div>) : ('')
        }
      </div>
    )
  }
}

export default SelectTrain

const ItemCom = ({ item, votesORprice, handleChooseTrain, chooseTrain, details }) => {
  const { no, from, startTime, number, duration, to, endTime, price, seats } = item
  // console.log(votesORprice, chooseTrain, seats)
  if (details && details.no === no) {
    return (<div />)
  }
  return (
    <div className='listItem' onClick={ () => { if (no) handleChooseTrain(item) } }>
      <div className='item_t'>
        <div className='startTime'>
          <span className='addressSpan'>{ from }</span>
          <span className='timeSpan'>{ startTime }</span>
        </div>
        <div className='decTime'>
          <span>{ number }</span>
          <span><img src={ line } alt='---' /></span>
          <span>{ `${ Math.floor(duration / 60) }时${ Math.floor(duration % 60) }分` }</span>
        </div>
        <div className='endTime'>
          <span className='addressSpan'>{ to }</span>
          <span className='timeSpan'>{ endTime }</span>
        </div>
        <div className='price'>
          <span className='priceSpan'><i className='ii'>¥</i>{ price }<i>起</i></span>
        </div>
      </div>
      <ItemTrick
        seats={ seats }
        votesORprice={ votesORprice }
        item={ item }
        chooseTrain={ chooseTrain }
      />
    </div>
  )
}

// 列车座位
const ItemTrick = ({ seats, votesORprice, item, chooseTrain }) => {
  return (
    <div className='item_b'>
      <div className='item_bchild'>
        {
          seats.map(i => (
            <span key={ i.name + i.price }>{ i.name }: { votesORprice === 'price' ? `¥${ i.price }` : `${ i.yupiao }张` }</span>
          ))
        }
      </div>
      <Icon type={ chooseTrain.filter(o => o.no === item.no)[0] ? choose : noChoose } />
    </div>
  )
}
         
 
 
 
 huoche/components/addPeople.js 
 
import React from 'react'
import { Icon } from 'antd-mobile'
import { SlidePage, Mask, Addtourist } from '@boluome/oto_saas_web_app_component'
import { setStore } from '@boluome/common-lib'

import '../style/addtourist.scss'
// import deleteIcon from '../img/delete.png'

// const Item = List.Item
// const Brief = Item.Brief

class AddPeople extends React.Component {
  constructor(props) {
    super(props)
    this.state = {
      ...props,
      bool: false,
    }
    // this.handleTouristList = this.handleTouristList.bind(this)
    this.handleFormSuccess = this.handleFormSuccess.bind(this)
    this.handleAddTourist = this.handleAddTourist.bind(this)
    this.handleDeleteTourist = this.handleDeleteTourist.bind(this)
  }
  componentWillUnmount() {
    // Popup.hide()
  }
  componentWillReceiveProps(nextProps) {
    this.setState({
      ...nextProps,
    })
  }
  handleFormSuccess(contact) {
    const { touristNumer } = this.state
    for (let i = 0; i < touristNumer.length; i++) {
      if (touristNumer[i].id === contact.id) {
        touristNumer[i] = contact
      }
    }
    this.setState({
      touristNumer,
    })
    setStore('TOURISTNUMBER', touristNumer, 'session')
  }
  handleAddTourist(item) {
    Mask(
      <SlidePage target='right' type='root' showClose={ false }>
        <Addtourist { ...{ editContact: item } } onSuccess={ contact => this.handleFormSuccess(contact) } />
      </SlidePage>
      , { mask: false, style: { position: 'absolute' } }
    )
  }
  // 撤销删除
  handleSwitch() {
    const { bool } = this.state
    this.setState({ bool: !bool })
  }
  // 选择时候删除购票人
  handleChooseDelete(idCard) {
    console.log(idCard)
    this.setState({
      bool: true,
    })
  }
  // 确定---删除购票的某个人
  handleDeleteTourist(contact) {
    const { handleChangeTourNum } = this.props
    const { touristNumer } = this.state
    for (let i = 0; i < touristNumer.length; i++) {
      if (touristNumer[i].id === contact.id) {
        touristNumer.splice(i, 1)
      }
    }
    this.setState({
      touristNumer,
    })
    setStore('TOURISTNUMBER', touristNumer, 'session')
    handleChangeTourNum(touristNumer)
  }
  render() {
    // const { peopleData } = this.props
    const { peopleData, bool } = this.state
    console.log('hkasjdksjdkd', peopleData)
    const { idCard, name, type, id } = peopleData
    let people = '成人票'
    if (type === 2) {
      people = '儿童票'
    } else if (type === 3) {
      people = '婴儿票'
    }
    return (
      <div className='passenger_list' onClick={ () => { if (bool) { this.handleSwitch() } } } key={ idCard + id }>
        <div className='passenger_icon' style={ bool ? { width: '0rem' } : {} } >
          <Icon type={ require('svg/jipiao/deletbtn.svg') } onClick={ () => { this.handleSwitch() } } />
        </div>
        <div className='passenger_main' style={ bool ? { paddingLeft: '0.3rem' } : {} } onClick={ () => { if (!bool) { this.handleAddTourist(peopleData) } } }>
          <p><span>{ name }</span>{ people }</p>
          <p>身份证{ idCard }</p>
        </div>
        <div onClick={ () => { this.handleAddTourist(peopleData) } }
          className='passenger_jump' style={ bool ? { width: '0rem' } : {} }
        >
          <Icon type={ require('svg/jipiao/arrowRight.svg') } />
        </div>
        <div className='passenger_delet' style={ bool ? {} : { width: '0rem' } }
          onClick={ () => { this.handleDeleteTourist(peopleData) } }
        >
          <span>删除</span>
        </div>
      </div>
    )
  }
}

// return (
//   <div className='wrap'>
//     <Item className='tourist'
//       key={ `${ id + idCard }` }
//       arrow={ `${ bool ? '删除' : 'horizontal' }` }
//       onClick={ () => { if (bool) { this.handleSwitch() } } }
//       thumb={ <div className='checkedDelete' onClick={ () => { this.handleChooseDelete(idCard) } }><img src={ deleteIcon } alt='' /></div> }
//       multipleLine
//     >
//       <div onClick={ () => { if (!bool) { this.handleAddTourist(peopleData) } } }>{ name }</div>
//       <Brief><div onClick={ () => { if (!bool) { this.handleAddTourist(peopleData) } } }>身份证 { idCard }</div></Brief>
//       <div className='checkedGoEdit' onClick={ () => { if (!bool) { this.handleAddTourist(peopleData) } } } />
//     </Item>
//   </div>
// )

// <div className='deteleBtn' onClick={ () => { this.handleDeleteTourist(peopleData) } }>删除</div>

export default AddPeople
         
 
 
 
 huoche/components/addtourist.js 
 
import React from 'react'
import { List, Icon, Toast } from 'antd-mobile'
import { SlidePage, Mask, Tourist } from '@boluome/oto_saas_web_app_component'
import { setStore } from '@boluome/common-lib'

import '../style/addtourist.scss'

import AddPeople from './AddPeople.js'

import add from '../img/add.svg'

const Item = List.Item

class AddTouristCom extends React.Component {
  constructor(props) {
    super(props)
    // const newState = merge(state)(props)
    this.state = {
      close: false,
      // touristNumer: [], // 蠢了
      ...props,
    }
    this.handleTouristList = this.handleTouristList.bind(this)
    // this.handleFormSuccess = this.handleFormSuccess.bind(this)
    // this.handleAddTourist = this.handleAddTourist.bind(this)
    // this.handleDeleteTourist = this.handleDeleteTourist.bind(this)
  }
  componentWillUnmount() {
    // Popup.hide()
  }
  componentWillReceiveProps(nextProps) {
    this.setState({
      ...nextProps,
    })
  }
  // 获取到
  handleTouristNumer(checkedArr) {
    const { changeTouristNumer } = this.props
    this.setState({
      touristNumer: checkedArr,
    })
    changeTouristNumer(checkedArr)
    setStore('TOURISTNUMBER', checkedArr, 'session')
    if (checkedArr && checkedArr.length === 1) {
      if (checkedArr[0].type === 2 || checkedArr[0].type === 3) {
        Toast.info('请至少选择一个成人', 2)
      }
    }
    console.log('TOURISTNUMBER-111-', checkedArr)
  }
  handleTouristList() {
    const { touristNumer } = this.state
    Mask(
      <SlidePage target='right' type='root' showClose={ false } >
        <Tourist
          checkedArr={ touristNumer }
          handleChange={ contact => this.handleTouristNumer(contact) }
          Multiplesel='true'
          numberSum={ 5 }
        />
      </SlidePage>
      , { mask: false, style: { position: 'absolute' } }
    )
  }
  // handleFormSuccess(contact) {
  //   const { touristNumer } = this.state
  //   for (let i = 0; i < touristNumer.length; i++) {
  //     if (touristNumer[i].id === contact.id) {
  //       touristNumer[i] = contact
  //     }
  //   }
  //   this.setState({
  //     touristNumer,
  //   })
  //   setStore('TOURISTNUMBER', touristNumer, 'session')
  // }
  // handleAddTourist(item) {
  //   Mask(
  //     <SlidePage target='right' type='root' >
  //       <Addtourist { ...{ editContact: item } } onSuccess={ contact => this.handleFormSuccess(contact) } />
  //     </SlidePage>
  //     , { mask: false, style: { position: 'absolute' } }
  //   )
  // }
  // 删除购票的某个人
  // handleDeleteTourist(contact) {
  //   const { handleChangeTourNum } = this.props
  //   const { touristNumer } = this.state
  //   for (let i = 0; i < touristNumer.length; i++) {
  //     if (touristNumer[i].id === contact.id) {
  //       touristNumer.splice(i, 1)
  //     }
  //   }
  //   this.setState({
  //     touristNumer,
  //   })
  //   setStore('TOURISTNUMBER', touristNumer, 'session')
  //   handleChangeTourNum(touristNumer)
  // }
  render() {
    const { touristNumer } = this.state
    const { handleChangeTourNum } = this.props
    // console.log('1111----', touristNumer)
    if (touristNumer && touristNumer.length > 0) {
      return (
        <div className='addtourist'>
          <List>
            {
              touristNumer.map((item, index) => (
                <AddPeople key={ `${ item && item.id ? item.id : index }` } peopleData={ item } touristNumer={ touristNumer } handleChangeTourNum={ handleChangeTourNum } />
              ))
            }
          </List>
          <List>
            <Item>
              <div className='addrBtn' onClick={ () => { this.handleTouristList() } }>
                <Icon type={ add } /> 添加乘客
              </div>
            </Item>
          </List>
        </div>
      )
    }
    return (
      <List>
        <Item>
          <div className='addrBtn' onClick={ () => { this.handleTouristList() } }>
            <Icon type={ add } /> 添加乘客
          </div>
        </Item>
      </List>
    )
  }
}

export default AddTouristCom
         
 
 
 
 huoche/components/alternative.js 
 
import React from 'react'
import { List, Icon } from 'antd-mobile'
import { Mask } from '@boluome/oto_saas_web_app_component'
import { setStore } from '@boluome/common-lib'

import '../style/alternative.scss'
import choose from '../img/choose.svg'
import noChoose from '../img/nokong.svg'

const Item = List.Item
// const Brief = Item.Brief

class AlternativeSeat extends React.Component {
  constructor(props) {
    super(props)
    this.state = {
      ...props,
    }
    this.handleChooseZuo = this.handleChooseZuo.bind(this)
  }
  componentWillUnmount() {
    // Popup.hide()
  }
  componentWillReceiveProps(nextProps) {
    this.setState({
      ...nextProps,
    })
  }
  // 取消选择被选坐席
  handleClose() {
    Mask.closeAll()
  }
  // 点击确认将选中的坐席传入到父组件
  handleOkchoose() {
    const { haveChooseZuo } = this.state
    const { handlechooseZuowei } = this.props
    let maxprice = 0
    if (haveChooseZuo.length > 0) {
      maxprice = haveChooseZuo.reduce((i, o) => {
        console.log('test----', i, o)
        if (o.price > i.price) {
          return o
        }
        return i
      }, haveChooseZuo[0])
    }
    console.log('max----', maxprice, 'maxprice.price--', maxprice.price)
    setStore('huoche_haveChooseZuo', haveChooseZuo, 'session')
    setStore('huoche_maxprice', maxprice.price, 'session')
    setStore('huoche_maxpriceObj', maxprice, 'session')
    handlechooseZuowei(haveChooseZuo, maxprice.price, maxprice)
    Mask.closeAll()
  }
  handleChooseZuo(res) {
    let { haveChooseZuo } = this.state
    const arr = haveChooseZuo.filter(i => { return i.name === res.name })
    // const filter = []
    if (arr.length === 0) {
      haveChooseZuo.push(res)
    } else {
      haveChooseZuo = haveChooseZuo.filter(o => { return o.name !== res.name })
    }
    this.setState({
      haveChooseZuo,
    })
  }
  render() {
    const { chooseZuowei, haveChooseZuo = [] } = this.state
    // console.log('chooseZuowei----', chooseZuowei, 'haveChooseZuo---', haveChooseZuo)
    return (
      <div className='alternativeWrap'>
        <div className='title'><span onClick={ () => { this.handleClose() } }>取消</span><span>选择备选坐席</span><span onClick={ () => { this.handleOkchoose() } }>确定</span></div>
        <p>温馨提示：多选几个坐席，抢票成功的成功率会更高！选择后暂收最高票价，出票后视实际情况退还差额。</p>
        <div className='mainZuo'>
          {
            chooseZuowei && chooseZuowei.map(o => (
              <ItemAlter key={ o.price + o.name } res={ o } haveChooseZuo={ haveChooseZuo } handleChooseZuo={ this.handleChooseZuo } />
            ))
          }
        </div>
      </div>
    )
  }
}

export default AlternativeSeat

const ItemAlter = ({ res, haveChooseZuo, handleChooseZuo }) => {
  const { name, price } = res
  const arr = haveChooseZuo.filter(i => { return i.name === name })
  // console.log('test-arr', res)
  return (
    <List>
      <Item onClick={ () => handleChooseZuo(res) } extra={ <Icon type={ `${ arr.length > 0 ? choose : noChoose }` } /> }><span className='nameSeat'>{ name }</span><span className='price'>¥{ price }</span></Item>
    </List>
  )
}
         
 
 
 
 huoche/components/alternativespeed.js 
 
import React from 'react'
import { Icon } from 'antd-mobile'
import { Mask } from '@boluome/oto_saas_web_app_component'
import { setStore, getStore } from '@boluome/common-lib'

import '../style/alternativespeed.scss'
import choose from '../img/choose.svg'
import noChoose from '../img/nokong.svg'
import shan from '../img/shan.png'
import jisu from '../img/jisu.png'
import kuai from '../img/kuaisu.png'
// import disu from '../img/disu.png'

// const Item = List.Item
// const Brief = Item.Brief

class AlternativeSpeed extends React.Component {
  constructor(props) {
    super(props)
    const { maxPrice = 0 } = props
    let speedData = []
    if (maxPrice >= 0 && maxPrice < 50) {
      speedData = [
        {
          Sprice:   30,
          text:     '闪电',
          title:    '闪电',
          Multiple: '100',
          than:     '90%',
          name:     '闪电抢票（¥30/份）',
          pic:      shan,
          clas:     'shan',
        },
        {
          Sprice:   20,
          text:     '极速',
          title:    '极速',
          Multiple: '50',
          than:     '80%',
          name:     '极速抢票（¥20/份）',
          pic:      jisu,
          clas:     'jisu',
        },
        {
          Sprice:   10,
          text:     '快速',
          title:    '快速',
          Multiple: '10',
          than:     '60%',
          name:     '快速抢票（¥10/份）',
          pic:      kuai,
          clas:     'kuaisu',
        },
      ]
    } else {
      speedData = [
        {
          Sprice:   50,
          text:     '闪电',
          title:    '闪电',
          Multiple: '100',
          than:     '90%',
          name:     '闪电抢票（¥50/份）',
          pic:      shan,
          clas:     'shan',
        },
        {
          Sprice:   30,
          text:     '极速',
          title:    '极速',
          Multiple: '50',
          than:     '80%',
          name:     '极速抢票（¥30/份）',
          pic:      jisu,
          clas:     'jisu',
        },
        {
          Sprice:   20,
          text:     '快速',
          title:    '快速',
          Multiple: '10',
          than:     '60%',
          name:     '快速抢票（¥20/份）',
          pic:      kuai,
          clas:     'kuaisu',
        },
      ]
    }
    const { choosePriceprops = speedData[0].Sprice } = this.props
    const chooseSpeedname = getStore('huoche_chooseSpeedname', 'session') ? getStore('huoche_chooseSpeedname', 'session') : speedData[0].name
    const choosePrice = getStore('huoche_packagePrice', 'session') ? getStore('huoche_packagePrice', 'session') : choosePriceprops
    this.state = {
      ...props,
      speedData,
      choosePrice,
      chooseSpeedname,
    }
    this.handleSpeedData = this.handleSpeedData.bind(this)
  }
  componentWillUnmount() {
    // Popup.hide()
  }
  componentWillReceiveProps(nextProps) {
    this.setState({
      ...nextProps,
    })
  }
  // 取消选择被选坐席
  handleClose() {
    Mask.closeAll()
  }
  // 点击确认将选中的套餐传入到父组件
  handleSpeedFn() {
    const { handleSpeedName } = this.props
    const { chooseSpeedname, choosePrice } = this.state
    handleSpeedName(chooseSpeedname, choosePrice)
    setStore('huoche_packagePrice', choosePrice, 'session')
    setStore('huoche_chooseSpeedname', chooseSpeedname, 'session')
    Mask.closeAll()
  }
  // 选择套餐的数据处理
  handleSpeedData(reply) {
    let { choosePrice, chooseSpeedname } = this.state
    if (reply === 0) {
      choosePrice = 0
      chooseSpeedname = '低速抢票（成功率较低）'
    } else {
      const { Sprice, name } = reply
      choosePrice = Sprice
      chooseSpeedname = name
    }
    // console.log('handleSpeedData---', choosePrice, chooseSpeedname)
    this.setState({
      choosePrice,
      chooseSpeedname,
    })
  }
  render() {
    const { speedData, choosePrice } = this.state
    // console.log('choosePrice---', choosePrice)
    // const { text, Multiple, than, Sprice } = speedData
    return (
      <div className='alternativeSpeedWrap'>
        <div className='alternativeMain'>
          <p>选择加速通道，抢票快人一步。如果抢不到，套餐全额退还至您的支付账号。</p>
          <div className='speedWrap'>
            {
              speedData.map(i => (
                <ItemCom key={ i.text } i={ i } handleSpeedData={ this.handleSpeedData } choosePrice={ choosePrice } />
              ))
            }
          </div>
        </div>
        <div className='okBtn' onClick={ () => this.handleSpeedFn() }>确定</div>
      </div>
    )
  }
}

export default AlternativeSpeed

// <Item
//   multipleLine
//   onClick={ () => this.handleSpeedData(0) }
//   extra={ <Icon type={ choosePrice === '0' || choosePrice === 0 ? choose : noChoose } /> }
//   className='disuItem'
// >
//   <img className='disuPic' src={ disu } alt='' /><span className='title'>低速抢票</span><span className='tip'>（成功率较低）</span>
// </Item>

const ItemCom = ({ i, handleSpeedData, choosePrice }) => {
  const { Sprice, text, Multiple, than, pic, clas } = i
  // console.log('iSprice--', Sprice, i)
  return (
    <div className='speedItem' onClick={ () => handleSpeedData(i) }>
      <div className='name'><img className='ItemPic' src={ pic } alt='' /><span className={ `title ${ clas }` }>{ `${ text }抢票` }</span><span className='priceS'>{ `¥${ Sprice }/份` }</span><span className='iconChoose'><Icon type={ Number(choosePrice) === Sprice ? choose : noChoose } /></span></div>
      <div className='Multiple'>{ `${ Multiple }倍加速；` }</div>
      <div className='than'>{ `抢票速度超越${ than }用户；` }</div>
      <div className='tip'>{ `${ text }刷票自动抢。` }</div>
    </div>
  )
}

// <Item
//   key={ i.than }
//   multipleLine
//   onClick={ () => this.handleSpeedData(i) }
//   className='speedItem'
//   extra={ <Icon type={ choosePrice === i.Sprice ? choose : noChoose } /> }
// >
//   { `${ i.title }抢票 （¥${ i.Sprice }／份）` }<Brief>{ `${ i.Multiple }倍加速；` }<br /> { `抢票速度超越${ i.than }用户；` }<br />{ `${ i.text }刷票自动抢。` }</Brief>
// </Item>
         
 
 
 
 huoche/components/alternativetime.js 
 
import React from 'react'
import { List, Icon } from 'antd-mobile'
import { Mask } from '@boluome/oto_saas_web_app_component'
import { setStore } from '@boluome/common-lib'

import '../style/alternative.scss'
import choose from '../img/choose.svg'
import noChoose from '../img/nokong.svg'

const Item = List.Item
// const Brief = Item.Brief

class AlternativeTime extends React.Component {
  constructor(props) {
    super(props)
    // const { chooseTime } = props
    // const chooseArr = []
    // chooseArr[0] = chooseTime
    this.state = {
      ...props,
      // chooseArr,
    }
    this.handleAlterTime = this.handleAlterTime.bind(this)
    this.handleChoosetime = this.handleChoosetime.bind(this)
  }
  componentWillUnmount() {
    // Popup.hide()
  }
  componentWillReceiveProps(nextProps) {
    this.setState({
      ...nextProps,
    })
  }
  // 取消选择被选坐席
  handleClose() {
    Mask.closeAll()
  }
  // 点击确认将选中的坐席传入到父组件
  handleOkchoose() {
    const { chooseArrtime } = this.state
    const { handleChooseArr } = this.props
    const alterTime = []
    setStore('huoche_chooseArrtime', chooseArrtime, 'session')
    for (let i = 0; i < chooseArrtime.length; i++) {
      alterTime.push(chooseArrtime[i].dateShow)
    }
    handleChooseArr(alterTime)
    console.log('-----eee---', alterTime)
    setStore('huoche_alterTime', alterTime, 'session')
    Mask.closeAll()
  }
  handleChoosetime(time) {
    const { chooseTime } = this.state
    // console.log('test----', time, chooseTime)
    if (time.datestr === chooseTime.datestr) {
      console.log('这是指定日期')
    } else {
      this.setState({
        chooseArrtime: this.handleAlterTime(time),
      })
    }
  }
  // 处理要选择的备选日期
  handleAlterTime(res) {
    const { chooseArrtime } = this.state
    const arr = chooseArrtime.filter(item => item.datestr === res.datestr)
    if (arr.length > 0) {
      for (let i = 0; i < chooseArrtime.length; i++) {
        if (chooseArrtime[i].datestr === arr[0].datestr) {
          chooseArrtime.splice(i, 1)
        }
      }
    } else {
      chooseArrtime.push(res)
    }
    return chooseArrtime
  }
  render() {
    const { timearr, chooseArrtime } = this.state
    return (
      <div className='alternativeWrap'>
        <div className='title'><span onClick={ () => { this.handleClose() } }>取消</span><span>选择备选日期</span><span onClick={ () => { this.handleOkchoose() } }>确定</span></div>
        <p>温馨提示：多选几个日期，抢票成功的记录会更高！</p>
        <div className='main'>
          {
            timearr.map(item => (
              <ShowItem key={ item.datestr } data={ item } handleChoosetime={ this.handleChoosetime } chooseArrtime={ chooseArrtime } />
            ))
          }
        </div>
      </div>
    )
  }
}

const ShowItem = ({ data, handleChoosetime, chooseArrtime }) => {
  const { dateShow, weed, datestr } = data
  // console.log(noChoose, choose, data)
  return (
    <List>
      <Item onClick={ () => handleChoosetime(data) }
        extra={ <Icon type={ `${ chooseArrtime.filter(i => { return i.datestr === datestr }).length > 0 ? choose : noChoose }` } /> }
      >
        { dateShow }
        <span className='time'>{ weed }</span>
      </Item>
    </List>
  )
}
export default AlternativeTime
         
 
 
 
 huoche/components/app.js 
 
import React from 'react'
import { List, WhiteSpace, Icon, Switch } from 'antd-mobile'
import { Mask, SlidePage, Calendar, UserCenter } from '@boluome/oto_saas_web_app_component'
// import { get } from 'business'

import '../style/index.scss'
import transform from '../img/transform.svg'

const Item = List.Item
const App = props => {
  const {
    nowChecked, handleCheckedFn, handleCalendarDate, chooseTime,
    handleTransform,
    goListFn, history, chooseCity, goCitySelect,
    hanndleCleanHistory, handleChooseHist, myClick,
  } = props
  // console.log('--test---4--chooseCity', chooseCity)
  // 选择日期
  const handleCalendarFn = () => {
    Mask(
      <SlidePage target='right' showClose={ false } >
        <Calendar onChange={ res => handleCalendarDate(res) } untilDay={ 60 } vipDay={ 28 } />
      </SlidePage>
    , { mask: false, style: { position: 'absolute' } })
  }
  // <div onClick={ () => handleSelectTrain() }>去抢票确认页面</div>
  return (
    <div className='huoCheWrap'>
      <UserCenter categoryCode='huoche' myClick={ myClick } />
      <WhiteSpace />
      <List>
        <div className='chooseAddr'>
          <div className='start' onClick={ () => { goCitySelect('Start') } }>{ chooseCity.from }</div>
          <div className='transform' onClick={ () => handleTransform(chooseCity) }><Icon type={ transform } /></div>
          <div className='end' onClick={ () => { goCitySelect('End') } }>{ chooseCity.to }</div>
        </div>
        {
          chooseTime ? (<Item className='chooseTime' arrow='horizontal' onClick={ () => { handleCalendarFn() } }><span>{ chooseTime.dateShow }</span><i>{ chooseTime.weed }</i></Item>) : ('')
        }
        <Item
          extra={ <Switch
            checked={ nowChecked }
            onClick={ checked => { handleCheckedFn(checked) } }
          /> }
        >
         只查高铁动车</Item>
        <div className='inquireBtn'>
          <div className='btn' onClick={ () => goListFn(chooseTime, chooseCity, 'golist') }>查询火车票</div>
        </div>
        <div className='grabTicket'>
          <div className='GrabBtn' onClick={ () => goListFn(chooseTime, chooseCity, 'goGrab') }>{ `一票难求?${ ' ' }试试抢票${ ' ' }>` }</div>
        </div>
      </List>
      <Historical history={ history } hanndleCleanHistory={ hanndleCleanHistory } handleChooseHist={ handleChooseHist } />
    </div>
  )
}

export default App

const Historical = ({ history, hanndleCleanHistory, handleChooseHist }) => {
  if (history && history.length > 0) {
    const data = history // .reverse() ------这里会改变原数组
    return (
      <div className='historicalWrap'>
        <div className='title'>
          <span className='line' /><span className='text'>最近查询</span><span className='line' />
        </div>
        <div className='history'>
          {
            data.map((o, i) => (
              <span onClick={ () => handleChooseHist(o) } key={ `${ o.from + i }${ o.to + i }` }>{ `${ o.from } - ${ o.to }` }</span>
            ))
          }
        </div>
        <div className='clearBtn' onClick={ () => hanndleCleanHistory() }>清除全部</div>
      </div>
    )
  }
  return (<div />)
}
         
 
 
 
 huoche/components/cardtime.js 
 
import React from 'react'
// import { Popup } from 'antd-mobile'
import { get, moment, week, setStore } from '@boluome/common-lib'
import { Mask, Loading } from '@boluome/oto_saas_web_app_component'

import '../style/card.scss'
import timeline from '../img/timeline.png'
// import jiantouR from '../img/jiantou_1.png'

// const Item = List.Item
class Cardtime extends React.Component {
  constructor(props) {
    super(props)
    // const newState = merge(state)(props)
    this.state = {
      ...props,
    }
    this.handlePointTime = this.handlePointTime.bind(this)
    this.handleSumTime = this.handleSumTime.bind(this)
    this.handleEndTime = this.handleEndTime.bind(this)
  }
  componentWillMount() {
    const { ticketDetails, chooseTime } = this.state
    this.handleEndTime(chooseTime, ticketDetails)
  }
  componentWillReceiveProps(nextProps) {
    this.setState({
      ...nextProps,
    })
    // 这里是为了接收到前一天或者后一天的时候，到达日期改变
    this.handleEndTime(nextProps.chooseTime, nextProps.ticketDetails)
  }
  // 计算结束时间 的日期
  handleEndTime(chooseTime, ticketDetails) {
    const { duration, startTime } = ticketDetails
    const s = startTime.split(':')
    const ss = s[0] * 1 * 60
    const f = s[1] * 1
    const sum = 24 * 60
    const g = (duration * 1) + ss + f
    if (g >= sum) {
      this.handleSumTime(chooseTime, -1)
    } else {
      this.setState({
        endDate: chooseTime,
      })
      setStore('huoche_endDate', chooseTime, 'session')
    }
  }
  // 判断jie shu
  handleSumTime(timeObj, number) {
    const { date } = timeObj
    const datesplit = date.split('-')
    const nextdate = new Date()
    nextdate.setFullYear(datesplit[0], (datesplit[1] * 1) - 1, (datesplit[2] * 1) - number)
    // const dateObj = nextdate.toLocaleDateString()
    const dateObj = `${ nextdate.getFullYear() }/${ nextdate.getMonth() + 1 }/${ nextdate.getDate() }`
    const time = dateObj.replace(/\//g, '-')
    const m = `${ dateObj.split('/')[1] > 9 ? dateObj.split('/')[1] : `0${ dateObj.split('/')[1] }` }`
    const d = dateObj.split('/')[2] > 9 ? dateObj.split('/')[2] : `0${ dateObj.split('/')[2] }`
    const t = `${ dateObj.split('/')[0] }-${ m }-${ d }`
    const dateShow = `${ m }月${ d }日`
    const weed = week()(moment('day')(time))
    const datestr = moment('x')(time)
    const chooseTime = {
      date: t,
      weed,
      datestr,
      dateShow,
    }
    this.setState({
      endDate: chooseTime,
    })
    setStore('huoche_endDate', chooseTime, 'session')
    console.log('----test2---', chooseTime)
  }
  handlePointTime(ticketDetails) {
    const { chooseTime } = this.state
    const { date } = chooseTime
    const handleClose = Loading()
    const { from, to, number } = ticketDetails
    const stopsUrl = '/huoche/v1/stops'
    const sendData = {
      from,
      to,
      date,
      train_number: number,
    }
    get(stopsUrl, sendData).then(reply => {
      const { code, data, message } = reply
      if (code === 0) {
        Mask(<PointTime stopsData={ data } ticketDetails={ ticketDetails } />, { mask: true, style: { position: 'absolute' } })
      } else {
        console.log('数据请求失败', message)
      }
      handleClose()
    })
    // Mask(<PointTime />, { mask: true, style: { position: 'absolute' } })
  }
  render() {
    const { UserComponent, ticketDetails, chooseTime, endDate, defaultClass = { backgroundColor: '#fff' } } = this.state
    const { from = '', to = '', number, startTime, endTime, duration } = ticketDetails
    const { dateShow, weed } = chooseTime
    // console.log(duration, no, ts, saleTime)
    const cloneProps = this.props
    return (
      <div>
        <div className='cardWrap' style={ defaultClass }>
          <div className='cardItem'>
            <span className='title'>{ from }</span>
            <span className='time'>{ startTime }</span>
            <span className='title checi'>{ dateShow }{ weed }</span>
          </div>
          <div className='cardItem'>
            <span className='title checi'>{ number }</span>
            <span onClick={ () => { this.handlePointTime(ticketDetails) } }><img src={ timeline } alt='' /></span>
            <span className='title'>{ `${ Math.floor(duration / 60) }时${ Math.floor(duration % 60) }分` }</span>
          </div>
          <div className='cardItem'>
            <span className='title'>{ to }</span>
            <span className='time'>{ endTime }</span>
            <span className='title checi'>{ endDate.dateShow }{ endDate.weed }</span>
          </div>
        </div>
        { React.cloneElement(UserComponent, { ...cloneProps }) }
      </div>
    )
  }
}

export default Cardtime

const PointTime = ({ stopsData, ticketDetails }) => {
  const { from, to } = ticketDetails
  return (
    <div className='pointTime'>
      <p className='title'>时刻表</p>
      <div className='menu'>
        <span>到站</span>
        <span className='menuSpanMid'>到达</span>
        <span className='menuSpanMid'>发车</span>
        <span className='menuSpanLast'>停留</span>
      </div>
      <div className='list'>
        {
          stopsData.map(item => (
            <div className={ `item ${ from === item.name || to === item.name ? 'itemOrgan' : '' }` } key={ `${ item.name + item.arriveTime }` }>
              <span>{ item.name }</span>
              <span className='menuSpanMid'>{ item.arriveTime }</span>
              <span className='menuSpanMid'>{ item.startTime }</span>
              <span className='menuSpanLast'>{ item.stopTime }</span>
            </div>
          ))
        }
      </div>
    </div>
  )
}
         
 
 
 
 huoche/components/details.js 
 
import React from 'react'
import { WhiteSpace, List } from 'antd-mobile'

import Timelist from './timelist'
import Cardtime from './cardtime'

import '../style/details.scss'
import notrain from '../img/notrain.png'

const Item = List.Item
const Details = props => {
  const {
    goOrderFn, ticketDetails,
    onChangeTime, chooseTime,
    seatsData, goGrabticket,
    ChangeSign, noSeats,
  } = props
  console.log('goGrabticket---test-', goGrabticket)
  return (
    <div className='detailsWrap'>
      <div className='details'>
        {
          ticketDetails ? (<Cardtime UserComponent={ <Timelist chooseTime={ chooseTime } onChangeTime={ onChangeTime } /> } ticketDetails={ ticketDetails } chooseTime={ chooseTime } />) : ''
        }
      </div>
      <WhiteSpace />
      {
        noSeats ? (
          <SeatsCom
            goOrderFn={ goOrderFn }
            ticketDetails={ ticketDetails }
            seatsData={ seatsData }
            goGrabticket={ goGrabticket }
            ChangeSign={ ChangeSign }
          />
        ) : (<Noseatcom />)
      }

    </div>
  )
}

export default Details

// 没有坐席的时候展示
const Noseatcom = () => {
  return (
    <div className='NoseatcomWrap'><img src={ notrain } alt='' /><p className='Noseatcom'>列车运行图调整，暂停发售</p></div>
  )
}

const SeatsCom = ({ goOrderFn, ticketDetails, seatsData = [], goGrabticket, ChangeSign }) => {
  console.log('qqqq', ChangeSign, goGrabticket, goOrderFn)
  if (ticketDetails && seatsData) {
    // const { seats, ts = '' } = ticketDetails
    // console.log(ticketDetails, seatsData)
    return (
      <List>
        {
          seatsData.map(item => (
            <Item className='seatsItem' key={ `${ item.name }` }>
              <span className='seatName'>{ item.name }</span>
              {
                item.saleDateTime ? (<span className='saleDateTime'>{ item.saleDateTime }</span>) : (<span className='seatNumber'>{ item.yupiao <= 0 ? '无票' : `${ item.yupiao }张` }</span>)
              }
              {
                item.saleDateTime ? (<span className='seatOrder' onClick={ () => goGrabticket(ticketDetails, item) }>预约</span>) : (!ChangeSign && ChangeSign.indexOf('ChangeSign') < 0 ? (item.yupiao <= 0 ? (<span className='seatOrder noSeat' onClick={ () => goGrabticket(ticketDetails, item) }>抢票</span>) :
                (<span className='seatOrder' onClick={ () => { goOrderFn(item, ChangeSign) } }>预定</span>)) : (item.yupiao <= 0 ? (<span className='seatOrder noChange'>无票</span>) :
                (<span className='seatOrder' onClick={ () => { goOrderFn(item, ChangeSign) } }>改签</span>)))
              }
              <span className='seatPrice'>¥{ item.price }</span>
            </Item>
          ))
        }
      </List>
    )
  }
  return (<div />)
}
         
 
 
 
 huoche/components/filter.js 
 
import React from 'react'
import { List, Icon } from 'antd-mobile'
import { Mask } from '@boluome/oto_saas_web_app_component'

import '../style/filter.scss'
import deletes from '../img/deletes.svg'

const Item = List.Item
class FilterCom extends React.Component {
  constructor(props) {
    super(props)
    // const newState = merge(state)(props)
    this.state = {
      ...props,
      clear: false,
    }
    console.log('FilterCom----', props)
    this.handleSumFilter = this.handleSumFilter.bind(this)
    this.handleSumFilterOne = this.handleSumFilterOne.bind(this)
    this.handleFilter = this.handleFilter.bind(this)
  }
  componentWillUnmount() {
    // Popup.hide()
  }
  componentDidMount() {
    const { filterFn } = this.props
    const { filiterObj, scheduleslist } = this.state
    filterFn(this.handleFilter, filiterObj)
    console.log('testeee', filterFn, scheduleslist)
    // this.handleFilter(filiterObj, scheduleslist)
  }
  componentWillReceiveProps(nextProps) {
    this.setState({
      ...nextProps,
    })
  }
  // 清空筛选条件---注意渲染清空和数据清空
  handleClear() {
    // console.log('qingkong')
    const { defiliterObj } = this.props
    // const filiterObj = defiliterObj
    this.setState({
      filiterObj: defiliterObj,
      clear:      true,
    })
  }
  // 按照条件筛选之车次类型
  handleFilter(filiterObj, scheduleslist) {
    console.log('shaixuan-JSON.stringify---trainline, fromTime, toTime, fromArr, toArr', filiterObj)
    const { trainline } = filiterObj
    const line = []
    for (let i = 0; i < trainline.length; i++) {
      if (trainline[i].choose === true) {
        line.push(trainline[i].name)
      }
    }
    if (line.length <= 0) {
      this.handlefromArr(filiterObj, scheduleslist)
      return
    }
    const Standard = line.join('') // JSON.stringify(line)
    const filter1 = this.handleSumFilterOne(Standard, scheduleslist, 'number')
    this.handlefromArr(filiterObj, filter1)
    Mask.closeAll()
  }
  // 在总的里面筛选
  handleSumFilterOne(Standard, data, codeStr) {
    // console.log('stan---', data, Standard)
    const dataFilter = []
    for (let s = 0; s < data.length; s++) {
      if (Standard.indexOf(data[s][codeStr].split('')[0]) === -1) { // 这就是没有匹配的
        console.log('没有我')
      } else {
        dataFilter.push(data[s])
      }
    }
    return dataFilter
  }
  // 按照条件筛选之出发地点
  handlefromArr(filiterObj, filter1) {
    const { fromArr } = filiterObj
    const froms = []
    for (let j = 0; j < fromArr.length; j++) {
      if (fromArr[j].choose === true) {
        froms.push(fromArr[j].name)
      }
    }
    if (froms.length <= 0) {
      this.handletoArr(filiterObj, filter1)
      return
    }
    const Standard = froms // .join('')
    const filter2 = this.handleSumFilter(Standard, filter1, 'from')
    // console.log('from----', filter2)
    this.handletoArr(filiterObj, filter2)
  }
  // 按照条件筛选之到达地点
  handletoArr(filiterObj, filter2) {
    const { toArr } = filiterObj
    const tos = []
    for (let j = 0; j < toArr.length; j++) {
      if (toArr[j].choose === true) {
        tos.push(toArr[j].name)
      }
    }
    if (tos.length <= 0) {
      this.handleFromTime(filiterObj, filter2)
      return
    }
    const Standard = tos // .join('')
    const filter3 = this.handleSumFilter(Standard, filter2, 'to')
    console.log('to----', filter3)
    this.handleFromTime(filiterObj, filter3)
  }
  // 处理车站的筛选---始末
  handleSumFilter(Standard, data, codeStr) {
    console.log('stan---', data, Standard)
    const dataFilter = []
    for (let s = 0; s < data.length; s++) {
      for (let g = 0; g < Standard.length; g++) {
        if (data[s][codeStr] === Standard[g]) {
          console.log('bbbb--', Standard[g])
          dataFilter.push(data[s])
          break
        } else {
          console.log('没有我', Standard[g])
        }
      }
    }
    // console.log('aaa---', dataFilter)
    return dataFilter
  }
  // 按照条件筛选之出发时间
  handleFromTime(filiterObj, filter3) {
    const { fromTime } = filiterObj
    const time = []
    for (let s = 0; s < fromTime.length; s++) {
      if (fromTime[s].choose === true) {
        time.push(fromTime[s].name)
      }
    }
    if (time.length <= 0) {
      this.handleToTime(filiterObj, filter3)
      return
    }
    const filter4 = this.handleFromToTime(time, filter3, 'startTime')
    this.handleToTime(filiterObj, filter4)
    // console.log(filter3)
  }
  // 按照条件筛选之到达时间
  handleToTime(filiterObj, filter4) {
    const { toTime } = filiterObj
    const time = []
    for (let s = 0; s < toTime.length; s++) {
      if (toTime[s].choose === true) {
        time.push(toTime[s].name)
      }
    }
    if (time.length <= 0) {
      this.handleAllResults(filiterObj, filter4)
      console.log('最总筛选结果-kong--', filter4)
      return
    }
    const filter5 = this.handleFromToTime(time, filter4, 'endTime')
    console.log('最总筛选结果---', filter5)
    this.handleAllResults(filiterObj, filter5)
  }
  // 处理筛选的始末时间
  handleFromToTime(Standard, data, codeStr) {
    console.log(Standard, data, codeStr)
    const timeFilter = []
    for (let y = 0; y < data.length; y++) {
      const timestr = parseInt(data[y][codeStr].replace(':', ''), 10)
      for (let x = 0; x < Standard.length; x++) {
        const timearr = Standard[x].split('-')
        const pro = parseInt(timearr[0].replace(':', ''), 10)
        const next = parseInt(timearr[1].replace(':', ''), 10)
        if (timestr > pro && timestr < next) {
          timeFilter.push(data[y])
          break
        }
      }
    }
    // console.log('timeFilter---', timeFilter)
    return timeFilter
  }
  // 当所有的条件都筛选完了，---注意是否有时长和早到晚的排序
  handleAllResults(filiterObj, filter5) {
    Mask.closeAll()
    const { handleFilterResult } = this.props
    const { defiliterObj } = this.state
    handleFilterResult(filiterObj, filter5, defiliterObj)
    // console.log('results------', filiterObj, filter5)
  }
  // 总汇每个筛选条件的方法
  handleSumChange(i, arr) {
    const { filiterObj } = this.state
    arr[i].choose = !arr[i].choose
    filiterObj[arr] = arr
    this.setState({
      filiterObj,
      clear: false,
    })
  }
  // // 处理筛选的条件----车次类型
  // handleChangeTrainline(i, trainline) {
  //   console.log('车次')
  //   const { filiterObj } = this.state
  //   trainline[i].choose = !trainline[i].choose
  //   filiterObj.trainline = trainline
  //   this.setState({ filiterObj })
  // }
  // // 处理筛选的条件----出发时间
  // handleChangeFromTime(i, fromTime) {
  //   console.log('出发时间')
  //   const { filiterObj } = this.state
  //   fromTime[i].choose = !fromTime[i].choose
  //   filiterObj.fromTime = fromTime
  //   this.setState({ filiterObj })
  // }
  // // 处理筛选的条件----到达时间
  // handleChangeToTime(i, toTime) {
  //   console.log('到达时间')
  //   const { filiterObj } = this.state
  //   toTime[i].choose = !toTime[i].choose
  //   filiterObj.toTime = toTime
  //   this.setState({ filiterObj })
  // }
  // // 处理筛选的条件----出发车站
  // handleChangeFromArr(i, fromArr) {
  //   console.log('出发车站')
  //   const { filiterObj } = this.state
  //   fromArr[i].choose = !fromArr[i].choose
  //   filiterObj.fromArr = fromArr
  //   this.setState({ filiterObj })
  // }
  // // 处理筛选的条件----到达车站
  // handleChangeToArr(i, toArr) {
  //   console.log('到达车站')
  //   const { filiterObj } = this.state
  //   toArr[i].choose = !toArr[i].choose
  //   filiterObj.toArr = toArr
  //   this.setState({ filiterObj })
  // }
  render() {
    const { filiterObj, defiliterObj, scheduleslist, clear } = this.state
    // console.log('defiliterObj---', defiliterObj, filiterObj)
    if (filiterObj && filiterObj.trainline) {
      const { trainline = [], fromTime = [], toTime = [], fromArr = [], toArr = [] } = filiterObj
      return (
        <div className='filterWrap'>
          <Item className='filterItem'>
            <span onClick={ () => { Mask.closeAll() } }>取消</span>
            <span className='EmptySpan' onClick={ () => { this.handleClear() } }><Icon type={ deletes } /><span className='clearS'>清空已选</span></span>
            {
              clear ? <span className='lastSpan' onClick={ () => this.handleFilter(defiliterObj, scheduleslist) }>确定</span> :
              <span className='lastSpan' onClick={ () => this.handleFilter(filiterObj, scheduleslist) }>确定</span>
            }
          </Item>
          <div className='filterMain'>

            <h4>车次类型</h4>
            {
              trainline.map((e, i) => <p className={ e.choose && 'choose' } onClick={ () => { this.handleSumChange(i, trainline) } } key={ e.name }><span><Icon type={ e.choose ? require('svg/jipiao/choose.svg') : '' } /></span>{ e.name }</p>)
            }
            <h4>出发时间</h4>
            {
              fromTime.map((e, i) => <p className={ e.choose && 'choose' } onClick={ () => { this.handleSumChange(i, fromTime) } } key={ e.name }><span><Icon type={ e.choose ? require('svg/jipiao/choose.svg') : '' } /></span>{ e.name }</p>)
            }
            <h4>到达时间</h4>
            {
              toTime.map((e, i) => <p className={ e.choose && 'choose' } onClick={ () => { this.handleSumChange(i, toTime) } } key={ e.name }><span><Icon type={ e.choose ? require('svg/jipiao/choose.svg') : '' } /></span>{ e.name }</p>)
            }
            <h4>出发车站</h4>
            {
              fromArr.map((e, i) => <p className={ e.choose && 'choose' } onClick={ () => { this.handleSumChange(i, fromArr) } } key={ e.name }><span><Icon type={ e.choose ? require('svg/jipiao/choose.svg') : '' } /></span>{ e.name }</p>)
            }
            <h4>到达车站</h4>
            {
              toArr.map((e, i) => <p className={ e.choose && 'choose' } onClick={ () => { this.handleSumChange(i, toArr) } } key={ e.name }><span><Icon type={ e.choose ? require('svg/jipiao/choose.svg') : '' } /></span>{ e.name }</p>)
            }
          </div>
        </div>
      )
    }
    return (<div />)
  }
}

export default FilterCom
         
 
 
 
 huoche/components/getDateArr.js 
 
import { moment, week } from '@boluome/common-lib'

// 默认日期 ---> 2017-09-19 添加了 明后天数据处理
const getDateArr = chooseTime => {
  const D = new Date()
  const year = D.getFullYear()
  const month = D.getMonth() + 1
  let day = D.getDate()
  if (day < 10) {
    day = `0${ day }`
  }
  const today = `${ year }-${ month > 9 ? month : `0${ month }` }-${ day }`
  const todaystr = moment('x')(today)
  // 判断出是否今天，明天，后天
  const todayWeek = num => {
    D.setFullYear(year, ((month * 1) - 1), (day * 1) + num)
    // const tomo = D.toLocaleDateString()
    const tomo = `${ D.getFullYear() }/${ D.getMonth() + 1 }/${ D.getDate() }`
    return moment('x')(tomo)
  }
  // 抽离十一天的日期数组
  const weed = (y, m, d, num) => {
    const arr = []
    for (let i = 0; i < num; i++) {
      D.setFullYear(y, ((m * 1) - 1), (d * 1) + i)
      // const dateObj = D.toLocaleDateString()
      const dateObj = `${ D.getFullYear() }/${ D.getMonth() + 1 }/${ D.getDate() }`
      const time = dateObj.replace(/\//g, '-')
      const ms = `${ dateObj.split('/')[1] > 9 ? dateObj.split('/')[1] : `0${ dateObj.split('/')[1] }` }`
      const ds = dateObj.split('/')[2] > 9 ? dateObj.split('/')[2] : `0${ dateObj.split('/')[2] }`
      const ts = `${ dateObj.split('/')[0] }-${ ms }-${ ds }`
      const dateShow = `${ ms }月${ ds }日`
      let weeds = week()(moment('day')(time))
      const datestr = moment('x')(time)
      if (datestr === todaystr) {
        weeds = '今天'
      } else if (datestr === todayWeek(1)) {
        weeds = '明天'
      } else if (datestr === todayWeek(2)) {
        weeds = '后天'
      }
      const timeObj = {
        date: ts,
        weed: weeds,
        datestr,
        dateShow,
      }
      // arr.unshift(timeObj)
      arr.push(timeObj)
      // console.log(i, timeObj)
    }
    return arr
  }
  // 可算时间起点
  const calculation = (y, m, d, num) => {
    D.setFullYear(y, ((m * 1) - 1), (d * 1) - num)
    // const dateObj = D.toLocaleDateString()
    const dateObj = `${ D.getFullYear() }/${ D.getMonth() + 1 }/${ D.getDate() }`
    const time = dateObj.replace(/\//g, '-')
    // console.log('calculation--', time)
    const yChoose = time.split('-')[0]
    const mChoose = time.split('-')[1]
    const dChoose = time.split('-')[2]
    return weed(yChoose, mChoose, dChoose, 5) // 11
  }
  const { date } = chooseTime
  const yChoose = date.split('-')[0]
  const mChoose = date.split('-')[1]
  const dChoose = date.split('-')[2]
  const proDate = calculation(yChoose, mChoose, dChoose, 2) // 5
  // console.log('test-getDateArr-', date, '------proDate--', proDate)
  // 过滤出有效时间
  const effectTime = timeArr => {
    const arrs = timeArr.filter(item => {
      return item.datestr >= todaystr
    })
    return arrs
  }
  console.log('arrs', effectTime(proDate))

  return effectTime(proDate)
}

export default (
  getDateArr
)
         
 
 
 
 huoche/components/getDateOne.js 
 
import { moment } from '@boluome/common-lib'

// 默认日期 ---> 2017-09-19 添加了 明后天数据处理
const getDateOne = timedate => {
  const D = new Date()
  const year = D.getFullYear()
  const month = D.getMonth() + 1
  let day = D.getDate()
  if (day < 10) {
    day = `0${ day }`
  }
  const weed = num => {
    D.setFullYear(year, ((month * 1) - 1), (day * 1) + num)
    const tomo = `${ D.getFullYear() }/${ D.getMonth() + 1 }/${ D.getDate() }`
    // const tomo = D.toLocaleDateString()
    return moment('x')(tomo)
  }
  if (timedate) {
    const { datestr } = timedate
    if (datestr === weed(1)) {
      return '明天'
    } else if (datestr === weed(2)) {
      return '后天'
    } else if (datestr === weed(0)) {
      return '今天'
    }
  } else {
    const date = `${ year }-${ month > 9 ? month : `0${ month }` }-${ day }`
    const datestr = moment('x')(date)
    const time = {
      dateShow: `${ month }月${ day }日`,
      weed:     '今天',
      date,
      datestr,
    }
    return time
  }
}
export default (
  getDateOne
)
         
 
 
 
 huoche/components/grabticket.js 
 
import React from 'react'
import { WhiteSpace, List, Toast } from 'antd-mobile'
import { Mask, SlidePage } from '@boluome/oto_saas_web_app_component' // , Calendar

import SeatTime from './SeatTime'
// import StopTime from './stoptime'
import AlternativeSpeed from './alternativespeed'

import '../style/grabticket.scss'
import '../style/card.scss'
import timeline from '../img/lineline.png'
import help from '../img/help.png'

const Item = List.Item
const Grabticket = props => {
  const { handleSelectTrain,
    chooseCity, chooseTime, handleSpeedName, chooseSpeedname,
    choosePrice, maxprice, detailsTrick = '', endDate, seatsDataGrab,
    haveChooseZuo, chooseTrain, // chooseZuowei, chooseSeat, startTime,
    searchgoGrab,
  } = props
  console.log('searchgoGrab---', searchgoGrab)
  // 加速套餐
  const handleAlternativeSpeed = () => {
    // console.log('test--handleAlternativeSpeed-', choosePrice, maxprice, haveChooseZuo, chooseTrain)
    if (haveChooseZuo.length === 0 && searchgoGrab) {
      Toast.info('请选择备选坐席', 2, null, false)
      return
    }
    Mask(
      <SlidePage target='left' showClose={ false }>
        <AlternativeSpeed maxPrice={ maxprice } choosePriceprops={ choosePrice } handleSpeedName={ (name, price) => handleSpeedName(name, price) } />
      </SlidePage>
      , { mask: false, style: { position: 'absolute' } }
    )
  }
  const handleGrabText = () => {
    Mask(<GrabText />, { mask: true, style: { position: 'absolute' } })
  }
  // 截止时间
  // const handleStopTime = () => {
  //   Mask(<StopTime />, { mask: true, style: { position: 'absolute' } })
  // }
  const colorClass = { color: '#333' }
  return (
    <div className='grabTicket'>
      {
        chooseCity ? (<CardShow chooseCity={ chooseCity } chooseTime={ chooseTime } detailsTrick={ detailsTrick } endDate={ endDate } seatsDataGrab={ seatsDataGrab } />) : ('')
      }
      <WhiteSpace />
      <SeatTime propsObj={ props } colorClass={ colorClass } />
      <WhiteSpace />
      <List>
        <Item arrow='horizontal' onClick={ () => handleAlternativeSpeed() }>抢票提速<span className='itemoto'>{ chooseSpeedname ? `${ chooseSpeedname }` : `闪电抢票¥（${ maxprice > 50 ? '50' : '30' }/份）` }</span></Item>
      </List>
      <Item className='helpTips' onClick={ () => handleGrabText() }><img src={ help } alt='' /><span className='helptip'>抢票规则说明</span></Item>
      <div className='okGrabticket' onClick={ () => handleSelectTrain(choosePrice, haveChooseZuo, chooseTrain, searchgoGrab) }>立即抢票</div>
    </div>
  )
}

// <WhiteSpace />
// <List>
//   <Item arrow='horizontal' onClick={ () => handleStopTime() }>截止日期<span className='itemoto2'>2017-10-17 13:00</span></Item>
// </List>

export default Grabticket

const CardShow = ({ chooseCity, chooseTime, detailsTrick, endDate = {}, seatsDataGrab }) => {
  // console.log('chooseTime--', chooseTime, detailsTrick)
  const { from, to } = chooseCity
  if (detailsTrick) {
    const { endTime, number, startTime } = detailsTrick
    const { dateShow, weed } = endDate
    const { name } = seatsDataGrab
    return (
      <div>
        <div className='cardWrap'>
          <div className='cardItem'>
            <span className='title'>{ detailsTrick.from }</span>
            <span className='time'>{ startTime }</span>
            <span className='title checi'>{ chooseTime.dateShow }{ chooseTime.weed }</span>
          </div>
          <div className='cardItem'>
            <span className='title checi'>{ number }</span>
            <span><img src={ timeline } alt='' /></span>
            <span className='title checi'>{ name }</span>
          </div>
          <div className='cardItem'>
            <span className='title'>{ detailsTrick.to }</span>
            <span className='time'>{ endTime }</span>
            <span className='title checi'>{ dateShow }{ weed }</span>
          </div>
        </div>
      </div>
    )
  }
  return (
    <div>
      <div className='cardWrap cardWrapnoUse'>
        <div className='cardItem'>
          <span className='from'>{ from }</span>
        </div>
        <div className='cardItem'>
          <span className='from'><img src={ timeline } alt='' /></span>
        </div>
        <div className='cardItem'>
          <span className='from'>{ to }</span>
        </div>
      </div>
    </div>
  )
}

const GrabText = () => {
  const jiao = '->'
  return (
    <div className='GrabTextWrap'>
      <div className='gTitle'>抢票规则说明</div>
      <div className='gMain'>
        <p className='pTitle'>1. 如何抢票？</p>
        <p className='text texthe'>
          { `点击“抢票 ${ jiao } 填写抢票信息 ${ jiao } 开始抢票”，系统会自动为您刷票，
          一直刷到发车时间的前一个小时。已开售车次无票座席与未开售车次的所有座席均可抢。` }
        </p>
        <p className='pTitle'>2. 无票座席与未开售车次的所有座席均可抢。</p>
        <p className='text'>与平常购票几乎没有差别，卧铺先收取下铺价格，儿童票收取全票，抢票成功后系统会自动核算并退还差价。</p>
        <p className='text'>{ `流程二：抢票 ${ jiao } 选择指定日期 ${ jiao } 填写抢票信息 ${ jiao } 支付 ${ jiao } 开始抢票` }</p>
        <p className='pTitle'>3. 为什么需要先付款？</p>
        <p className='text'>抢票高峰时段票源紧张，排队人数过多，为避免抢票成功后因没有及时支付，错失车票。</p>
        <p className='pTitle'>4. 支付后一定能抢到票吗？</p>
        <p className='text'>不一定。选择抢票加速套餐，可以极大地提高抢票成功率。加速套餐是一种付费抢票套餐，成功率高于普通抢票。加速套餐根据票价不同，所需的费用也有所不同。</p>
        <p className='pTitle'>5. 抢票可以取消吗？抢不到是否会退款？</p>
        <p className='text'>抢票中的订单随时可以取消，取消后全额退款，退款预计2~15个工作日按原渠道退回。抢票失败后，也将全额退款。</p>
        <p className='pTitle'>6. 抢票的退款在哪儿可以查到？</p>
        <p className='text'>{ `可进入“我的订单 ${ jiao } 选择抢票失败的订单 ${ jiao } 订单有退款”中查看您的退款信息。` }</p>
        <p className='pTitle'>7. 预约抢票什么时候开始抢？</p>
        <p className='text'>火车票开售后立即开始，会持续抢到截止时间为止。</p>
        <p className='pTitle'>8. 如何知道抢票成功？</p>
        <p className='text'>抢票成功后，系统会发送通知短信到您所填的手机号码上，也可以进入app查看，抢票成功后订单状态会更新为“抢票成功”并显示已抢车票的车次与座席等信息。</p>
      </div>
      <div className='gBtn' onClick={ () => Mask.closeAll() }>我知道了</div>
    </div>
  )
}
         
 
 
 
 huoche/components/moredata.js 
 

import React from 'react'
import { Icon } from 'antd-mobile'
import { Mask, CitySearch, SlidePage } from '@boluome/oto_saas_web_app_component'
import { get } from 'business'
import TimeList from './timelist.js'
import FilterCom from './filter.js'

import '../style/list.scss'
import line from '../img/line.png'
import time from '../img/time.svg'
import times from '../img/times.svg'
import pricesvg from '../img/price.svg'
import conditions from '../img/conditions.svg'
import timeh from '../img/timeh.svg'
import timesh from '../img/timesh.svg'
import priceh from '../img/priceh.svg'
import conditionsh from '../img/conditionsh.svg'
import notrain from '../img/notrain.png'

// const Item = List.Item
const Moredata = props => {
  // const { } = props
  // console.log('Moredata---', props, ChangeSign)
  const {
    scheduleslist, goDetails, scheduleslistFilter,
    chooseTime, onChangeTime,
    handleListScroll, botShow, nolist, notOnceList,
    handleMoreVotes, votesORprice,
    defiliterObj, filiterObj, handleDurationFilter, handleTimeFilter,
    isDrua, isTime, handleFilterResult, filterFn, gethandleFilter,
    oRisTime, oRisDrua, iSconditions,
    goGrabticket, cityHot, LocationAddr,
    ChangeSign, handleChangeStation, chooseCity,
  } = props
  // console.log('Moredata-filiterObj--', filiterObj)
  console.log('ChangeSign----', ChangeSign, chooseTime)
  let cityArr = []
  get('https://dev-api.otosaas.com/huoche/v1/city/list').then(({ data }) => {
    cityArr = data
  })
  // 目的地
  const goChangeStation = () => {
    if (cityArr.length > 0) {
      Mask(
        <SlidePage target='right' showClose={ false } >
          <CitySearch
            localCity={ LocationAddr }
            categoryCode='tieyou'
            showCancel='true'
            handleCityData={ result => { handleChangeStation(result, chooseCity, chooseTime) } }
            api={ cityArr }
            cityHot={ cityHot }
          />
        </SlidePage>
      , { mask: false, style: { position: 'absolute' } })
    }
  }
  const handleFilter = () => {
    Mask(<FilterCom
      defiliterObj={ defiliterObj }
      filiterObj={ filiterObj }
      scheduleslistFilter={ scheduleslistFilter }
      scheduleslist={ scheduleslist }
      handleFilterResult={ handleFilterResult }
      filterFn={ filterFn }
    />, { mask: true, style: { position: 'absolute' } })
  }
  return (
    <div className='ListPageWrap' onScroll={ e => handleListScroll(e.target.scrollTop, botShow) }>
      { chooseTime ? (
        <TimeList chooseTime={ chooseTime }
          onChangeTime={ onChangeTime }
          gethandleFilter={ gethandleFilter }
          filiterObj={ filiterObj }
          scheduleslist={ scheduleslist }
        />) : '' }
      {
        ChangeSign ? (<div className='goGrabBtn' onClick={ () => goChangeStation() }>变更到站</div>) : (<div className='goGrabBtn' onClick={ () => goGrabticket(chooseTime, chooseCity) }>{ `一票难求?${ ' ' }试试抢票${ ' ' }>` }</div>)
      }
      <div className='listWrap'>
        <ItemBlock
          scheduleslistFilter={ scheduleslistFilter }
          goDetails={ goDetails }
          votesORprice={ votesORprice }
          nolist={ nolist }
          goGrabticket={ goGrabticket }
          ChangeSign={ ChangeSign }
        />
      </div>
      <ConditionsItem
        handleFilter={ handleFilter }
        botShow={ botShow }
        handleMoreVotes={ handleMoreVotes }
        votesORprice={ votesORprice }
        handleDurationFilter={ handleDurationFilter }
        scheduleslist={ scheduleslist }
        scheduleslistFilter={ scheduleslistFilter }
        handleTimeFilter={ handleTimeFilter }
        isDrua={ isDrua }
        isTime={ isTime }
        oRisTime={ oRisTime }
        oRisDrua={ oRisDrua }
        iSconditions={ iSconditions }
        gethandleFilter={ gethandleFilter }
        notOnceList={ notOnceList }
      />
    </div>
  )
}

export default Moredata

// 列车车次
const ItemBlock = ({ scheduleslistFilter, goDetails, votesORprice, nolist, goGrabticket, ChangeSign }) => {
  if (scheduleslistFilter && scheduleslistFilter.length > 0) {
    // const { list } = scheduleslistFilter
    console.log('item---', scheduleslistFilter)
    return (
      <div className='list'>
        {
          scheduleslistFilter.map(item => (
            <ItemShowTrick key={ item.no } item={ item } votesORprice={ votesORprice } goDetails={ goDetails } goGrabticket={ goGrabticket } ChangeSign={ ChangeSign } />
          ))
        }
      </div>
    )
  }
  return (
    <div>
      {
        nolist === false ? (<div className='nolist'>
          <img src={ notrain } alt='' />
          <p>没有符合条件的车次，请更改条件之后重新搜索</p>
        </div>) : (<div />)
      }
    </div>
  )
}

// 车次展示数据
const ItemShowTrick = ({ item, votesORprice, goDetails, goGrabticket, ChangeSign }) => {
  const { no, from, startTime, number, duration, to, endTime, price, seats = [], saleDateTime = '' } = item
  let yes = true
  let text = '可抢票'
  for (let i = 0; i < seats.length; i++) {
    if (seats && seats[i].yupiao === 0) {
      yes = false
    }
  }
  if (saleDateTime) {
    yes = false
    text = '可预约'
  }
  return (
    <div className='listItem' key={ no } onClick={ () => { goDetails(item, ChangeSign) } }>
      <div className='item_t'>
        <div className='startTime'>
          <span className='addressSpan'>{ from }</span>
          <span className='timeSpan'>{ startTime }</span>
        </div>
        <div className='decTime'>
          <span>{ number }</span>
          <span><img src={ line } alt='---' /></span>
          <span>{ `${ Math.floor(duration / 60) }时${ Math.floor(duration % 60) }分` }</span>
        </div>
        <div className='endTime'>
          <span className='addressSpan'>{ to }</span>
          <span className='timeSpan'>{ endTime }</span>
        </div>
        <div className='price'>
          <span className='priceSpan'><i className='ii'>¥</i>{ price }<i>起</i></span>
          {
            yes ? ('') : (<span className='grabSpan' onClick={ () => { console.log(goGrabticket) } }>{ text }</span>)
          }
        </div>
      </div>
      {
        saleDateTime ? (<div className='item_b'><span style={{ color: '#ffab00', fontSize: '0.24rem' }}>{ `${ saleDateTime }，可预约抢票，开售即抢` }</span></div>) : (<ItemTrick seats={ seats } votesORprice={ votesORprice } />)
      }
    </div>
  )
}

// 列车座位
const ItemTrick = ({ seats, votesORprice }) => {
  return (
    <div className='item_b'>
      {
        seats.map(i => (
          <span key={ i.name }>{ i.name }: { votesORprice === 'price' ? `¥${ i.price }` : `${ i.yupiao }张` }</span>
        ))
      }
    </div>
  )
}

// 筛选等条件悬浮
const ConditionsItem = ({
  handleFilter, botShow, handleMoreVotes, votesORprice,
  handleDurationFilter, scheduleslist, handleTimeFilter,
  isTime, isDrua, scheduleslistFilter, gethandleFilter,
  oRisTime, oRisDrua, iSconditions, notOnceList,
}) => {
  if (notOnceList) {
    return (
      <div className='Conditions' style={ botShow ? {} : { bottom: '-1rem' } }>
        <div className={ iSconditions ? 'item' : '' } onClick={ () => { handleFilter() } }><Icon type={ iSconditions ? conditionsh : conditions } /><span>筛选</span></div>
        <div className={ oRisTime ? 'item' : '' } onClick={ () => handleTimeFilter(scheduleslist, isTime, scheduleslistFilter, gethandleFilter) }><Icon type={ oRisTime ? timesh : times } /><span>{ oRisTime ? (isTime ? '从早到晚' : '从晚到早') : '' }{ oRisTime === false ? '时间' : '' }</span></div>
        <div className={ oRisDrua ? 'item' : '' } onClick={ () => handleDurationFilter(scheduleslist, isDrua, scheduleslistFilter, gethandleFilter) }><Icon type={ oRisDrua ? timeh : time } /><span>{ oRisDrua ? (isDrua ? '从短到长' : '从长到短') : '' }{ oRisDrua === false ? '历时' : '' }</span></div>
        <div onClick={ () => handleMoreVotes(votesORprice) }><Icon type={ votesORprice === 'price' ? priceh : pricesvg } /><span className={ `${ votesORprice === 'price' ? 'price' : 'votes' }` }><i>余票／</i><i>票价</i></span></div>
      </div>
    )
  }
  return (<div />)
}
         
 
 
 
 huoche/components/order.js 
 
import React from 'react'
import { WhiteSpace, InputItem, List, Switch, Icon } from 'antd-mobile'
import { NewPromotion, Mask } from '@boluome/oto_saas_web_app_component'

import Cardtime from './cardtime'
import Ordernotice from './ordernotice'
import AddTouristCom from './addtourist'
import InvoiceDetails from './InvoiceDetails'
import AccidentRistMask from './AccidentRistMask'
import NoticeMask from './NoticeMask'

import '../style/order.scss'
import detailIcon from '../img/detailIcon.svg'
import tipsIcon from '../img/tips.svg'

const Item = List.Item
const Brief = Item.Brief

const Order = props => {
  const {
    seatsChoose, accidentData, ticketDetails, changeTouristNumer,
    chooseTime, handleNeedAccident, haschecked, handleChangeTourNum, checkAccient,
    handlePromotion, promotion, handlePhone, phone, name, handleName,
    ChangeSign, details, propsObj, passengersChoose = '', seats, partnerId, isBsb,
  } = props
  let { withoutDiscountedPrice = 0 } = props
  let { touristNumer } = props
  const { trainNumber, trains } = propsObj
  const handleShowDetail = isShow => {
    if (ChangeSign && seats && ChangeSign.indexOf('ChangeSign') > 0) {
      seatsChoose.price = seats.price
      seatsChoose.name = seats.name
      console.log('trains---', trains)
    }
    Mask(<InvoiceDetails seatsChoose={ seatsChoose } promotion={ promotion } touristNumer={ touristNumer } withoutDiscountedPrice={ withoutDiscountedPrice } checkAccient={ checkAccient } haschecked={ haschecked } ChangeSign={ ChangeSign } isShow={ isShow } />, { mask: false, style: { position: 'absolute' } })
  }
  const handleAccidentRist = () => {
    Mask(<AccidentRistMask accidentData={ accidentData } />, { mask: false, style: { position: 'absolute' } })
  }
  const handleNoticeMask = () => {
    Mask(<NoticeMask />, { mask: false, style: { position: 'absolute' } })
  }
  let sumPromotionPrice = 0
  let numberSum = 0
  // 是否显示红包
  let isShow = true
  // 改签不要手续费
  if (ChangeSign && ChangeSign.indexOf('ChangeSign') > 0) {
    withoutDiscountedPrice = 0
  }
  if (passengersChoose && passengersChoose.length > 0 && ChangeSign) {
    touristNumer = passengersChoose
    // seatsChoose.price = trains.facePrice
    // seatsChoose.name = trains.seatName
    seatsChoose.parentId = partnerId
    seatsChoose.price = seats.price
    seatsChoose.name = seats.name
    if (passengersChoose[0].ticketPrice > seats.price) {
      isShow = false
    }
  }
  if (touristNumer && touristNumer.length !== 0 && seatsChoose.price) {
    sumPromotionPrice = touristNumer.length * seatsChoose.price
    numberSum = touristNumer.length
    if (checkAccient && haschecked && isBsb) {
      const { price } = checkAccient
      sumPromotionPrice += touristNumer.length * price
    }
    const extraPrice = Number(withoutDiscountedPrice) * numberSum
    sumPromotionPrice += extraPrice
  }
  const defaultClass = {
    backgroundColor: '#fffbf2',
  }
  const { seatName } = trains
  const { date, weed } = chooseTime
  // const isShow = true  // 这里是暂时隐藏意外险
  // 高价改低价不用红包--不展示红包，支付只有保险的时候不用红包
  if (passengersChoose && passengersChoose.length > 0 && ChangeSign && ChangeSign.indexOf('ChangeSign') > 0) {
    if (passengersChoose[0].ticketPrice > seats.price) {
      isShow = false
      sumPromotionPrice = 0
      if (checkAccient && haschecked && isBsb) {
        const { price } = checkAccient
        sumPromotionPrice += touristNumer.length * price
      }
    }
  }
  return (
    <div className='orderWrap'>
      <div className='orderMain'>
        {
          ChangeSign && ChangeSign.indexOf('ChangeSign') > 0 ? (<List>
            <Item extra={ <span style={{ color: '#ffab00' }} onClick={ () => handleNoticeMask() }>预定须知</span> }>{ `${ date } ${ weed }开` }</Item>
            {
              details ? (<Cardtime UserComponent={ <ChoosePeople passengersChoose={ passengersChoose } seats={ seats } /> } ticketDetails={ details } chooseTime={ chooseTime } defaultClass={ defaultClass } />) : ('')
            }
            {
              details ? (<div style={{ height: '26px', backgroundColor: '#f5f5f6' }} />) : ('')
            }
            <Item extra={ `(${ trainNumber }/${ seatName })` }>原始车票</Item>
          </List>) : (<div>
            {
              ticketDetails && seatsChoose ? (<Cardtime UserComponent={ <Ordernotice seatsChoose={ seatsChoose } /> } ticketDetails={ ticketDetails } chooseTime={ chooseTime } />) : ''
            }
            {
              seatsChoose && (seatsChoose.name === '硬卧' || seatsChoose.name === '软卧') ? (<div className='NoticeBar'>上中下铺随机出票，暂收下铺价格。出票成功后，根据实际出票铺位退还差价</div>) : ('')
            }
          </div>)
        }
        <WhiteSpace size='lg' />
        {
          ChangeSign && ChangeSign.indexOf('ChangeSign') > 0 ? ('') : (<AddTouristCom touristNumer={ touristNumer } handleChangeTourNum={ handleChangeTourNum } changeTouristNumer={ res => changeTouristNumer(res) } />)
        }
        {
          ChangeSign && ChangeSign.indexOf('ChangeSign') > 0 ? ('') : (<WhiteSpace size='lg' />)
        }
        <PhoneCom handlePhone={ handlePhone } phone={ phone } handleName={ handleName } name={ name } />
        <WhiteSpace size='lg' />
        {
          accidentData && isBsb ? (<AccidentRist
            handleAccidentRist={ handleAccidentRist }
            touristNumer={ touristNumer }
            accidentData={ accidentData }
            haschecked={ haschecked }
            handleNeedAccident={ handleNeedAccident }
          />) : ('')
        }
        <WhiteSpace size='lg' />
        {
          ChangeSign && ChangeSign.indexOf('ChangeSign') > 0 && isShow === false ? ('') : (touristNumer && touristNumer.length > 0 ? (<NewPromotion orderType='huoche' channel='tieyou' amount={ sumPromotionPrice } count={ numberSum } handleChange={ reply => handlePromotion(reply) } />) : '')
        }
        <WhiteSpace size='lg' />
      </div>
      <FooterCom
        handleShowDetail={ handleShowDetail }
        sumPromotionPrice={ sumPromotionPrice }
        propsData={ props }
        touristNumer={ touristNumer }
        isShow={ isShow }
      />
    </div>
  )
}
// touristNumer={ touristNumer }
// promotion={ promotion }
// seatsChoose={ seatsChoose }
// ticketDetails={ ticketDetails }
// handleOrderSave={ handleOrderSave }
// phone={ phone }
// chooseTime={ chooseTime }
// withoutDiscountedPrice={ withoutDiscountedPrice }
// name={ name }
// checkAccient={ checkAccient }
export default Order

// 填写手机号码组件
const PhoneCom = ({ handlePhone, phone, name, handleName }) => {
  return (
    <List>
      <InputItem
        type='text'
        placeholder='请输入联系人姓名'
        value={ name }
        defaultValue={ name }
        onChange={ v => handleName(v) }
      >联系人</InputItem>
      <InputItem
        type='phone'
        placeholder='请输入联系人手机号'
        value={ phone }
        defaultValue={ phone }
        onChange={ v => handlePhone(v) }
      >联系手机</InputItem>
    </List>
  )
}
// 火车意外险组件
const AccidentRist = ({ handleAccidentRist, touristNumer, accidentData, handleNeedAccident, haschecked }) => {
  console.log(accidentData, haschecked)
  const { name, brief, price } = accidentData
  return (
    <Item
      className='accidenRist'
      extra={ <Switch
        checked={ haschecked }
        onClick={ checked => { handleNeedAccident(checked, accidentData) } }
      /> }
    >
      { name }
      <Icon onClick={ () => { handleAccidentRist() } } type={ tipsIcon } />
      <Brief>{ brief }</Brief>
      <span className='accidenPrice'>¥{ price } <i>x{ touristNumer.length }</i></span>
    </Item>
  )
}

// 改签的乘客信息展示
const ChoosePeople = ({ passengersChoose, seats }) => {
  const { name, price } = seats
  return (
    <div>
      {
        passengersChoose && passengersChoose.map(o => (
          <Item key={ o.credentialCode + o.name } multipleLine extra={ <span style={{ marginRight: '0px' }}>{ name } ¥{ price }</span> }>
            <span style={{ marginRight: '20px' }}>{ o.name }</span><span style={{ color: '#999' }}>{ o.ticketType }</span> <Brief><span style={{ color: '#333' }}>{ `${ o.credentialCode.slice(0, 4) } ******** ${ o.credentialCode.slice(-3) }` }</span></Brief>
          </Item>
        ))
      }
    </div>
  )
}

// 底部footer部分
const FooterCom = ({ propsData, handleShowDetail, sumPromotionPrice, touristNumer, isShow }) => {
  const { handleOrderSave, name, checkAccient, promotion, seatsChoose, ticketDetails, haschecked,
    phone, chooseTime, ChangeSign, details } = propsData
  let { discount = 0 } = promotion
  // const sumDiscounted = Number(withoutDiscountedPrice) * touristNumer.length
  // let sum = sumDiscounted + Number(sumPromotionPrice)
  let sum = Number(sumPromotionPrice)
  sum -= discount
  if (sum < 0) {
    sum = 0.01
  }
  if (discount === '0.00') {
    discount = 0
  }
  console.log('propsObj--discount---', discount)
  return (
    <div className='footerWrap'>
      {
        touristNumer.length === 0 ? (<div className='footerL' />) : (
          <div className='footerL'><span className={ `priceSum ${ discount === 0 ? 'promotion' : '' }` }>实付: ¥{ sum.toFixed(2) }</span>{ discount === 0 ? ('') : (<span className='pricePro'>已优惠¥{ `${ discount.toFixed(2) }` }</span>) }</div>
        )
      }
      {
        touristNumer.length === 0 || (isShow === false && sumPromotionPrice === 0) ? ('') : (
          <div className='detailWrap' onClick={ () => { handleShowDetail(isShow) } }>
            <span className='detail'>明细</span><Icon type={ detailIcon } />
          </div>
        )
      }
      {
        touristNumer.length === 0 ? (<div className='footerR footerSpan'>立即下单</div>) :
        (<div className='footerR' onClick={ () => handleOrderSave(promotion, touristNumer, seatsChoose, ticketDetails, phone, chooseTime, name, checkAccient, ChangeSign, details, haschecked) }>立即下单</div>)
      }
    </div>
  )
}
         
 
 
 
 huoche/components/orderDetails.js 
 
import React from 'react'
import { WhiteSpace, List, InputItem, Icon } from 'antd-mobile'
import { Mask, OrderDetail, SlidePage } from '@boluome/oto_saas_web_app_component'
import { moment } from '@boluome/common-lib'
import { afterOrdering, login } from 'business'

// import Cardtime from './cardtime'
import Ordernotice from './ordernotice'
import ShowPromotion from './ShowPromotion'
import AccidentCom from './AccidentCom'
import PassengerInformCom from './PassengerInformCom'
import OrderRefundCom from './OrderRefundCom'
import NoticeMask from './NoticeMask'

import '../style/orderdetails.scss'
import '../style/card.scss'
import timeline from '../img/timeline.png'
import xiangyou from '../img/xiangyou.png'
import zhuyiIcon from '../img/zhuyi.svg'

const Item = List.Item
const orderDetails = props => {
  console.log('orderDetails--s-', props)
  const {
    getOrderInfo, params,
  } = props
  console.log('test------', getOrderInfo)
  const orderId = params ? params.id : ''
  const handleAccidentCom = insuranceDoc => {
    Mask(
      <SlidePage target='left' showClose={ false } >
        <AccidentCom insuranceDoc={ insuranceDoc } />
      </SlidePage>
    , { mask: false, style: { position: 'absolute' } })
  }
  const OrderComponent = ({ orderDetailInfo }) => {
    const {
      contactPhone = '156****7090', id, trains, passengers = [], stops, trainNumber, contactName,
      platformActivity, coupon, status, from, to, partnerId, ticketCode,
      createdAt, refundList, price, withoutDiscountedPrice, refundCountPrice, type, insuranceDoc,
      realPrice, realPayPrice, canChangeApply, isChangeShow,
    } = orderDetailInfo
    console.log('orderDetailInfo---', orderDetailInfo, realPayPrice, realPrice)
    // console.log('--test---refundList--', refundList)
    const handlePointTimeCom = () => {
      Mask(<PointTime stops={ stops } from={ from } to={ to } />, { mask: true, style: { position: 'absolute' } })
    }
    if (orderDetailInfo) {
      return (
        <div className='orderDetailList'>
          <WhiteSpace size='lg' />
          {
            status && status === 4 && type !== 'CHANGE' ? (<div>
              <div className='qupiaohao'>
                <p className='qupiaoText'>取票号</p>
                <p className='qupiaoId'>{ ticketCode }</p>
              </div>
              <WhiteSpace size='lg' />
            </div>) : ('')
          }
          {
            type === 'ROBTICKETS' && status !== 4 ? (<GrabMessage trains={ trains } from={ from } to={ to } />) : ('')
          }
          {
            type === 'ROBTICKETS' && status !== 4 ? (<div><GrabPeople passengers={ passengers } /><WhiteSpace size='lg' /></div>) : ('')
          }
          {
            type === 'CHANGE' && trains && status && status === 4 ? (<div><GrabSuccess trains={ trains } trainNumber={ trainNumber } passengers={ passengers } partnerId={ partnerId } type={ type } id={ id } handlePointTimeCom={ handlePointTimeCom } canChangeApply={ canChangeApply } isChangeShow={ isChangeShow } /><WhiteSpace size='lg' /></div>) : ('')
          }
          {
            type === 'ROBTICKETS' && trains && status && (status === 4) ? (<div><GrabSuccess trains={ trains } trainNumber={ trainNumber } passengers={ passengers } partnerId={ partnerId } type={ type } id={ id } handlePointTimeCom={ handlePointTimeCom } canChangeApply={ canChangeApply } /><WhiteSpace size='lg' /></div>) : ('')
          }
          {
            (type === 'CHANGE' && status !== 4 && trains) || (type === 'NORMAL' && trains) ? (<div><CardtimeOrder trains={ trains } handlePointTimeCom={ handlePointTimeCom } status={ status } trainNumber={ trainNumber } /></div>) : ''
          }
          {
            type === 'ROBTICKETS' || (type === 'CHANGE' && status === 4) ? ('') : (<div><List>
              <PassengerInform passengers={ passengers } status={ status } orderId={ id } trains={ trains } partnerId={ partnerId } type={ type } canChangeApply={ canChangeApply } isChangeShow={ isChangeShow } />
            </List><WhiteSpace size='lg' /></div>)
          }
          <List className='phoneList'>
            {
              contactName ? (<InputItem value={ `${ contactName }` } editable={ false }>联系人</InputItem>) : ('')
            }
            {
              contactPhone ? (<InputItem value={ `${ contactPhone.slice(0, 3) } **** ${ contactPhone.slice(-4) }` } editable={ false }>手机号</InputItem>) : ('')
            }
          </List>
          <WhiteSpace size='lg' />
          {
            insuranceDoc && insuranceDoc.length > 0 ? (<div><List><Item arrow='horizontal' onClick={ () => handleAccidentCom(insuranceDoc) }><span>{ insuranceDoc[0].insuranceName }</span><span style={{ marginLeft: '20px' }}>{ `¥${ insuranceDoc[0].price }／份 x ${ insuranceDoc[0].venders.length }` }</span></Item></List><WhiteSpace size='lg' /></div>) : ''
          }
          {
            platformActivity || coupon || status ? (<ShowPromotion passengers={ passengers } trains={ trains } realPayPrice={ realPayPrice } platformActivity={ platformActivity } coupon={ coupon } price={ price } withoutDiscountedPrice={ withoutDiscountedPrice } insuranceDoc={ insuranceDoc } />) : ''
          }
          {
            refundList && refundList.length > 0 ? (<OrderRefundCom refundList={ refundList } refundCountPrice={ refundCountPrice } withoutDiscountedPrice={ withoutDiscountedPrice } />) : ''
          }
          <List>
            <Item extra={ id }>订单编号</Item>
            <Item extra={ moment('YYYY-MM-DD HH:mm:ss')(createdAt) }>下单时间</Item>
          </List>
          <WhiteSpace />
        </div>
      )
    }
  }
  return (
    <div className='orderDetailsWrap'>
      <OrderDetail
        content={ <OrderComponent /> }
        login={ login }
        id={ orderId }
        orderType='huoche'
        goPay={ () => afterOrdering({ id: orderId }) }
      />
    </div>
  )
}

export default orderDetails
 // || type === 'CHANGE'
 // {
 //   status && status === 4 && type !== 'CHANGE' ? (<div><List>
 //     <Item><span className='orderhao'>取票号</span> <span>{ ticketCode }</span></Item>
 //   </List><WhiteSpace size='lg' /></div>) : ''
 // }

// 车票信息展示卡片部分
const CardtimeOrder = ({ trains, trainNumber, handlePointTimeCom, status }) => {
  const { arriveCity, arriveDate, arriveTime, departureCity, departureDate, departureTime, duration, seatName, facePrice } = trains
  const seatsChoose = {
    name:  seatName,
    price: facePrice,
  }
  const handleNoticeMask = () => {
    Mask(
      <SlidePage target='right' showClose={ false } >
        <NoticeMask />
      </SlidePage>
    , { mask: false, style: { position: 'absolute' } })
  }
  if (status === 4) {
    return (
      <div className='newcardWrap'>
        <Item extra={ <span className='grabXuzhi' onClick={ () => handleNoticeMask() }><Icon type={ zhuyiIcon } />预定须知</span> } style={{ background: 'rgba(255, 171, 0, 0.05)' }}><span style={{ color: 'rgba(255, 171, 0, 0.05)' }}>空</span></Item>
        <div className='cardWrap cardWrapsuccessNew' style={{ background: 'rgba(255, 171, 0, 0.05)' }}>
          <div className='cardItem'>
            <span className='title'>{ departureCity }</span>
            <span className='time'>{ departureTime }</span>
            <span className='title checi'>{ departureDate }</span>
          </div>
          <div className='cardItem'>
            <span className='title checi'>{ trainNumber }</span>
            <span onClick={ () => { handlePointTimeCom() } }><img src={ timeline } alt='' /></span>
            <span className='title'>{ duration }</span>
          </div>
          <div className='cardItem'>
            <span className='title'>{ arriveCity }</span>
            <span className='time'>{ arriveTime }</span>
            <span className='title checi'>{ arriveDate }</span>
          </div>
        </div>
        <Item style={{ background: 'rgba(255, 171, 0, 0.05)' }} />
      </div>
    )
  }
  return (
    <div>
      <div className='cardWrap'>
        <div className='cardItem'>
          <span className='title'>{ departureCity }</span>
          <span className='time'>{ departureTime }</span>
          <span className='title checi'>{ departureDate }</span>
        </div>
        <div className='cardItem'>
          <span className='title checi'>{ trainNumber }</span>
          <span onClick={ () => { handlePointTimeCom() } }><img src={ timeline } alt='' /></span>
          <span className='title'>{ duration }</span>
        </div>
        <div className='cardItem'>
          <span className='title'>{ arriveCity }</span>
          <span className='time'>{ arriveTime }</span>
          <span className='title checi'>{ arriveDate }</span>
        </div>
      </div>
      <Ordernotice seatsChoose={ seatsChoose } status={ status } />
      <WhiteSpace size='lg' />
    </div>
  )
}
// 车票展示的停靠站点
const PointTime = ({ stops, from, to }) => {
  return (
    <div className='pointTime'>
      <p className='title'>时刻表</p>
      <div className='menu'>
        <span>到站</span>
        <span className='menuSpanMid'>到达</span>
        <span className='menuSpanMid'>发车</span>
        <span className='menuSpanLast'>停留</span>
      </div>
      <div className='list'>
        {
          stops.map(item => (
            <div className={ `item ${ from === item.name || to === item.name ? 'itemOrgan' : '' }` } key={ `${ item.name + item.arriveTime }` }>
              <span>{ item.name }</span>
              <span className='menuSpanMid'>{ item.arriveTime }</span>
              <span className='menuSpanMid'>{ item.startTime }</span>
              <span className='menuSpanLast'>{ item.stopTime }</span>
            </div>
          ))
        }
      </div>
    </div>
  )
}

// 待支付状态时----> 乘客信息的展示
const PassengerInform = ({ passengers = [], status, orderId, trains, partnerId, type, canChangeApply, isChangeShow }) => {
  return (
    <div className='PassengerWrap'>
      {
        status && (status === 4 || status === 13 || status === 15) ? (<PassengerInformCom status={ status } passengers={ passengers } orderId={ orderId } trains={ trains } partnerId={ partnerId } type={ type } canChangeApply={ canChangeApply } isChangeShow={ isChangeShow } />) : (<Item>
          <div className='passengerL'>乘客</div>
          <div className='passengerR'>
            {
              passengers.map(i => (
                <div className='passenger' key={ i.credentialCode + i.name }><span>{ i.name }</span><span>{ `${ i.credentialCode.slice(0, 4) } ******** ${ i.credentialCode.slice(-3) }` }</span></div>
              ))
            }
          </div>
        </Item>)
      }
    </div>
  )
}

// 抢票展示部分
const GrabMessage = ({ trains, from, to }) => {
  const { acceptSeat, allTrainNumber, acceptDate, arriveDate } = trains
  console.log('arriveDate---', arriveDate)
  let time = ''
  if (arriveDate) {
    time = arriveDate
  }
  return (
    <div className='grabmessageWrap'>
      <div className='StationWrap'>
        <div className='from otoft'>{ from }</div>
        <div className='myimg'><span className='mytext'>{ `${ time }` }</span><img src={ xiangyou } alt='' /></div>
        <div className='to otoft'>{ to }</div>
      </div>
      <div className='grabStation'>
        <div className='item_station'><span className='itemS itemS_t'>已选车次：</span>
          <div className='item_checi'>
            {
              allTrainNumber.map(i => (
                <span key={ i }>{ i }</span>
              ))
            }
          </div>
        </div>
        <div className='item_station'><span className='itemS'>已选坐席：</span>
          {
            acceptSeat.map(i => (
              <span key={ i }>{ i }</span>
            ))
          }
        </div>
        <div className='item_station'><span className='itemS itemS_t'>已选时间：</span>
          <div className='item_time'>
            {
              acceptDate.map(o => (
                <span key={ o }>{ o }</span>
              ))
            }
          </div>
        </div>
      </div>
    </div>
  )
}
// 抢座人员
const GrabPeople = ({ passengers }) => {
  return (
    <div>
      {
        passengers && passengers.map(o => (
          <div className='grabpeopleWrap' key={ `${ o.credentialCode + o.name }` }>
            <div className='item_people'><span className='name'>{ o.name }</span><span className='type'>{ o.passengerType }</span></div>
            <div className='item_people'><span className='name'>身份证</span><span>{ `${ o.credentialCode.slice(0, 4) } ******** ${ o.credentialCode.slice(-3) }` }</span></div>
          </div>
        ))
      }
    </div>
  )
}
// 抢票成功之后展示
const GrabStationShow = ({ trains, handlePointTimeCom }) => {
  const { arriveCity, arriveTime, departureTime, trainNumber, departureCity, departureDate, arriveDate, duration } = trains
  console.log('--test---', trains)
  return (
    <div className='grabstationShow'>
      <div className='oto'><span>{ departureCity }</span><span>{ departureTime }</span><span>{ departureDate }</span></div>
      <div className='myimg'><span>{ trainNumber }</span><img className='orderImg' src={ timeline } onClick={ () => { handlePointTimeCom() } } alt='' /><span className='title'>{ duration }</span></div>
      <div className='oto'><span>{ arriveCity }</span><span>{ arriveTime }</span><span>{ arriveDate }</span></div>
    </div>
  )
}
const GrabSuccess = ({ trains, trainNumber, passengers, partnerId, type, id, handlePointTimeCom, canChangeApply, isChangeShow }) => {
  console.log('---trainNumber---', trainNumber)
  const handleNoticeMask = () => {
    Mask(
      <SlidePage target='right' showClose={ false } >
        <NoticeMask />
      </SlidePage>
    , { mask: false, style: { position: 'absolute' } })
  }
  return (
    <div className='grabSuccessWrap'>
      <Item extra={ <span className='grabXuzhi' onClick={ () => handleNoticeMask() }><Icon type={ zhuyiIcon } />预定须知</span> } style={{ background: 'rgba(255, 171, 0, 0.05)' }}><span style={{ color: 'rgba(255, 171, 0, 0.05)' }}>空</span></Item>
      <GrabStationShow trains={ trains } handlePointTimeCom={ handlePointTimeCom } />
      <Item style={{ background: 'rgba(255, 171, 0, 0.05)' }} />
      <PassengerInformCom orderId={ id } passengers={ passengers } trains={ trains } trainNumber={ trainNumber } partnerId={ partnerId } type={ type } canChangeApply={ canChangeApply } isChangeShow={ isChangeShow } />
    </div>
  )
}

// <div className='grabSuccessWrap'>
//   <Item extra={ <span className='grabXuzhi'><Icon type={ zhuyiIcon } />预定须知</span> } style={{ background: 'rgba(255, 171, 0, 0.05)' }}><span style={{ color: 'rgba(255, 171, 0, 0.05)' }}>空</span></Item>
//   <GrabStationShow trains={ trains } />
//   <Item style={{ background: 'rgba(255, 171, 0, 0.05)' }} />
//   <PassengerInformCom orderId={ id } passengers={ passengers } trains={ trains } trainNumber={ trainNumber } partnerId={ partnerId } type={ type } />
// </div>
         
 
 
 
 huoche/components/ordergrab.js 
 
import React from 'react'
import { WhiteSpace, InputItem, List, Switch, Icon } from 'antd-mobile'
import { NewPromotion, Mask } from '@boluome/oto_saas_web_app_component'

import AddTouristCom from './addtourist'
import InvoiceDetails from './InvoiceDetails'
import AccidentRistMask from './AccidentRistMask'
import SeatTime from './SeatTime'

import '../style/order.scss'
import '../style/grabticket.scss'
import detailIcon from '../img/detailIcon.svg'
import tipsIcon from '../img/tips.svg'
import xiangyou from '../img/xiangyou.png'

const Item = List.Item
const Brief = Item.Brief

const Ordergrab = props => {
  const {
    touristNumer, accidentData, changeTouristNumer, seatsChoose = '',
    handleNeedAccident, haschecked, handleChangeTourNum, handlePromotion,
    promotion, handlePhone, phone, handleName, name,
    withoutDiscountedPrice = 0, maxprice, chooseCity, checkAccient = 0, maxpriceObj,
    chooseSpeedname, packagePrice, ticketDetails, seatsDataGrab, isBsb,
  } = props
  // console.log('--ticketDetails--', ticketDetails, seatsDataGrab)
  const handleShowDetail = () => {
    // console.log('handleShowDetail---', checkAccient, haschecked)
    Mask(<InvoiceDetails seatsChoose={ seatsChoose } promotion={ promotion } touristNumer={ touristNumer } withoutDiscountedPrice={ withoutDiscountedPrice } checkAccient={ checkAccient } haschecked={ haschecked } maxpriceObj={ maxpriceObj } packagePrice={ packagePrice } />, { mask: false, style: { position: 'absolute' } })
  }
  const handleAccidentRist = () => {
    Mask(<AccidentRistMask accidentData={ accidentData } />, { mask: false, style: { position: 'absolute' } })
  }
  let sumPromotionPrice = 0
  if (maxprice) {
    sumPromotionPrice = maxprice * touristNumer.length
  }
  const numberSum = touristNumer.length
  const packagePriceSumP = packagePrice * numberSum
  if (checkAccient && haschecked && isBsb) {
    const { price } = checkAccient
    sumPromotionPrice += touristNumer.length * price
  }
  sumPromotionPrice += packagePriceSumP
  const extraPrice = Number(withoutDiscountedPrice) * numberSum
  sumPromotionPrice += extraPrice
  // console.log('test222', seatsChoose, '3333', checkAccient)
  const colorClass = { color: '#333' }
  return (
    <div className='orderWrap'>
      <div className='orderMain'>
        <StationCom chooseCity={ chooseCity } details={ ticketDetails } seatsDataGrab={ seatsDataGrab } />
        <SeatTime propsObj={ props } colorClass={ colorClass } />
        <List>
          <Item arrow='empty'>抢票提速<span className='itemoto' style={{ color: '#333' }}>{ chooseSpeedname ? `${ chooseSpeedname }` : `闪电抢票¥（${ packagePrice }/份）` }</span></Item>
        </List>
        <WhiteSpace size='lg' />
        <AddTouristCom touristNumer={ touristNumer } handleChangeTourNum={ handleChangeTourNum } changeTouristNumer={ res => changeTouristNumer(res) } />
        <WhiteSpace size='lg' />
        <PhoneCom handlePhone={ handlePhone } phone={ phone } handleName={ handleName } name={ name } />
        <WhiteSpace size='lg' />
        {
          accidentData && isBsb ? (<AccidentRist
            handleAccidentRist={ handleAccidentRist }
            touristNumer={ touristNumer }
            accidentData={ accidentData }
            haschecked={ haschecked }
            handleNeedAccident={ handleNeedAccident }
          />) : ('')
        }
        <WhiteSpace size='lg' />
        {
          sumPromotionPrice && touristNumer && touristNumer.length > 0 ? (<NewPromotion orderType='huoche' channel='tieyou' amount={ sumPromotionPrice } count={ numberSum } handleChange={ reply => handlePromotion(reply) } />) : ''
        }
        <WhiteSpace size='lg' />
      </div>
      <FooterCom
        propsObj={ props }
        handleShowDetail={ handleShowDetail }
        sumPromotionPrice={ sumPromotionPrice }
      />
    </div>
  )
}

export default Ordergrab

// 抢票展示---订单确认页面的
const StationCom = ({ chooseCity, details = '', seatsDataGrab }) => {
  const { from = '', to = '' } = chooseCity
  // console.log('---test-seatsDataGrab-', details, seatsDataGrab)
  return (
    <div className='StationWrap'>
      <div className='from otoft'>{ from }</div>
      {
        details && seatsDataGrab ? (<div className='myimgDetails'><span>{ details.number }</span><img src={ xiangyou } alt='' /><span>{ seatsDataGrab.name }</span></div>) : (<div className='myimg'><img src={ xiangyou } alt='' /></div>)
      }
      <div className='to otoft'>{ to }</div>
    </div>
  )
}

// 填写手机号码组件
const PhoneCom = ({ handlePhone, phone, name, handleName }) => {
  return (
    <List>
      <InputItem
        type='text'
        placeholder='请输入联系人姓名'
        value={ name }
        defaultValue={ name }
        onChange={ v => handleName(v) }
      >联系人</InputItem>
      <InputItem
        type='phone'
        placeholder='请输入联系人手机号'
        value={ phone }
        defaultValue={ phone }
        onChange={ v => handlePhone(v) }
      >联系手机</InputItem>
    </List>
  )
}
// 火车意外险组件
const AccidentRist = ({ handleAccidentRist, touristNumer, accidentData, handleNeedAccident, haschecked }) => {
  console.log(accidentData, haschecked)
  const { name, brief, price } = accidentData
  return (
    <Item
      className='accidenRist'
      extra={ <Switch
        checked={ haschecked }
        onClick={ checked => { handleNeedAccident(checked, accidentData) } }
      /> }
    >
      { name }
      <Icon onClick={ () => { handleAccidentRist() } } type={ tipsIcon } />
      <Brief>{ brief }</Brief>
      <span className='accidenPrice'>¥{ price } <i>x{ touristNumer.length }</i></span>
    </Item>
  )
}

// 底部footer部分
const FooterCom = ({ propsObj, handleShowDetail, sumPromotionPrice }) => {
  const {
    touristNumer, handleOrderSave, chooseCity, checkAccient,
    promotion, phone, chooseTime, name, timearr, chooseSeat, chooseArrtime, haveChooseZuo,
    startTime, haschecked,
    withoutDiscountedPrice = 0,
  } = propsObj
  const { discount = 0 } = promotion
  // const sumDiscounted = Number(withoutDiscountedPrice) * touristNumer.length
  // let sum = sumDiscounted + Number(sumPromotionPrice)
  let sum = Number(sumPromotionPrice)
  sum -= discount
  if (sum < 0) {
    sum = 0.01
  }
  console.log('withoutDiscountedPrice----', withoutDiscountedPrice)
  // console.log('sum----', sumPromotionPrice, '--', discount, '---', checkAccient)
  return (
    <div className='footerWrap'>
      {
        touristNumer.length === 0 ? (<div className='footerL' />) : (
          <div className='footerL'><span className={ `priceSum ${ discount === 0 || discount === '0.00' ? 'promotion' : '' }` }>实付: ¥{ sum.toFixed(2) }</span>{ discount === 0 || discount === '0.00' ? ('') : (<span className='pricePro'>已优惠¥{ `${ discount.toFixed(2) }` }</span>) }</div>
        )
      }
      {
        touristNumer.length === 0 ? ('') : (
          <div className='detailWrap' onClick={ () => { handleShowDetail() } }>
            <span className='detail'>明细</span><Icon type={ detailIcon } />
          </div>
        )
      }
      {
        touristNumer.length === 0 ? (<div className='footerR footerSpan'>立即下单</div>) :
        (<div className='footerR' onClick={ () => handleOrderSave(promotion, touristNumer, phone, chooseTime, name, chooseCity, checkAccient, timearr, chooseSeat, chooseArrtime, haveChooseZuo, startTime, haschecked) }>立即下单</div>)
      }
    </div>
  )
}
         
 
 
 
 huoche/components/ordernotice.js 
 
import React from 'react'
import { List } from 'antd-mobile'
import { Mask } from '@boluome/oto_saas_web_app_component'

import NoticeMask from './NoticeMask'
import '../style/ordernotice.scss'

const Item = List.Item
class Ordernotice extends React.Component {
  constructor(props) {
    super(props)
    // const newState = merge(state)(props)
    this.state = {
      ...props,
    }
    this.handleNoticeShow = this.handleNoticeShow.bind(this)
  }
  componentWillUnmount() {
    // Popup.hide()
  }
  componentWillReceiveProps(nextProps) {
    this.setState({
      ...nextProps,
    })
  }
  handleNoticeShow() {
    Mask(<NoticeMask />, { mask: false, style: { position: 'absolute' } })
  }
  render() {
    const { seatsChoose, status = -10 } = this.state
    return (
      <div>
        {
          seatsChoose && seatsChoose.name && status !== 4 ? (<Item extra={ <NoticeBtn handleNoticeShow={ this.handleNoticeShow } /> }>{ seatsChoose.name } ¥{ seatsChoose.price }</Item>) :
          (
            status === 4 ? (<Item arrow='horizontal' onClick={ () => { this.handleNoticeShow() } }><span className='noticeBtn'>预定须知</span></Item>) : (<Item className='gaitui' arrow='horizontal' extra={ <NoticeBtn handleNoticeShow={ this.handleNoticeShow } /> } />)
          )
        }
      </div>
    )
  }
}

export default Ordernotice

const NoticeBtn = ({ handleNoticeShow }) => (
  <span className='noticeBtn' onClick={ () => { handleNoticeShow() } }>预定须知</span>
)

// const NoticeMask = ({ handleContainerClose }) => {
//   return (
//     <div className='noticeMaskwrap'>
//       <div className='noticeMask'>
//         <p>1、声明</p>
//         <div>本产品内含火车票，受全国各铁路局的不同规定与要求，无法承诺百分之百都能预订成功</div>
//         <p>2、取票方式</p>
//         <div>凭购票时的有效证件和电子取票号，可在全国任意火车站或代售点取票。代售点收取代售费5元/张，
//           车站售票窗口取异地票收取费用5元/张，车站取票机不收取任何费用。</div>
//         <p>3、网上退票</p>
//         <div>
//           <ul>
//             <li>代购成功，未取票且距发车时间大于1小时，可在“我的订单”中申请网上退票</li>
//             <li>申请退票后，卖家1小时内帮您退票</li>
//             <li>根据退票时间，铁路局收取5%-20%的退票服务费；建议您尽早提交退票申请，减少手续费损失。
//             （对开车前15天以上（不含）退票的，不收取退票费。票面乘车站开车时间开车前15天（含）至48小时以上的按票价5%收取手续费；
//             距离发车时间48小时（含）以内、24小时以上的，收取10%退票费；距离发车时间不足24小时（含）的，
//             收取20%退票费，根据2015年6月10日新规，距发车时间15天以内的车票，改签到15以上的，
//             退票时收取5%退票费；最终以铁路局实退为准。）</li>
//             <li>退票成功后，退还款项（含保险）即刻退回您的支付账户</li>
//             <li>铁路局规定退票手续费最少收取2元，因此票面价低于2元钱的车票，退票后退款为0元</li>
//           </ul>
//         </div>
//         <p>4、车站退票</p>
//         <div>
//           <ul>
//             <li>代购成功，已换取实体票或距离发车时间小于1小时，需您携带购票时有效证件和火车票，
//             前往全国任意火车站退票窗口办理退票。退还款项将在7-20个工作日内退回您的支付宝账户。
//             发车后窗口也无法操作退票，该票只能作废。</li>
//             <li>如果您购买了交通意外险，窗口退票成功后，请尽快联系卖家为您撤保，
//             退还款项将在7-20个工作日内退回您的支付宝账户。如果没有及时通知，保险将按原车次生效，后果由买家自行承担</li>
//           </ul>
//         </div>
//       </div>
//       <img onClick={ () => { handleContainerClose() } } src={ closeIcon } alt='' />
//     </div>
//
//   )
// }

// <p>5、改签方式</p>
// <div>不支持改签，如有需要，请提前安排退票。</div>
         
 
 
 
 huoche/components/refund.js 
 
import React from 'react'
// import { Icon } from 'antd-mobile'
import ChangeSign from './ChangeSign'

const Refund = props => {
  const { propsObj, id, status } = props
  if (propsObj) {
    const { passengers, ChooseCredential, trains, trainNumber } = propsObj
    return (
      <div>
        <ChangeSign
          passengers={ passengers }
          ChooseCredential={ ChooseCredential }
          trains={ trains }
          orderId={ id }
          status={ status }
          trainNumber={ trainNumber }
        />
      </div>
    )
  }
  return (
    <div />
  )
}

export default Refund
         
 
 
 
 huoche/components/root.js 
 
import React from 'react'
import customize from 'customize'

export default customize(
  ({ children }) => (
    <div>{ children }</div>
  )
)
         
 
 
 
 huoche/components/showPromotion.js 
 
import React from 'react'
import { List, Icon, WhiteSpace } from 'antd-mobile'
import { Mask, SlidePage } from '@boluome/oto_saas_web_app_component'

import '../style/showPromotion.scss'
import '../style/InvoiceDetails.scss'

// import InvoiceDetails from './InvoiceDetails'

import zhuyiIcon from '../img/zhuyi.svg'
// import jianIcon from '../img/jiantexts.svg'
// import hongIcon from '../img/hong.svg'
import closeIcon from '../img/close.png'

const Item = List.Item
class ShowPromotion extends React.Component {
  constructor(props) {
    super(props)
    // const newState = merge(state)(props)
    this.state = {
      ...props,
    }
    this.handleNoticeShow = this.handleNoticeShow.bind(this)
  }
  componentWillUnmount() {
    // Popup.hide()
  }
  componentWillReceiveProps(nextProps) {
    this.setState({
      ...nextProps,
    })
  }
  handleNoticeShow() {
    const { realPayPrice, passengers, platformActivity = {}, coupon = {}, trains, withoutDiscountedPrice, insuranceDoc } = this.state
    Mask(
      <SlidePage target='right' showClose={ false }>
        <Invoice
          realPayPrice={ realPayPrice }
          platformActivity={ platformActivity }
          coupon={ coupon }
          trains={ trains }
          passengers={ passengers }
          withoutDiscountedPrice={ withoutDiscountedPrice }
          insuranceDoc={ insuranceDoc }
        />
      </SlidePage>
      , { mask: false, style: { position: 'absolute' } })
  }
  render() {
    const { realPayPrice, platformActivity = {}, coupon = {}, price } = this.state
    // const { title, price, activityId } = platformActivity
    return (
      <div className='showPromotionWrap'>
        <List>
          <Item extra={ `¥${ price.toFixed(2) }` }>总价</Item>
          <Item className='active oto' extra={ <span className='text_oto'>-¥{ platformActivity.price ? platformActivity.price : '0.00' }</span> }><span className='iconspanj iconoto'>减</span><span>{ platformActivity.title ? platformActivity.title : '平台活动' }</span></Item>
          <Item className='coupon oto' extra={ <span className='text_oto'>-¥{ coupon.price ? coupon.price : '0.00' }</span> }><span className='iconspanh iconoto'>红</span><span>{ coupon.title ? coupon.title : '红包优惠' }</span></Item>
          <Item className='payPrice' extra={ <ShowDown handleNoticeShow={ this.handleNoticeShow } realPayPrice={ realPayPrice } /> }><span className='hidden'>我需要隐藏</span></Item>
        </List>
        <WhiteSpace size='lg' />
      </div>
    )
  }
}

export default ShowPromotion

// 显示优惠活动那一块
const ShowDown = ({ handleNoticeShow, realPayPrice }) => {
  return (
    <div className='show'>
      <span>实付</span>
      <span>¥{ realPayPrice.toFixed(2) }</span>
      {
        realPayPrice === 0 ? ('') : (<Icon onClick={ () => handleNoticeShow() } type={ zhuyiIcon } />)
      }
    </div>
  )
}
// 由于数据不同意的情况，单独分离出来 费用详情 ------有的时候花时间去精简代码成本可能并没有作用
const Invoice = ({ realPayPrice, passengers, trains, platformActivity, coupon, withoutDiscountedPrice, insuranceDoc }) => {
  const { seatName, unitPrice, packagePrice } = trains
  console.log('realPayPrice-', realPayPrice)
  return (
    <div className='InvoiceDetails'>
      <div className='title'>
        <span className='line' />
        <span className='text'>费用明细</span>
        <span className='line' />
      </div>
      <div className='price'>{ `¥ ${ realPayPrice.toFixed(2) }` }</div>
      <div className='list'>
        <p><span>{ seatName }</span><span>{ `¥${ unitPrice } X ${ passengers.length }份` }</span></p>
        {
          withoutDiscountedPrice && withoutDiscountedPrice !== 0 ? (<p><span>手续费</span><span>{ `¥${ withoutDiscountedPrice } X ${ passengers.length }份` }</span></p>) : ('')
        }
        {
          packagePrice && packagePrice !== 0 ? (<p><span>加速包</span><span>{ `¥${ packagePrice } X ${ passengers.length }份` }</span></p>) : ('')
        }
        {
          insuranceDoc && insuranceDoc.length !== 0 ? (<p><span>{ insuranceDoc[0].insuranceName }</span><span>{ `¥${ insuranceDoc[0].price } X ${ insuranceDoc[0].venders.length }` }</span></p>) : ''
        }
        <p><span>平台活动</span><span className='Preferential'>-¥{ platformActivity && platformActivity.price ? platformActivity.price : '0.00' }</span></p>
        <p><span>红包优惠</span><span className='Preferential'>-¥{ coupon && coupon.price ? coupon.price : '0.00' }</span></p>
      </div>
      <img onClick={ () => { Mask.closeAll() } } src={ closeIcon } alt='' />
    </div>
  )
}
         
 
 
 
 huoche/components/stoptime.js 
 
import React from 'react'
import { List, Icon } from 'antd-mobile'
import { Mask } from '@boluome/oto_saas_web_app_component'
// import { setStore } from '@boluome/common-lib'

import '../style/alternative.scss'
import choose from '../img/choose.svg'
import noChoose from '../img/nokong.svg'

const Item = List.Item
// const Brief = Item.Brief

class StopTime extends React.Component {
  constructor(props) {
    super(props)
    this.state = {
      ...props,
    }
  }
  componentWillUnmount() {
    // Popup.hide()
  }
  componentWillReceiveProps(nextProps) {
    this.setState({
      ...nextProps,
    })
  }
  // 取消选择被选坐席
  handleClose() {
    Mask.closeAll()
  }
  // 点击确认将选中的坐席传入到父组件
  handleOkchoose() {
    Mask.closeAll()
  }
  render() {
    return (
      <div className='alternativeWrap'>
        <div className='title'><span onClick={ () => { this.handleClose() } }>取消</span><span>选择备选坐席</span><span onClick={ () => { this.handleOkchoose() } }>确定</span></div>
        <p>温馨提示：多选几个日期，抢票成功的记录会更高！</p>
        <List>
          <Item extra={ <Icon type={ choose } /> }>10月15日<span className='time'>周日</span></Item>
        </List>
        <List>
          <Item extra={ <Icon type={ choose } /> }>10月16日<span className='time'>周一</span></Item>
        </List>
        <List>
          <Item extra={ <Icon type={ noChoose } /> }>10月17日<span className='time'>周二</span></Item>
        </List>
        <List>
          <Item extra={ <Icon type={ noChoose } /> }>10月18日<span className='time'>周三</span></Item>
        </List>
      </div>
    )
  }
}

export default StopTime
         
 
 
 
 huoche/components/timelist.js 
 
import React from 'react'
import { Icon } from 'antd-mobile'
import { Calendar, Mask, SlidePage } from '@boluome/oto_saas_web_app_component'
import { week, moment, setStore } from '@boluome/common-lib'

import '../style/timelist.scss'
import jiantouL from '../img/jiantou.png'
import jiantouR from '../img/jiantou_1.png'
import xialaIcon from '../img/xiala.svg'

// const Item = List.Item
class Timelist extends React.Component {
  constructor(props) {
    super(props)
    // const newState = merge(state)(props)
    this.state = {
      close: false,
      ...props,
    }
    this.handleCalendarDate = this.handleCalendarDate.bind(this)
    this.handleGoChooseTime = this.handleGoChooseTime.bind(this)
    this.handleTremDate = this.handleTremDate.bind(this)
    this.handleProNextTime = this.handleProNextTime.bind(this)
    // this.handleEnglish = this.handleEnglish.bind(this)
  }
  componentWillMount() {
    this.handleTremDate()
  }
  componentWillUnmount() {
    // Popup.hide()
  }
  componentWillReceiveProps(nextProps) {
    this.setState({
      ...nextProps,
    })
  }
  // 处理前一天，后一天的时间段限制
  handleTremDate() {
    const D = new Date()
    const year = D.getFullYear()
    const month = D.getMonth() + 1
    const day = D.getDate()
    D.setFullYear(year, month - 1, day + 60)
    // const dateObj = D.toLocaleDateString()
    const dateObj = `${ D.getFullYear() }/${ D.getMonth() + 1 }/${ D.getDate() }`
    const date = `${ year }-${ month }-${ day }`
    const datestr = moment('x')(date)
    const nextDatestr = dateObj.replace(/\//g, '-')
    this.setState({
      todayDatestr: datestr,
      nextDatestr:  moment('x')(nextDatestr),
    })
  }
  // 处理日历返回的日期
  handleCalendarDate(res) {
    // console.log('hhh--', res)
    const { onChangeTime } = this.props
    Mask.closeAll()
    const { date, datestr } = res
    const time = `${ date.split('-')[1] }月${ date.split('-')[2] }日`
    const weed = week()(moment('day')(date))
    // const dateKJIN = `${ date.split('-')[0] }-${ date.split('-')[1] > 9 ? date.split('-')[1] : `0${ date.split('-')[1] }` }-${ date.split('-')[2] }`
    const chooseTime = {
      dateShow: time,
      datestr,
      weed,
      date,
    }
    setStore('huoche_ChooseTime', chooseTime, 'session')
    // 反向改变props里面的时间日期
    onChangeTime(chooseTime)
    this.setState({
      chooseTime,
    })
  }
  // 处理前一天，后一天的日期
  handleProNextTime(timeObj, number) {
    console.log('sssssss')
    const { date } = timeObj
    const { onChangeTime, gethandleFilter, filiterObj, scheduleslist } = this.props
    const datesplit = date.split('-')
    const nextdate = new Date()
    nextdate.setFullYear(datesplit[0], (datesplit[1] * 1) - 1, (datesplit[2] * 1) - number)
    // const dateObj = nextdate.toLocaleDateString()
    const dateObj = `${ nextdate.getFullYear() }/${ nextdate.getMonth() + 1 }/${ nextdate.getDate() }`
    const time = dateObj.replace(/\//g, '-')
    const m = `${ dateObj.split('/')[1] > 9 ? dateObj.split('/')[1] : `0${ dateObj.split('/')[1] }` }`
    const d = dateObj.split('/')[2] > 9 ? dateObj.split('/')[2] : `0${ dateObj.split('/')[2] }`
    const t = `${ dateObj.split('/')[0] }-${ m }-${ d }`
    const dateShow = `${ m }月${ d }日`
    const weed = week()(moment('day')(time))
    const datestr = moment('x')(time)
    const chooseTime = {
      date: t,
      weed,
      datestr,
      dateShow,
    }
    setStore('huoche_ChooseTime', chooseTime, 'session')
    onChangeTime(chooseTime, gethandleFilter, filiterObj, scheduleslist)
  }
  // // 特殊情况判断----返回日期为英文
  // handleEnglish(dateObj) {
  //   // console.log('handleEnglish--', dateObj)
  //   const weekarr = [
  //     {
  //       mon: 'January',
  //       wek: '01',
  //     },
  //     {
  //       mon: 'February',
  //       wek: '02',
  //     },
  //     {
  //       mon: 'April',
  //       wek: '04',
  //     },
  //     {
  //       mon: 'May',
  //       wek: '05',
  //     },
  //     {
  //       mon: 'June',
  //       wek: '06',
  //     },
  //     {
  //       mon: 'July',
  //       wek: '07',
  //     },
  //     {
  //       mon: 'August',
  //       wek: '08',
  //     },
  //     {
  //       mon: 'September',
  //       wek: '09',
  //     },
  //     {
  //       mon: 'October',
  //       wek: '10',
  //     },
  //     {
  //       mon: 'November',
  //       wek: '11',
  //     },
  //     {
  //       mon: 'December',
  //       wek: '12',
  //     },
  //     {
  //       mon: 'January',
  //       wek: '01',
  //     },
  //   ]
  //   let m = 0
  //   let d = '01'
  //   let mony = ''
  //   let dayy = ''
  //   let yeary = ''
  //   if (dateObj.indexOf('年') >= 0) {
  //     const str = dateObj.split('年')
  //     mony = str[1].split('月')[0]
  //     dayy = str[1].split('月')[1].split('日')[0]
  //     yeary = str[0]
  //     if (mony * 1 < 9) {
  //       m = `0${ mony }`
  //     } else {
  //       m = mony
  //     }
  //   } else {
  //     mony = dateObj.split(' ')[0]
  //     dayy = dateObj.split(' ')[1].replace(',', '')
  //     yeary = dateObj.split(' ')[2]
  //     for (let i = 0; i < weekarr.length; i++) {
  //       if (mony === weekarr[i].mon) {
  //         m = weekarr[i].wek
  //       }
  //     }
  //   }
  //   // console.log('test1---', mony, dayy, yeary, '---dateObj-', dateObj)
  //   if (dayy * 1 < 9) {
  //     d = `0${ dayy }`
  //   } else {
  //     d = dayy
  //   }
  //   // const t = `${ yeary }-${ m }-${ dayy }`
  //   const date = `${ yeary }-${ m }-${ d }`
  //   const weed = week()(moment('day')(date))
  //   // const date = `${ yeary }-${ m }-${ d }`
  //   const datestr = moment('x')(date)
  //   const dateShow = `${ m }月${ d }日`
  //   const time = {
  //     date,
  //     weed,
  //     datestr,
  //     dateShow,
  //   }
  //   console.log('test2----', m, d, yeary, time)
  //   return time
  // }
  // 进行日历里面的日期选择  ---待优化
  handleGoChooseTime() {
    Mask(
      <SlidePage target='left' showClose={ false } >
        <Calendar onChange={ res => this.handleCalendarDate(res) } untilDay={ 60 } vipDay={ 28 } />
      </SlidePage>
    , { mask: false, style: { position: 'absolute' } })
  }
  render() {
    const { chooseTime, todayDatestr, nextDatestr } = this.state
    const { weed, dateShow, datestr } = chooseTime
    return (
      <div className='timeList'>
        {
          todayDatestr >= datestr ? (
            <div className='time_l timeoto'><img src={ jiantouL } alt='' /><span>前一天</span></div>) : (<div className='time_l' onClick={ () => this.handleProNextTime(chooseTime, 1) }><img src={ jiantouL } alt='' /><span>前一天</span></div>)
        }
        <div className='time_c' onClick={ () => { this.handleGoChooseTime() } }>{ dateShow }{ weed }<span className='addIcon'><Icon type={ xialaIcon } /></span></div>
        {
          nextDatestr <= datestr ? (
            <div className='time_r timeoto'><span>后一天</span><img src={ jiantouR } alt='' /></div>) : (<div className='time_r' onClick={ () => this.handleProNextTime(chooseTime, -1) }><span>后一天</span><img src={ jiantouR } alt='' /></div>)
        }
      </div>
    )
  }
}

export default Timelist
         
 
 
 
 huoche/containers/app.js 
 
import { connect } from 'react-redux'
import { browserHistory } from 'react-router'
import { Toast  } from 'antd-mobile'
import { wrap, Mask, Loading }    from '@boluome/oto_saas_web_app_component'
import { login, getLocationGaode } from 'business'
import { getStore, week, moment, setStore, removeStore } from '@boluome/common-lib'
import App         from '../components/app'
import getDateOne from '../components/getDateOne'
import { removeStoreFn, removeStoreAppMore } from '../actions/order'

const mapStateToProps = state => {
  const { app } = state
  const { nowChecked, history, chooseCity, chooseTime, LocationAddr, cityHot } = app
  return {
    nowChecked,
    history,
    chooseCity,
    chooseTime,
    LocationAddr,
    cityHot,
  }
}

const mapDispatchToProps = dispatch => {
  return {
    dispatch,
    // 是否只查看高铁
    handleCheckedFn: v => {
      console.log('handleCheckedFn--', v)
      dispatch({ type: 'NOWCHECHED', nowChecked: v })
      if (v) {
        setStore('huoche_SpeedRail', true, 'session')
      } else {
        setStore('huoche_SpeedRail', false, 'session')
      }
    },
    handleCalendarDate: dates => {
      console.log(getDateOne(dates))
      Mask.closeAll()
      const { date, datestr } = dates
      const time = `${ date.split('-')[1] }月${ date.split('-')[2] }日`
      const weed = getDateOne(dates) ? getDateOne(dates) : week()(moment('day')(date))
      const chooseTime = {
        dateShow: time,
        datestr,
        weed,
        date,
      }
      dispatch({ type: 'CALENDAR_TIME', chooseTime })
      setStore('huoche_ChooseTime', chooseTime, 'session')
    },
    // 选择出发地，处理
    handleStartPoint: (reply, chooseCity) => {
      const { name } = reply
      const { to } = chooseCity
      dispatch({ type: 'CHOOSE_CITY', chooseCity: { from: name, to } })
    },
    // 选择目的地，处理
    handleEndPoint: (reply, chooseCity) => {
      const { name } = reply
      const { from } = chooseCity
      dispatch({ type: 'CHOOSE_CITY', chooseCity: { from, to: name } })
    },
    // 出发地和目的地交换
    handleTransform: chooseCity => {
      const { from, to } = chooseCity
      const point = {
        from: to,
        to:   from,
      }
      dispatch({ type: 'CHOOSE_CITY', chooseCity: point })
    },
    // 处理历史记录的清除
    hanndleCleanHistory: () => {
      setStore('huoche_ChooseCity', [])
      dispatch({ type: 'HUOCHE_HISTORICAL', history: [] })
      // 这里是防止清空最近查找，而出发地为空
      const chooseCity = getStore('currentPosition', 'session')
      const city = chooseCity.city.replace(/['省', '市', '县', '区']/, '')
      const startAndend = {
        from: city,
        to:   '北京',
      }
      dispatch({ type: 'CHOOSE_CITY', chooseCity: startAndend })
    },
    // 当点击历史记录的时候，查询历史记录
    handleChooseHist: chooseCity => {
      dispatch({ type: 'CHOOSE_CITY', chooseCity })
    },
    goListFn: (chooseTime, chooseCity, mark) => {
      const arr = getStore('huoche_ChooseCity') || []
      const { from, to } = chooseCity
      if (from === to) {
        Toast.info('出发地和目的地不能一样哦～', 1)
        return
      }
      for (let i = 0; i < arr.length; i++) {
        if (arr[i].from === from && arr[i].to === to) {
          arr.splice(i, 1)
        }
      }
      arr.unshift(chooseCity)
      if (arr.length > 5) {
        arr.splice(5, 1)
      }
      setStore('huoche_ChooseCity', arr) // 这个是历史记录需要的
      setStore('huoche_ChooseCity', chooseCity, 'session') // 这个是下个页面的列表页需要的
      dispatch({ type: 'HUOCHE_INIT' }) // 还原数据
      // 这里是保证新的数据状态
      removeStoreFn()
      removeStore('huoche_details', 'session')
      let withoutDiscountedPric = 5
      const host = location.host
      if (host.indexOf('bsb') < 0) {
        console.log(withoutDiscountedPric)
      } else {
        withoutDiscountedPric = 0
      }
      if (mark === 'goGrab') {
        setStore('huoche_ChooseTime', chooseTime, 'session')
        setStore('huoche_withoutDiscountedPrice', withoutDiscountedPric, 'session') // 抢票需要的手续费
        // 这里是保证新的数据状态
        removeStore('TOURISTNUMBER', 'session')
        removeStore('huoche_phone', 'session')
        removeStore('huoche_name', 'session')
        removeStoreAppMore()
        browserHistory.push('/huoche/grabticket?goGrab')
      } else {
        browserHistory.push('/huoche/moredata')
      }
    },
    // 去选择地址页面
    goCitySelect: mark => {
      browserHistory.push(`/huoche/city?${ mark }`)
    },
    // 去订单列表先登录
    myClick: cb => {
      const customerUserId = getStore('customerUserId', 'session')
      if (customerUserId) {
        cb()
      } else {
        // 用户绑定
        login(err => {
          if (err) {
            console.log(err)
            Toast.info('登录失败，请退出重新登录', 2, null, false)
          } else {
            console.log('我是用户绑定')
            cb()
          }
        }, true)
      }
    },
  }
}

const mapFunToComponent  = dispatch => ({
  componentWillMount: () => {
    // 用户绑定
    login(err => {
      if (err) {
        console.log(err)
      } else {
        console.log('我是用户绑定')
      }
    })
    // 定位
    getLocationGaode(err => {
      const handleClose = Loading()
      if (err) {
        console.log(err)
        Mask.closeAll()
        dispatch({ type: 'CHOOSE_CITY', nolocation: false })
      } else {
        dispatch({ type: 'CHOOSE_CITY', nolocation: true })
      }
      handleClose()
      Mask.closeAll()
    })
    // 获取历史记录
    const history = getStore('huoche_ChooseCity') || []
    const chooseCitySession = getStore('huoche_ChooseCity', 'session')
    // 显示历史记录
    dispatch({ type: 'HUOCHE_HISTORICAL', history })
    console.log('history---', history)
    if (chooseCitySession) {
      dispatch({ type: 'CHOOSE_CITY', chooseCity: chooseCitySession })
    } else if (history && history.length > 0) {
      const startAndend = {
        from: history[0].from,
        to:   history[0].to,
      }
      dispatch({ type: 'CHOOSE_CITY', chooseCity: startAndend })
    } else {
      const chooseCity = getStore('currentPosition', 'session')
      if (chooseCity) {
        const city = chooseCity.city.replace(/['省', '市', '县', '区']/, '')
        const startAndend = {
          from: city,
          to:   '北京',
        }
        dispatch({ type: 'CHOOSE_CITY', chooseCity: startAndend })
      } else {
        dispatch({ type: 'CHOOSE_CITY', chooseCity: { from: '上海', to: '北京' } })
      }
    }
    // 获取购票日期
    // const hasTime = getStore('huoche_ChooseTime', 'session')
    // let chooseTime = ''
    // if (hasTime) {
    //   chooseTime = hasTime
    // } else {
    //   chooseTime = getDateOne()
    // }
    // 首页清空数据，时间是现在时间
    const chooseTime = getDateOne()
    dispatch({ type: 'CALENDAR_TIME', chooseTime })
    setStore('huoche_ChooseTime', chooseTime, 'session')
    const nowChecked = getStore('huoche_SpeedRail', 'session')
    if (nowChecked) {
      dispatch({ type: 'NOWCHECHED', nowChecked })
    }
  },
  componentDidMount: () => {
    let LocationAddr = getStore('currentPosition', 'session')
    if (LocationAddr) {
      LocationAddr = LocationAddr.city.replace(/['省', '市', '县', '区']/, '')
      dispatch({ type: 'LOCATION_ADDR', LocationAddr })
    }
  },
  componentWillUnmount: () => {
    // 这里是为了防止列表页的筛选判断 --> 作出措施
    if (getStore('huoche_filiterObj', 'session')) {
      removeStore('huoche_filiterObj', 'session')
    }
  },
})

export default
connect(mapStateToProps, mapDispatchToProps)(
  wrap(mapFunToComponent)(App)
)
         
 
 
 
 huoche/containers/details.js 
 
import { connect } from 'react-redux'
import { browserHistory } from 'react-router'
import { login } from 'business'
import { Toast  } from 'antd-mobile'
import { wrap }    from '@boluome/oto_saas_web_app_component'
import { getStore, setStore, removeStore } from '@boluome/common-lib'
import Details         from '../components/details'
import { seatsDataFn } from '../actions/details'
import { removeStoreFn } from '../actions/order'

const mapStateToProps = state => {
  console.log(state)
  const { details } = state
  return {
    ...details,
  }
}

const mapDispatchToProps = dispatch => {
  const gobrowserOrder = ChangeSign => {
    if (ChangeSign && ChangeSign.indexOf('ChangeSign') > 0) {
      browserHistory.push('/huoche/ChangeSign')
    } else {
      browserHistory.push('/huoche/order')
    }
  }
  return {
    dispatch,
    handleCheckedFn: v => {
      console.log('handleCheckedFn--', v)
      dispatch({ type: 'NOWCHECHED', nowChecked: v })
    },
    handleCheckedChange: reply => {
      console.log('handleCheckedChange---', reply)
    },
    handleCalendarDate: date => {
      console.log('handleCalendarDate----', date)
    },
    onChangeTime: time => {
      const ticketDetails = getStore('huoche_details', 'session')
      console.log('onChangeTime---', ticketDetails)
      const chooseCity = getStore('huoche_ChooseCity', 'session')
      dispatch({ type: 'CALENDAR_TIME', chooseTime: time })
      dispatch(seatsDataFn(time, chooseCity, ticketDetails))
    },
    goListFn: () => {
      browserHistory.push('/huoche/list')
    },
    goOrderFn: (item, ChangeSign) => {
      setStore('huoche_seats', item, 'session')
      const customerUserId = getStore('customerUserId', 'session')
      if (customerUserId) {
        gobrowserOrder(ChangeSign)
      } else {
        // 用户绑定
        login(err => {
          if (err) {
            console.log(err)
            Toast.info('登录失败，请退出重新登录', 2, null, false)
          } else {
            console.log('我是用户绑定')
            gobrowserOrder(ChangeSign)
          }
        }, true)
      }
    },
    // 到抢票页面
    goGrabticket: (ticketDetails, seatsData) => {
      console.log('ticketDetails-goGrabticket-', ticketDetails, seatsData)
      removeStore('huoche_maxpriceObj', 'session')
      setStore('huoche_seatsData_grab', seatsData, 'session')
      // setStore('TOURISTNUMBER', [], 'session')
      removeStoreFn()
      browserHistory.push('/huoche/grabticket')
    },
  }
}

const mapFunToComponent  = dispatch => ({
  componentWillMount: () => {
    const search = location.search
    console.log('search--', search)
    dispatch({ type: 'CHANGE_URL', ChangeSign: search })
    const ticketDetails = getStore('huoche_details', 'session')
    dispatch({ type: 'TICKETDETAILS', ticketDetails })
    if (ticketDetails) {
      dispatch({ type: 'KJIN_SEATSDATA', seatsData: ticketDetails.seats })
    }
    const chooseTime = getStore('huoche_ChooseTime', 'session')
    dispatch({ type: 'CALENDAR_TIME', chooseTime })
    // 这里是清空订单页面的部分数据----再让改就是傻缺吧
    // removeStore('TOURISTNUMBER', 'session')
    // removeStore('huoche_phone', 'session')
    // removeStore('huoche_name', 'session')
  },
  componentDidMount: () => {
    console.log('root mounted', dispatch)
  },
  componentWillUnmount: () => {
    dispatch({ type: 'KJIN_SEATSDATA', noSeats: true })
  },
})

export default
connect(mapStateToProps, mapDispatchToProps)(
  wrap(mapFunToComponent)(Details)
)
         
 
 
 
 huoche/containers/grabticket.js 
 
import { connect } from 'react-redux'
import { login } from 'business'
import { Toast  } from 'antd-mobile'
import { browserHistory } from 'react-router'
import { wrap, Mask }    from '@boluome/oto_saas_web_app_component'
import { getStore, setStore, week, moment } from '@boluome/common-lib' // , removeStore
import Grabticket         from '../components/grabticket'
import { seatsDataFn } from '../actions/details'
import getDateOne from '../components/getDateOne'
import getDateArr from '../components/getDateArr'

const mapStateToProps = state => {
  console.log(state)
  const { grabticket } = state
  console.log('test---', grabticket)
  return {
    ...grabticket,
  }
}

const mapDispatchToProps = dispatch => {
  // 判断jie shu
  const handleSumTime = (timeObj, number) => {
    const { date } = timeObj
    const datesplit = date.split('-')
    const nextdate = new Date()
    nextdate.setFullYear(datesplit[0], (datesplit[1] * 1) - 1, (datesplit[2] * 1) - number)
    // const dateObj = nextdate.toLocaleDateString()
    const dateObj = `${ nextdate.getFullYear() }/${ nextdate.getMonth() + 1 }/${ nextdate.getDate() }`
    const time = dateObj.replace(/\//g, '-')
    const m = `${ dateObj.split('/')[1] > 9 ? dateObj.split('/')[1] : `0${ dateObj.split('/')[1] }` }`
    const d = dateObj.split('/')[2] > 9 ? dateObj.split('/')[2] : `0${ dateObj.split('/')[2] }`
    const t = `${ dateObj.split('/')[0] }-${ m }-${ d }`
    const dateShow = `${ m }月${ d }日`
    const weed = week()(moment('day')(time))
    const datestr = moment('x')(time)
    const chooseTime = {
      date: t,
      weed,
      datestr,
      dateShow,
    }
    dispatch({ type: 'CHOOSE_CITY', endDate: chooseTime })
    setStore('huoche_endDate', chooseTime, 'session')
    // console.log('----test3---', chooseTime)
  }
  // 计算结束时间 的日期
  const handleEndTime = (chooseTime, ticketDetails) => {
    const { duration, startTime } = ticketDetails
    const s = startTime.split(':')
    const ss = s[0] * 1 * 60
    const f = s[1] * 1
    const sum = 24 * 60
    const g = (duration * 1) + ss + f
    if (g >= sum) {
      handleSumTime(chooseTime, -1)
    } else {
      dispatch({ type: 'CHOOSE_CITY', endDate: chooseTime })
      setStore('huoche_endDate', chooseTime, 'session')
    }
  }
  return {
    dispatch,
    handleCheckedFn: v => {
      console.log('handleCheckedFn--', v)
      dispatch({ type: 'NOWCHECHED', nowChecked: v })
    },
    handleCheckedChange: reply => {
      console.log('handleCheckedChange---', reply)
    },
    // 这里是指定日期
    handleCalendarDate: res => {
      console.log('handleCalendarDate----', res)
      const { date, datestr } = res
      const ticketDetails = getStore('huoche_details', 'session') ? getStore('huoche_details', 'session') : ''
      const time = `${ date.split('-')[1] }月${ date.split('-')[2] }日`
      const weed = getDateOne(res) ? getDateOne(res) : week()(moment('day')(date))
      const chooseTime = {
        dateShow: time,
        datestr,
        weed,
        date,
      }
      if (ticketDetails) {
        handleEndTime(chooseTime, ticketDetails)
      }
      setStore('huoche_ChooseTime', chooseTime, 'session')
      dispatch({ type: 'CALENDAR_TIME', chooseTime })
      const timearr = getDateArr(chooseTime)
      console.log('timearr---', timearr)
      setStore('huoche_timearr', timearr, 'session')
      // 每当重新设置指定日期，清空展示
      setStore('huoche_chooseArrtime', [], 'session')
      setStore('huoche_alterTime', [], 'session')
      dispatch({ type: 'TIME_CHOOSE_ARR', timearr, chooseArrtime: [], alterTime: [] })
      Mask.closeAll()
    },
    // 这里实时改变备选坐席的
    handleHavechooseTrain: (chooseZuowei, chooseTrain, chooseSeat, startTime, haveChooseZuo) => {
      console.log('handleHavechooseTrain--', chooseZuowei, chooseTrain, chooseSeat, startTime)
      dispatch({ type: 'HAVE_CHOOSE_TRAIN', chooseZuowei, chooseTrain, chooseSeat, startTime })
      if (haveChooseZuo) {
        dispatch({ type: 'MAX_PRICE', haveChooseZuo })
      }
    },
    onChangeTime: time => {
      const ticketDetails = getStore('huoche_details', 'session')
      console.log('onChangeTime---', ticketDetails)
      const chooseCity = getStore('huoche_ChooseCity', 'session')
      dispatch({ type: 'CALENDAR_TIME', chooseTime: time })
      dispatch(seatsDataFn(time, chooseCity, ticketDetails))
    },
    goListFn: () => {
      browserHistory.push('/huoche/list')
    },
    goOrderFn: item => {
      setStore('huoche_seats', item, 'session')
      browserHistory.push('/huoche/order')
    },
    handleSelectTrain: (choosePrice, haveChooseZuo, chooseTrain, searchgoGrab) => {
      console.log('test-handleSelectTrain--', choosePrice, haveChooseZuo, chooseTrain)
      if (chooseTrain && chooseTrain.length === 0 && searchgoGrab) {
        Toast.info('请选择备选车次', 2, null, false)
        return
      }
      if (haveChooseZuo && haveChooseZuo.length === 0 && searchgoGrab) {
        Toast.info('请选择备选坐席', 2, null, false)
        return
      }
      setStore('huoche_packagePrice', choosePrice, 'session')
      const seatsDataGrab = getStore('huoche_seatsData_grab', 'session')
      const details = getStore('huoche_details', 'session')
      const haveChooseZuomaxprice = getStore('huoche_haveChooseZuo', 'session')
      if (seatsDataGrab && seatsDataGrab.price && haveChooseZuomaxprice && haveChooseZuomaxprice.length === 0) {
        setStore('huoche_maxprice', seatsDataGrab.price, 'session')
        console.log('-----test-11233213213-----', seatsDataGrab)
      }
      if (chooseTrain && chooseTrain.length === 0 && details) {
        console.log('chooseTrain----chooseTrain---chooseTrain---00000')
        setStore('huoche_startTime', details, 'session')
        setStore('huoche_maxpriceObj', seatsDataGrab, 'session')
      }
      // 2017-12-14
      // removeStore('huoche_phone', 'session')
      // removeStore('huoche_name', 'session')
      const customerUserId = getStore('customerUserId', 'session')
      if (customerUserId) {
        browserHistory.push('/huoche/ordergrab')
      } else {
        login(err => {
          if (err) {
            console.log(err)
            Toast.info('登录失败，请退出重新登录', 2, null, false)
          } else {
            console.log('我是用户绑定')
            browserHistory.push('/huoche/ordergrab')
          }
        }, true)
      }
    },
    // 处理时间
    handleTimeStart: (alterTime, chooseArrtime) => {
      dispatch({ type: 'TIME_CHOOSE_ARR', chooseArrtime, alterTime })
      console.log('props.propsObj', alterTime, chooseArrtime)
    },
    // 处理套餐
    handleSpeedName: (chooseSpeedname, choosePrice) => {
      console.log('test--chooseSpeedname, choosePrice', chooseSpeedname, choosePrice)
      setStore('huoche_packagePrice', choosePrice, 'session')
      dispatch({
        type: 'SPEED_DATA',
        chooseSpeedname,
        choosePrice,
      })
    },
    // 接收最大价格参数
    handleMaxPrice: (price, maxpriceObj, haveChooseZuo) => {
      console.log('test--最大价格', price, maxpriceObj)
      dispatch({
        type:     'MAX_PRICE',
        maxprice: price,
        maxpriceObj,
        haveChooseZuo,
      })
      if (price > 50) {
        const text = '闪电抢票（¥50/份）'
        setStore('huoche_packagePrice', 50, 'session')
        setStore('huoche_chooseSpeedname', text, 'session')
        dispatch({ type: 'SPEED_DATA', choosePrice: 50, chooseSpeedname: text })
      } else {
        const text = '闪电抢票（¥30/份）'
        setStore('huoche_packagePrice', 30, 'session')
        setStore('huoche_chooseSpeedname', text, 'session')
        dispatch({ type: 'SPEED_DATA', choosePrice: 30, chooseSpeedname: text })
      }
    },
    // 接收备选日期
    // handleChooseArr
  }
}

const mapFunToComponent  = dispatch => ({
  componentWillMount: () => {
    const chooseTime = getStore('huoche_ChooseTime', 'session')
    const timearr = getDateArr(chooseTime)
    const chooseCity = getStore('huoche_ChooseCity', 'session')
    const detailsTrick = getStore('huoche_details', 'session')
    const endDate = getStore('huoche_endDate', 'session')
    let maxprice = getStore('huoche_maxprice', 'session')
    const chooseSeat = getStore('huoche_chooseSeat', 'session')
    const haveChooseZuo = getStore('huoche_haveChooseZuo', 'session')
    const packagePrice = getStore('huoche_packagePrice', 'session')
    let chooseSpeedname = getStore('huoche_chooseSpeedname', 'session')
    const seatsDataGrab = getStore('huoche_seatsData_grab', 'session')
    const chooseTrain = getStore('huoche_chooseTrain', 'session')
    const chooseArrtime = getStore('huoche_chooseArrtime', 'session')
    const alterTime = getStore('huoche_alterTime', 'session')
    let choosePrice = 0
    const searchgoGrab = location.search
    if (packagePrice) {
      choosePrice = packagePrice
    } else if (maxprice && maxprice > 50) {
      choosePrice = 50
      chooseSpeedname = '闪电抢票（¥50/份）'
    } else if (detailsTrick && detailsTrick.price && detailsTrick.price > 50) {
      console.log('---zoulele---1', detailsTrick.price)
      choosePrice = 50
      chooseSpeedname = '闪电抢票（¥50/份）'
      maxprice = detailsTrick.price
    } else if (detailsTrick && detailsTrick.price && detailsTrick.price < 50) {
      console.log('---zoulele---2', detailsTrick.price)
      choosePrice = 30
      chooseSpeedname = '闪电抢票（¥30/份）'
      maxprice = detailsTrick.price
    } else if ((haveChooseZuo && haveChooseZuo.length === 0)) { //  || (chooseTrain && chooseTrain.length === 0)
      choosePrice = 0
      chooseSpeedname = '请选择抢票套餐'
    } else {
      console.log('---zoulele---3')
      choosePrice = 30
      chooseSpeedname = '闪电抢票（¥30/份）'
    }
    // if (packagePrice) {
    //   choosePrice = packagePrice
    //   chooseSpeedname = chooseSpeedname
    // }
    dispatch({ type: 'SPEED_DATA', choosePrice, chooseSpeedname })
    dispatch({ type: 'CHOOSE_CITY', chooseCity, detailsTrick, endDate, searchgoGrab })
    setStore('huoche_timearr', timearr, 'session')
    dispatch({ type: 'TIME_CHOOSE_ARR', timearr, chooseArrtime, alterTime })
    dispatch({ type: 'CALENDAR_TIME', chooseTime })
    dispatch({ type: 'MAX_PRICE', maxprice, haveChooseZuo })
    dispatch({ type: 'HAVE_CHOOSE_TRAIN', chooseSeat, seatsDataGrab, chooseTrain })
    if (chooseTrain && chooseTrain.length === 0 && searchgoGrab) {
      Toast.info('请选择备选车次', 2, null, true)
    }
  },
  componentDidMount: () => {
    console.log('root mounted', dispatch)
  },
  componentWillUnmount: () => {
    // removeStore('TOURISTNUMBER', 'session')
  },
})

export default
connect(mapStateToProps, mapDispatchToProps)(
  wrap(mapFunToComponent)(Grabticket)
)
         
 
 
 
 huoche/containers/moredata.js 
 
import { connect } from 'react-redux'
import { browserHistory } from 'react-router'
import { wrap }    from '@boluome/oto_saas_web_app_component'
import { setStore, getStore } from '@boluome/common-lib'
import Moredata         from '../components/moredata'
import { scheduleslistFn } from '../actions/moredata'
import { removeStoreFn, removeStoreAppMore } from '../actions/order'

let reTop = 0

const mapStateToProps = state => {
  const { moredata, app } = state
  // const { scheduleslist, scheduleslistFilter, chooseTime, chooseCity, botShow,
  //   votesORprice, defiliterObj, filiterObj, isDrua, isTime, gethandleFilter,
  //   oRisTime, oRisDrua, iSconditions, nowChecked, nolist, notOnceList,
  // } = moredata
  const { cityHot, LocationAddr } = app
  return {
    ...moredata,
    cityHot,
    LocationAddr,
  }
}

const mapDispatchToProps = dispatch => {
  return {
    dispatch,
    handleCheckedFn: v => {
      console.log(v)
      if (v === true) {
        dispatch({ type: 'NOWCHECHED', nowChecked: false })
      }
    },
    // 当日历选择了日期，逆向改变props
    onChangeTime: (time, gethandleFilter, filiterObj, scheduleslist) => {
      dispatch({ type: 'CALENDAR_TIME', chooseTime: time })
      const chooseCity = getStore('huoche_ChooseCity', 'session')
      dispatch({ type: 'CHOOSE_CITY', chooseCity })
      dispatch(scheduleslistFn(time, chooseCity, filiterObj, gethandleFilter))
      console.log(scheduleslist)
      // gethandleFilter(filiterObj, scheduleslist)
      // gethandleFilter
    },
    // 监听滚动，底部footer
    handleListScroll: (top, botShow) => {
      // console.log(top, botShow)
      const num = top - reTop
      if (num > 0 && botShow) {
        dispatch({ type: 'BOTTOM_SHOW', botShow: false })
      } else if (num < 0 && !botShow) {
        dispatch({ type: 'BOTTOM_SHOW', botShow: true })
      }
      reTop = top
    },
    // 处理余票或者价格筛选
    handleMoreVotes: votesORprice => {
      if (votesORprice === 'price') {
        dispatch({ type: 'MORE_VOTES_PRICE', votesORprice: 'yupiao' })
      } else {
        dispatch({ type: 'MORE_VOTES_PRICE', votesORprice: 'price' })
      }
    },
    // 处理时长的筛选
    handleDurationFilter: (scheduleslist, isDrua, scheduleslistFilter, gethandleFilter) => {
      let arr = []
      if (gethandleFilter) {
        arr = scheduleslistFilter
      } else {
        arr = scheduleslist
      }
      // const arr = scheduleslist
      for (let i = 0; i < arr.length; i++) {
        for (let j = 0; j < arr.length - 1 - i; j++) {
          const pro = arr[j].duration * 1
          const next = arr[j + 1].duration * 1
          if (pro > next) {
            const temp = arr[j + 1]
            arr[j + 1] = arr[j]
            arr[j] = temp
          }
        }
      }
      if (isDrua === false) {
        isDrua = true
        dispatch({ type: 'KJIN_SCHEDULES', scheduleslistFilter: arr })
      } else {
        isDrua = false
        dispatch({ type: 'KJIN_SCHEDULES', scheduleslistFilter: arr.reverse() })
      }
      dispatch({ type: 'IS_DRUA_TIME', isDrua, oRisDrua: true, oRisTime: false })
    },
    // 处理时间早晚的筛选
    handleTimeFilter: (scheduleslist, isTime, scheduleslistFilter, gethandleFilter) => {
      let timeArr = []
      if (gethandleFilter) {
        timeArr = scheduleslistFilter
      } else {
        timeArr = scheduleslist
      }
      // const timeArr = scheduleslist
      for (let i = 0; i < timeArr.length; i++) {
        for (let j = 0; j < timeArr.length - 1 - i; j++) {
          const pro = timeArr[j].startTime.replace(':', '')
          const next = timeArr[j + 1].startTime.replace(':', '')
          if (pro > next) {
            const temp = timeArr[j + 1]
            timeArr[j + 1] = timeArr[j]
            timeArr[j] = temp
          }
        }
      }
      if (isTime === false) {
        isTime = true
        dispatch({ type: 'KJIN_SCHEDULES', scheduleslistFilter: timeArr })
      } else {
        isTime = false
        dispatch({ type: 'KJIN_SCHEDULES', scheduleslistFilter: timeArr.reverse() })
      }
      dispatch({ type: 'IS_DRUA_TIME', isTime, oRisTime: true, oRisDrua: false })
    },
    // 处理多条件筛选的结果渲染
    handleFilterResult: (filiterObj, data, defiliterObj) => {
      dispatch({ type: 'KJIN_SCHEDULES', scheduleslistFilter: data }) // , scheduleslist: data
      console.log('handleFilterResult--defiliterObj-', defiliterObj)
      const arr = ['trainline', 'fromTime', 'toTime', 'fromArr', 'toArr']
      let a = arr.map(o => filiterObj[o].filter(i => i.choose === true))
      a = a.filter(k => k.length > 0)
      if (a.length === 0) {
        dispatch({ type: 'KJIN_FILTEROBJ', filiterObj, iSconditions: false })
      } else {
        dispatch({ type: 'KJIN_FILTEROBJ', filiterObj, iSconditions: true })
      }
      if (data && data.length === 0) {
        dispatch({ type: 'KJIN_SCHEDULES', nolist: false })
      } else {
        dispatch({ type: 'KJIN_SCHEDULES', nolist: true })
      }
      setStore('huoche_filiterObj', filiterObj, 'session')
    },
    // 这里是为了获取到筛选的方法---即可以调用
    filterFn: (fun, obj) => {
      console.log('getfunction', fun, obj)
      dispatch({ type: 'GET_FILTER_FN', gethandleFilter: fun })
      setStore('huoche_filterFunction', fun, 'session')
    },
    goListFn: () => {
      browserHistory.push('/huoche/moredata')
    },
    goDetails: (item, ChangeSign) => {
      setStore('huoche_details', item, 'session')
      if (ChangeSign) {
        browserHistory.push('/huoche/details?ChangeSign')
      } else {
        browserHistory.push('/huoche/details')
      }
    },
    // 到抢票页面
    goGrabticket: (chooseTime, chooseCity) => {
      setStore('huoche_ChooseCity', chooseCity, 'session') // 这个是下个页面的列表页需要的
      setStore('huoche_ChooseTime', chooseTime, 'session')
      let withoutDiscountedPric = 5
      const host = location.host
      if (host.indexOf('bsb') < 0) {
        console.log(withoutDiscountedPric)
      } else {
        withoutDiscountedPric = 0
      }
      setStore('huoche_withoutDiscountedPrice', withoutDiscountedPric, 'session') // 抢票需要的手续费
      // 这里是保证新的数据状态
      removeStoreFn()
      removeStoreAppMore()
      browserHistory.push('/huoche/grabticket?goGrab')
    },
    // 变更到站---修改到站地址
    handleChangeStation: (result, city, chooseTime) => {
      console.log('result, result', result.name)
      if (result) {
        const { from } = city
        const chooseCity = {
          from,
          to: result.name,
        }
        dispatch({ type: 'CHOOSE_CITY', chooseCity })
        dispatch(scheduleslistFn(chooseTime, chooseCity))
        setStore('huoche_ChooseCity', chooseCity, 'session')
      }
    },
  }
}

const mapFunToComponent  = (dispatch, state) => ({
  componentWillMount: () => {
    // 判断是改签还是正常下单
    const search = location.search
    console.log('search--', search)
    dispatch({ type: 'CHANGE_URL', ChangeSign: search })
    const chooseTime = getStore('huoche_ChooseTime', 'session')
    if (!state.scheduleslistFilter || state.chooseTime !== chooseTime) { // 这里是处理物理返回键再次加载数据
      console.log('测试回退键问题', state, getStore('huoche_ChooseTime', 'session'))
      const chooseCity = getStore('huoche_ChooseCity', 'session')
      const filiterObj = getStore('huoche_filiterObj', 'session')
      // const gethandleFilter = getStore('huoche_filterFunction', 'session')
      dispatch({ type: 'CALENDAR_TIME', chooseTime })
      if (filiterObj) {
        dispatch({ type: 'KJIN_FILTEROBJ', filiterObj })
      }
      if (search && chooseCity) {
        const { from, to } = chooseCity
        document.title = `${ from }-${ to }(改签)`
      }
      dispatch({ type: 'CHOOSE_CITY', chooseCity })
      dispatch(scheduleslistFn(chooseTime, chooseCity))
    }
  },
  componentDidMount: () => {
    const nowChecked = getStore('huoche_SpeedRail', 'session')
    if (nowChecked) {
      dispatch({ type: 'NOWCHECHED', nowChecked })
    }
  },
})

export default
connect(mapStateToProps, mapDispatchToProps)(
  wrap(mapFunToComponent)(Moredata)
)
         
 
 
 
 huoche/containers/order.js 
 
import { connect } from 'react-redux'
import { browserHistory } from 'react-router'
import { Toast } from 'antd-mobile'
import { wrap }    from '@boluome/oto_saas_web_app_component'
import { getStore, setStore } from '@boluome/common-lib'
import Order         from '../components/order'

// 订单页面的数据请求
import { AccidentFn, OrderSave } from '../actions/order'

const mapStateToProps = state => {
  console.log(state)
  const { order } = state
  return {
    ...order,
  }
}

const mapDispatchToProps = dispatch => {
  return {
    dispatch,
    handleCalendarDate: date => {
      console.log('handleCalendarDate----', date)
    },
    // 处理是否需要保险
    handleNeedAccident: (checked, res) => {
      console.log('handleNeedAccident---', checked)
      let checkAccient = ''
      if (checked) {
        checkAccient = res
      }
      dispatch({ type: 'ORDER_CHECKED', haschecked: checked, checkAccient })
      setStore('huoche_checkAccient', checkAccient, 'session')
      setStore('huoche_haschecked', checked, 'session')
    },
    // 处理购票人信息
    handleChangeTourNum: touristNumer => {
      dispatch({ type: 'TOURISTNUMBER', touristNumer })
    },
    // 同步购票人数
    changeTouristNumer: touristNumer => {
      dispatch({ type: 'TOURISTNUMBER', touristNumer })
    },
    // 处理优惠活动价钱
    handlePromotion: v => {
      dispatch({ type: 'PROMOTION', promotion: v })
    },
    // 处理电话号码
    handleName: v => {
      console.log('name--', v)
      dispatch({ type: 'NAME', name: v })
      setStore('huoche_name', v, 'session')
    },
    // 处理电话号码
    handlePhone: v => {
      console.log('phone--', v)
      dispatch({ type: 'PHONE', phone: v })
      setStore('huoche_phone', v, 'session')
    },
    // 符合保存订单
    handleOrderSave: (promotion, touristNumer, seatsChoose, ticketDetails, phone, chooseTime, name, checkAccient, ChangeSign, details, haschecked) => {
      console.log('dddd', promotion, touristNumer, seatsChoose, ticketDetails, phone, ChangeSign, details)
      if (!name) {
        Toast.info('请填写联系人', 2)
        return
      }
      if (!phone) {
        Toast.info('请填写手机号', 2)
        return
      }

      const tel = phone.replace(/\s/g, '')
      if (!(/^(((13[0-9]{1})|(15[0-9]{1})|(18[0-9]{1})|(17[0-9]{1}))+\d{8})$/.test(tel))) {
        Toast.info('请填写正确手机', 2)
        return
      }
      if (ChangeSign && details) {
        dispatch(OrderSave(promotion, touristNumer, seatsChoose, details, tel, chooseTime, name, checkAccient, ChangeSign, haschecked))
      } else {
        dispatch(OrderSave(promotion, touristNumer, seatsChoose, ticketDetails, tel, chooseTime, name, checkAccient, ChangeSign, haschecked))
      }
    },
    goOrderFn: () => {
      browserHistory.push('/huoche/order')
    },
    handleOrderDetails: () => {
      browserHistory.push('/huoche/orderDetails')
    },
  }
}

const mapFunToComponent  = dispatch => ({
  componentWillMount: () => {
    // 所购买票的信息
    const ticketDetails = getStore('huoche_details', 'session')
    dispatch({ type: 'TICKETDETAILS', ticketDetails })
    // 购买的座位信息
    const seatsChoose = getStore('huoche_seats', 'session')
    dispatch({ type: 'SEATSCHOOSE', seatsChoose })
    // 乘客信息部分
    const touristNumer = getStore('TOURISTNUMBER', 'session')
    if (touristNumer) {
      dispatch({ type: 'TOURISTNUMBER', touristNumer })
    } else {
      setStore('TOURISTNUMBER', [], 'session')
      dispatch({ type: 'TOURISTNUMBER', touristNumer: [] })
    }
    // 日期串联
    const chooseTime = getStore('huoche_ChooseTime', 'session')
    dispatch({ type: 'CALENDAR_TIME', chooseTime })
    // 联系人号码
    const phone = getStore('huoche_phone', 'session')
    dispatch({ type: 'PHONE', phone })
    // 联系人号码
    const name = getStore('huoche_name', 'session')
    dispatch({ type: 'NAME', name })
    // 手续费用的获取
    const withoutDiscountedPrice = getStore('huoche_withoutDiscountedPrice', 'session')
    dispatch({ type: 'WITHOUTDISCOUNTED_PRICE', withoutDiscountedPrice })
    // 保险
    const checkAccient = getStore('huoche_checkAccient', 'session')
    const haschecked = getStore('huoche_haschecked', 'session')
    dispatch({ type: 'ORDER_CHECKED', checkAccient, haschecked })
    // 改签时用到的数据
    const propsObj = getStore('huoche_Change_data', 'session')
    const details = getStore('huoche_details', 'session') ? getStore('huoche_details', 'session') : ''
    const passengersChoose = getStore('huoche_passengersChoose', 'session')
    const seats = getStore('huoche_seats', 'session')
    const ChangeSign = location.search
    const partnerId = getStore('huoche_ChangeSign_partnerId', 'session')
    if (propsObj) {
      dispatch({ type: 'CHANGE_DATA_SIGN', details, propsObj, ChangeSign, passengersChoose, seats, partnerId })
    }
    // 判断是否是包商
    const host = location.host
    if (host.indexOf('bsb') < 0) {
      console.log('不是包商')
      dispatch({ type: 'IS_BSB', isBsb: true })
    } else {
      dispatch({ type: 'IS_BSB', isBsb: false })
      dispatch({ type: 'ORDER_CHECKED', haschecked: false })
      setStore('huoche_haschecked', false, 'session')
    }
    // console.log('propsObj---', propsObj)
  },
  componentDidMount: () => {
    dispatch(AccidentFn())
    // console.log(dispatch, AccidentFn)
  },
})

export default
connect(mapStateToProps, mapDispatchToProps)(
  wrap(mapFunToComponent)(Order)
)
         
 
 
 
 huoche/containers/orderDetails.js 
 
import { connect } from 'react-redux'
import { browserHistory } from 'react-router'
import { wrap }    from '@boluome/oto_saas_web_app_component'
import { getStore, setStore } from '@boluome/common-lib'
import { login } from 'business'
import orderDetails         from '../components/orderDetails'
import { seatsDataFn } from '../actions/details'

const mapStateToProps = state => {
  console.log('--test-orderDetailsorderDetailsorderDetails-', state.orderDetails)
  return {
    ...state.orderDetails,
  }
}

const mapDispatchToProps = dispatch => {
  return {
    dispatch,
    handleCheckedFn: v => {
      console.log('handleCheckedFn--', v)
      dispatch({ type: 'NOWCHECHED', nowChecked: v })
    },
    handleCheckedChange: reply => {
      console.log('handleCheckedChange---', reply)
    },
    onChangeTime: time => {
      const ticketDetails = getStore('huoche_details', 'session')
      console.log('onChangeTime---', ticketDetails)
      const chooseCity = getStore('huoche_ChooseCity', 'session')
      dispatch({ type: 'CALENDAR_TIME', chooseTime: time })
      dispatch(seatsDataFn(time, chooseCity, ticketDetails))
    },
    goListFn: () => {
      browserHistory.push('/huoche/list')
    },
    goOrderFn: item => {
      setStore('huoche_seats', item, 'session')
      browserHistory.push('/huoche/order')
    },
  }
}

const mapFunToComponent  = dispatch => ({
  componentWillMount: () => {
    if (!getStore('customerUserId', 'session')) {
      login(err => {
        if (err) {
          console.log('登录失败')
        } else {
          console.log('登录成功')
        }
      })
    }
    // 以下待清除
    const ticketDetails = getStore('huoche_details', 'session')
    dispatch({ type: 'TICKETDETAILS', ticketDetails })
    if (ticketDetails) {
      dispatch({ type: 'KJIN_SEATSDATA', seatsData: ticketDetails.seats })
      // setStore('huoche_seatsPrice')
    }
    // 购买的座位信息
    const seatsChoose = getStore('huoche_seats', 'session')
    dispatch({ type: 'SEATSCHOOSE', seatsChoose })
    const chooseTime = getStore('huoche_ChooseTime', 'session')
    dispatch({ type: 'CALENDAR_TIME', chooseTime })
    const touristNumer = getStore('TOURISTNUMBER', 'session')
    if (touristNumer) {
      dispatch({ type: 'TOURISTNUMBER', touristNumer })
    } else {
      setStore('TOURISTNUMBER', [], 'session')
    }
    // 清空残留的人员信息
    setStore('huoche_passengersChoose', '', 'session')
    setStore('huoche_ChooseCredentialarr', '', 'session')
  },
  componentDidMount: () => console.log('root mounted', dispatch),
})

export default
connect(mapStateToProps, mapDispatchToProps)(
  wrap(mapFunToComponent)(orderDetails)
)
         
 
 
 
 huoche/containers/ordergrab.js 
 
import { connect } from 'react-redux'
import { browserHistory } from 'react-router'
import { Toast } from 'antd-mobile'
import { wrap, Mask }    from '@boluome/oto_saas_web_app_component'
import { getStore, setStore, week, moment } from '@boluome/common-lib'
import Ordergrab         from '../components/ordergrab'
import getDateOne from '../components/getDateOne'
import getDateArr from '../components/getDateArr'
// 订单页面的数据请求
import { AccidentFn, OrderSaveGrab } from '../actions/order'

const mapStateToProps = state => {
  console.log(state)
  const { ordergrab } = state
  return {
    ...ordergrab,
  }
}

const mapDispatchToProps = dispatch => {
  return {
    dispatch,
    handleCalendarDate: res => {
      console.log('handleCalendarDate----', res)
      const { date, datestr } = res
      const time = `${ date.split('-')[1] }月${ date.split('-')[2] }日`
      const weed = getDateOne(res) ? getDateOne(res) : week()(moment('day')(date))
      const chooseTime = {
        dateShow: time,
        datestr,
        weed,
        date,
      }
      setStore('huoche_ChooseTime', chooseTime, 'session')
      dispatch({ type: 'CALENDAR_TIME', chooseTime })
      const timearr = getDateArr(chooseTime)
      setStore('huoche_timearr', timearr, 'session')
      dispatch({ type: 'TIME_CHOOSE_ARR', timearr })
      Mask.closeAll()
    },
    // 这里实时改变备选坐席的
    handleHavechooseTrain: (chooseZuowei, chooseTrain, chooseSeat, startTime) => {
      dispatch({ type: 'HAVE_CHOOSE_TRAIN', chooseZuowei, chooseTrain, chooseSeat, startTime })
    },
    // 接收最大价格参数
    handleMaxPrice: (price, maxpriceObj, haveChooseZuo) => {
      // setStore(huoche_packagePrice)
      dispatch({
        type:     'MAX_PRICE',
        maxprice: price,
        maxpriceObj,
        haveChooseZuo,
      })
    },
    // 处理套餐
    // handleSpeedName: (chooseSpeedname, packagePrice) => {
    //   console.log('huoche_packagePrice----', chooseSpeedname, packagePrice)
    //   setStore('huoche_packagePrice', packagePrice, 'session')
    //   dispatch({
    //     type: 'SPEED_DATA',
    //     chooseSpeedname,
    //     packagePrice,
    //   })
    // },
    // 处理是否需要保险
    handleNeedAccident: (checked, res) => {
      console.log('handleNeedAccident---', checked, res)
      let checkAccient = ''
      if (checked) {
        checkAccient = res
      }
      dispatch({ type: 'ORDER_CHECKED', haschecked: checked, checkAccient })
      setStore('huoche_checkAccient', checkAccient, 'session')
      setStore('huoche_haschecked', checked, 'session')
    },
    // 处理购票人信息
    handleChangeTourNum: touristNumer => {
      dispatch({ type: 'TOURISTNUMBER', touristNumer })
    },
    // 同步购票人数
    changeTouristNumer: touristNumer => {
      dispatch({ type: 'TOURISTNUMBER', touristNumer })
    },
    // 处理优惠活动价钱
    handlePromotion: v => {
      dispatch({ type: 'PROMOTION', promotion: v })
    },
    // 处理电话号码
    handlePhone: v => {
      console.log('phone--', v)
      dispatch({ type: 'PHONE', phone: v })
      setStore('huoche_phone', v, 'session')
    },
    // 处理联系人姓名
    handleName: v => {
      dispatch({ type: 'NAME', name: v })
      setStore('huoche_name', v, 'session')
    },
    // 接收组件传来的备选日期
    // handleGetchooseTrain:
    // 符合保存订单
    handleOrderSave: (promotion, touristNumer, phone, chooseTime, name, chooseCity, checkAccient, timearr, chooseSeat, chooseArrtime, haveChooseZuo, startTime, haschecked) => {
      console.log('dddd', promotion, touristNumer, phone)
      if (!name) {
        Toast.info('请填写联系人', 2)
        return
      }
      if (!phone) {
        Toast.info('请填写手机号', 2)
        return
      }
      const tel = phone.replace(/\s/g, '')
      if (!(/^(((13[0-9]{1})|(15[0-9]{1})|(18[0-9]{1})|(17[0-9]{1}))+\d{8})$/.test(tel))) {
        Toast.info('请填写正确手机', 2)
        return
      }
      dispatch(OrderSaveGrab(promotion, touristNumer, phone, chooseTime, name, chooseCity, checkAccient, timearr, chooseSeat, chooseArrtime, haveChooseZuo, startTime, haschecked))
    },
    handleOrderDetails: () => {
      browserHistory.push('/huoche/orderDetails')
    },
  }
}

const mapFunToComponent  = dispatch => ({
  componentWillMount: () => {
    // 所购买票的信息
    const ticketDetails = getStore('huoche_details', 'session')
    const seatsDataGrab = getStore('huoche_seatsData_grab', 'session')
    dispatch({ type: 'TICKETDETAILS', ticketDetails, seatsDataGrab })
    // 购买的座位信息
    const seatsChoose = getStore('huoche_seats', 'session')
    dispatch({ type: 'SEATSCHOOSE', seatsChoose })
    // 乘客信息部分
    const touristNumer = getStore('TOURISTNUMBER', 'session')
    if (touristNumer) {
      dispatch({ type: 'TOURISTNUMBER', touristNumer })
    } else {
      setStore('TOURISTNUMBER', [], 'session')
      dispatch({ type: 'TOURISTNUMBER', touristNumer: [] })
    }
    // 日期串联
    const chooseTime = getStore('huoche_ChooseTime', 'session')
    dispatch({ type: 'CALENDAR_TIME', chooseTime })
    // 日期串联
    const chooseCity = getStore('huoche_ChooseCity', 'session')
    // 联系人号码/姓名
    const phone = getStore('huoche_phone', 'session')
    dispatch({ type: 'PHONE', phone })
    const name = getStore('huoche_name', 'session')
    dispatch({ type: 'NAME', name })
    // 手续费用的获取
    const withoutDiscountedPrice = getStore('huoche_withoutDiscountedPrice', 'session')
    dispatch({ type: 'WITHOUTDISCOUNTED_PRICE', withoutDiscountedPrice })
    console.log('test---withoutDiscountedPrice', withoutDiscountedPrice)
    // 抢票需要的价格，按照最大价格计算
    const maxprice = getStore('huoche_maxprice', 'session')
    const maxpriceObj = getStore('huoche_maxpriceObj', 'session')
    dispatch({ type: 'MAX_PRICE', maxprice, chooseCity, maxpriceObj })
    // 总会抢票备选信息
    const timearr = getStore('huoche_timearr', 'session')
    const chooseSeat = getStore('huoche_chooseSeat', 'session')
    const chooseArrtime = getStore('huoche_chooseArrtime', 'session')
    const haveChooseZuo = getStore('huoche_haveChooseZuo', 'session')
    const startTime = getStore('huoche_startTime', 'session')
    const chooseTrain = getStore('huoche_chooseTrain', 'session')
    const packagePrice = getStore('huoche_packagePrice', 'session')
    dispatch({ type: 'GRAB_DATA', timearr, chooseArrtime, haveChooseZuo })
    dispatch({ type: 'HAVE_CHOOSE_TRAIN', chooseSeat, startTime, chooseTrain })
    dispatch({ type: 'SPEED_DATA', packagePrice })
    // 保险
    const checkAccient = getStore('huoche_checkAccient', 'session')
    const haschecked = getStore('huoche_haschecked', 'session')
    dispatch({ type: 'ORDER_CHECKED', checkAccient, haschecked })
    // 判断是否是包商
    const host = location.host
    if (host.indexOf('bsb') < 0) {
      console.log('不是包商')
      dispatch({ type: 'IS_BSB', isBsb: true })
    } else {
      dispatch({ type: 'IS_BSB', isBsb: false })
      dispatch({ type: 'ORDER_CHECKED', haschecked: false })
      setStore('huoche_haschecked', false, 'session')
    }
  },
  componentDidMount: () => {
    dispatch(AccidentFn())
  },
})

export default
connect(mapStateToProps, mapDispatchToProps)(
  wrap(mapFunToComponent)(Ordergrab)
)
         
 
 
 
 huoche/containers/refund.js 
 
import { connect } from 'react-redux'
import { getStore, week, moment, setStore } from '@boluome/common-lib'
import { wrap }    from '@boluome/oto_saas_web_app_component'
import Refund from '../components/refund'

const mapStateToProps = state => {
  const { refund, orderDetails } = state
  console.log('--state--', state)
  return {
    ...orderDetails,
    ...refund,
  }
}

const mapDispatchToProps = dispatch => {
  return {
    dispatch,
  }
}

const mapFunToComponent  = dispatch => ({
  componentWillMount: () => {
    const propsObj = getStore('huoche_Change_data', 'session')
    dispatch({ type: 'CHANGE_DATA', propsObj })
    const { trains } = propsObj
    const { departueDateTime, departureDate } = trains
    const time = `${ departueDateTime.split(' ')[0] }`
    const dateShow = `${ time.split('-')[1] }月${ time.split('-')[2] }日`
    const weed = week()(moment('day')(time))
    const datestr = moment('x')(time)
    console.log('---test---ssss', time, departureDate, dateShow, weed, datestr)
    const chooseTime = {
      dateShow,
      datestr,
      weed,
      date: time,
    }
    setStore('huoche_ChooseTime', chooseTime, 'session')
  },
  componentDidMount: () => {
    // handleClose()
  },
})

export default
connect(mapStateToProps, mapDispatchToProps)(
  wrap(mapFunToComponent)(Refund)
)
         
 
 
 
 huoche/img/add.svg 
 
<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg class="icon" width="200px" height="200.00px" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path fill="#ffab00" d="M560 560h351.808a48 48 0 1 0 0-96H560V112.192a48 48 0 1 0-96 0V464H112.192a48 48 0 1 0 0 96H464v351.808a48 48 0 1 0 96 0V560z" /></svg>         
 
 
 
 huoche/img/choose.svg 
 
<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg class="icon" width="200px" height="200.00px" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path d="M8.972 513.146c0 0 0 0 0 0 0 278.448 225.727 504.174 504.174 504.174 278.448 0 504.174-225.727 504.174-504.174 0 0 0 0 0 0 0-278.448-225.727-504.174-504.174-504.174-278.448 0-504.174 225.727-504.174 504.174z" fill="#ffab00" /><path d="M465.020 600.231l-162.711-162.711-64.169 64.169 226.88 226.88 357.505-357.505-64.169-64.169-293.337 293.337z" fill="#FFFFFF" /></svg>         
 
 
 
 huoche/img/conditions.svg 
 
<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg class="icon" width="200px" height="200.00px" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path fill="#ffffff" d="M716.8 358.4H332.8l128 170.6752v264.3712a25.6 25.6 0 0 1-51.2 0.0768v-247.3984L291.84 389.12c-29.6192-39.4752-8.5248-81.92 40.832-81.92h384.256c49.3568 0 70.5536 42.3168 40.832 81.92L640 546.1248V665.6a25.6 25.6 0 0 1-51.1744-0.0512v-136.448L716.8 358.4z m-8.8064-319.5392a25.6 25.6 0 0 1-19.6096 47.2832A459.264 459.264 0 0 0 512 51.2C257.5104 51.2 51.2 257.5104 51.2 512s206.3104 460.8 460.8 460.8 460.8-206.3104 460.8-460.8c0-61.3376-11.9808-120.96-34.944-176.384a25.6 25.6 0 0 1 47.2832-19.6096A510.7968 510.7968 0 0 1 1024 512c0 282.7776-229.2224 512-512 512S0 794.7776 0 512 229.2224 0 512 0c68.096 0 134.4 13.312 195.9936 38.8608z" /></svg>         
 
 
 
 huoche/img/conditionsh.svg 
 
<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg class="icon" width="200px" height="200.00px" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path fill="#ffab00" d="M716.8 358.4H332.8l128 170.6752v264.3712a25.6 25.6 0 0 1-51.2 0.0768v-247.3984L291.84 389.12c-29.6192-39.4752-8.5248-81.92 40.832-81.92h384.256c49.3568 0 70.5536 42.3168 40.832 81.92L640 546.1248V665.6a25.6 25.6 0 0 1-51.1744-0.0512v-136.448L716.8 358.4z m-8.8064-319.5392a25.6 25.6 0 0 1-19.6096 47.2832A459.264 459.264 0 0 0 512 51.2C257.5104 51.2 51.2 257.5104 51.2 512s206.3104 460.8 460.8 460.8 460.8-206.3104 460.8-460.8c0-61.3376-11.9808-120.96-34.944-176.384a25.6 25.6 0 0 1 47.2832-19.6096A510.7968 510.7968 0 0 1 1024 512c0 282.7776-229.2224 512-512 512S0 794.7776 0 512 229.2224 0 512 0c68.096 0 134.4 13.312 195.9936 38.8608z" /></svg>         
 
 
 
 huoche/img/deletes.svg 
 
<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg class="icon" width="200px" height="200.00px" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path fill="#ffffff" d="M898.56 268.8c-10.24 0-20.48 10.24-20.48 20.48v668.16H153.6v-668.16c0-10.24-10.24-20.48-20.48-20.48s-20.48 10.24-20.48 20.48v688.64c0 10.24 10.24 20.48 20.48 20.48h762.88c10.24 0 20.48-10.24 20.48-20.48v-688.64c2.56-10.24-5.12-20.48-17.92-20.48M977.92 117.76h-266.24l-84.48-87.04c-2.56-2.56-7.68-5.12-15.36-5.12h-176.64c-5.12 0-10.24 2.56-12.8 5.12l-92.16 87.04h-281.6c-10.24 0-20.48 10.24-20.48 20.48s10.24 20.48 20.48 20.48h289.28c5.12 0 10.24-2.56 12.8-5.12l92.16-87.04h161.28l84.48 87.04c2.56 2.56 7.68 5.12 15.36 5.12h276.48c10.24 0 20.48-10.24 20.48-20.48s-12.8-20.48-23.04-20.48"  /><path fill="#ffffff" d="M358.4 826.88v-522.24c0-10.24-10.24-20.48-20.48-20.48s-20.48 10.24-20.48 20.48v522.24c0 10.24 10.24 20.48 20.48 20.48s20.48-7.68 20.48-20.48M535.04 826.88v-522.24c0-10.24-10.24-20.48-20.48-20.48s-20.48 10.24-20.48 20.48v522.24c0 10.24 10.24 20.48 20.48 20.48 12.8 0 20.48-7.68 20.48-20.48M714.24 826.88v-522.24c0-10.24-10.24-20.48-20.48-20.48s-20.48 10.24-20.48 20.48v522.24c0 10.24 10.24 20.48 20.48 20.48 12.8 0 20.48-7.68 20.48-20.48"  /></svg>         
 
 
 
 huoche/img/detailIcon.svg 
 
<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg class="icon" width="200px" height="200.00px" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path fill="#ffab00" d="M890.335385 330.911222c-12.576374-12.416396-32.800753-12.352748-45.248112 0.192662L517.248327 661.951458 184.831931 332.512727c-12.576374-12.447359-32.800753-12.352748-45.280796 0.192662-12.447359 12.576374-12.352748 32.831716 0.192662 45.280796l353.311652 350.112082c0.543583 0.543583 1.247144 0.672598 1.792447 1.183497 0.127295 0.127295 0.159978 0.287273 0.287273 0.416288 6.239161 6.175514 14.399785 9.280473 22.527725 9.280473 8.224271 0 16.479505-3.168606 22.720387-9.471415l350.112082-353.311652C902.975407 363.615643 902.880796 343.360301 890.335385 330.911222z" /></svg>         
 
 
 
 huoche/img/hong.svg 
 
<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg class="icon" width="200px" height="200.00px" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path d="M192 0h640a192 192 0 0 1 192 192v640a192 192 0 0 1-192 192H192a192 192 0 0 1-192-192V192a192 192 0 0 1 192-192z" fill="#FF4848" /><path d="M223.168 654.496l-20-60c15.008-9.984 30.016-24.992 44.992-44.992a528 528 0 0 0 49.984-70.016c-43.36 0-75.008 2.496-95.008 7.488l-17.504-57.504c13.312-8.32 25.824-23.328 37.504-44.992 35.008-58.304 63.328-111.616 84.992-160l64.992 20a2677.856 2677.856 0 0 1-107.488 180c30.016 0 53.312-0.8 70.016-2.496 15.008-24.992 29.152-49.984 42.496-75.008l62.496 30.016c-58.368 88.384-106.688 158.368-144.992 209.984 21.632-3.328 62.496-7.488 122.496-12.512a547.04 547.04 0 0 0-2.496 55.008c-53.344 4.992-100.864 9.984-142.496 15.008-18.336 5.024-34.976 8.384-49.984 10.016z m-24.992 130.016l-10.016-62.528c73.312-8.32 149.152-19.136 227.488-32.512a801.44 801.44 0 0 0-2.496 62.496c-8.352 0-20 0.8-35.008 2.496l-179.968 30.048z m237.504-442.496V276.992h337.472v64.992h-135.008v387.488h155.008v57.504H415.68v-57.504h154.976V342.016h-134.976z" fill="#FFFFFF" /></svg>         
 
 
 
 huoche/img/jian.svg 
 
<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg class="icon" width="200px" height="200.00px" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path fill="#ff6e19" d="M475.722 544.586l46.918 0 0 96.307-46.918 0 0-96.307ZM808.977 66.022 215.022 66.022c-82.843 0-150 67.157-150 150l0 591.956c0 82.844 67.157 150 150 150l593.954 0c82.844 0 150-67.156 150-150L958.976 216.022C958.977 133.18 891.82 66.022 808.977 66.022zM688.091 226.034c14.815 14.816 34.571 37.041 59.265 66.673-13.195 9.878-25.542 19.755-37.041 29.633-18.134-26.314-37.04-48.539-56.796-66.673C666.676 244.168 678.213 234.291 688.091 226.034zM273.232 295.177c27.974 44.449 51.857 83.149 71.612 116.062-14.816 8.257-30.481 18.945-46.918 32.102-8.257-21.375-31.292-60.886-69.143-118.531C245.22 313.312 260.036 303.434 273.232 295.177zM213.966 690.28c19.755-24.694 37.427-52.667 53.092-83.959 15.626-31.254 30.019-65.015 43.214-101.246 14.816 11.537 29.633 21.415 44.449 29.632-18.135 32.951-36.231 67.523-54.327 103.715-18.135 36.23-31.292 64.204-39.511 83.96C244.41 707.566 228.783 696.878 213.966 690.28zM431.273 460.626l0-39.51 130.878 0 0 39.51L431.273 460.626zM433.743 507.545 564.62 507.545c-1.658 19.755-2.469 49.388-2.469 88.898 0 37.89 0.811 64.204 2.469 79.021L433.743 675.464c1.621-23.035 2.469-49.388 2.469-79.021C436.212 565.19 435.363 535.558 433.743 507.545zM772.05 771.771c-13.196 18.096-29.633 21.376-49.388 9.878-19.756-11.537-46.108-45.299-79.021-101.246-32.951 42.829-70.803 80.642-113.593 113.593-11.536-16.476-23.884-29.633-37.041-39.511 42.79-19.755 85.58-60.886 128.409-123.47-24.694-64.204-38.7-151.443-41.98-261.756L404.11 369.259l0 143.225c3.28 115.251-18.135 209.899-64.204 283.981-13.196-11.537-29.633-20.604-49.388-27.164 27.974-34.571 46.918-77.786 56.796-129.643 9.877-51.857 14.816-109.04 14.816-171.624 0-62.545-0.849-108.653-2.47-138.286l217.307 0c-1.659-29.633-3.318-63.355-4.939-101.245 18.097 1.659 36.192 2.469 54.327 2.469-3.318 13.196-4.938 46.108-4.938 98.776l51.857 0c27.974 0 59.265-0.81 93.837-2.469l0 44.449c-31.292-1.621-61.735-2.47-91.368-2.47l-51.857 0c-1.659 77.4 7.408 149.013 27.164 214.838 26.314-49.389 46.069-103.715 59.265-162.98 16.438 9.877 33.723 17.286 51.857 22.225-8.257 18.135-21.414 47.768-39.51 88.898-18.135 41.169-35.421 76.551-51.857 106.184 26.314 51.047 46.494 80.68 60.5 88.898 13.968 8.219 25.929-12.347 35.807-61.735 8.218 8.258 22.225 16.476 41.979 24.694C797.554 726.511 785.207 753.636 772.05 771.771z" /></svg>         
 
 
 
 huoche/img/jiantext.svg 
 
<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg class="icon" width="200px" height="200.00px" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path fill="#ff6e19" d="M475.722 544.586l46.918 0 0 96.307-46.918 0 0-96.307ZM808.977 66.022 215.022 66.022c-82.843 0-150 67.157-150 150l0 591.956c0 82.844 67.157 150 150 150l593.954 0c82.844 0 150-67.156 150-150L958.976 216.022C958.977 133.18 891.82 66.022 808.977 66.022zM688.091 226.034c14.815 14.816 34.571 37.041 59.265 66.673-13.195 9.878-25.542 19.755-37.041 29.633-18.134-26.314-37.04-48.539-56.796-66.673C666.676 244.168 678.213 234.291 688.091 226.034zM273.232 295.177c27.974 44.449 51.857 83.149 71.612 116.062-14.816 8.257-30.481 18.945-46.918 32.102-8.257-21.375-31.292-60.886-69.143-118.531C245.22 313.312 260.036 303.434 273.232 295.177zM213.966 690.28c19.755-24.694 37.427-52.667 53.092-83.959 15.626-31.254 30.019-65.015 43.214-101.246 14.816 11.537 29.633 21.415 44.449 29.632-18.135 32.951-36.231 67.523-54.327 103.715-18.135 36.23-31.292 64.204-39.511 83.96C244.41 707.566 228.783 696.878 213.966 690.28zM431.273 460.626l0-39.51 130.878 0 0 39.51L431.273 460.626zM433.743 507.545 564.62 507.545c-1.658 19.755-2.469 49.388-2.469 88.898 0 37.89 0.811 64.204 2.469 79.021L433.743 675.464c1.621-23.035 2.469-49.388 2.469-79.021C436.212 565.19 435.363 535.558 433.743 507.545zM772.05 771.771c-13.196 18.096-29.633 21.376-49.388 9.878-19.756-11.537-46.108-45.299-79.021-101.246-32.951 42.829-70.803 80.642-113.593 113.593-11.536-16.476-23.884-29.633-37.041-39.511 42.79-19.755 85.58-60.886 128.409-123.47-24.694-64.204-38.7-151.443-41.98-261.756L404.11 369.259l0 143.225c3.28 115.251-18.135 209.899-64.204 283.981-13.196-11.537-29.633-20.604-49.388-27.164 27.974-34.571 46.918-77.786 56.796-129.643 9.877-51.857 14.816-109.04 14.816-171.624 0-62.545-0.849-108.653-2.47-138.286l217.307 0c-1.659-29.633-3.318-63.355-4.939-101.245 18.097 1.659 36.192 2.469 54.327 2.469-3.318 13.196-4.938 46.108-4.938 98.776l51.857 0c27.974 0 59.265-0.81 93.837-2.469l0 44.449c-31.292-1.621-61.735-2.47-91.368-2.47l-51.857 0c-1.659 77.4 7.408 149.013 27.164 214.838 26.314-49.389 46.069-103.715 59.265-162.98 16.438 9.877 33.723 17.286 51.857 22.225-8.257 18.135-21.414 47.768-39.51 88.898-18.135 41.169-35.421 76.551-51.857 106.184 26.314 51.047 46.494 80.68 60.5 88.898 13.968 8.219 25.929-12.347 35.807-61.735 8.218 8.258 22.225 16.476 41.979 24.694C797.554 726.511 785.207 753.636 772.05 771.771z" /></svg>         
 
 
 
 huoche/img/jiantexts.svg 
 
<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg class="icon" width="200px" height="200.00px" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path fill="#ff6e19" d="M475.722 544.586l46.918 0 0 96.307-46.918 0 0-96.307ZM808.977 66.022 215.022 66.022c-82.843 0-150 67.157-150 150l0 591.956c0 82.844 67.157 150 150 150l593.954 0c82.844 0 150-67.156 150-150L958.976 216.022C958.977 133.18 891.82 66.022 808.977 66.022zM688.091 226.034c14.815 14.816 34.571 37.041 59.265 66.673-13.195 9.878-25.542 19.755-37.041 29.633-18.134-26.314-37.04-48.539-56.796-66.673C666.676 244.168 678.213 234.291 688.091 226.034zM273.232 295.177c27.974 44.449 51.857 83.149 71.612 116.062-14.816 8.257-30.481 18.945-46.918 32.102-8.257-21.375-31.292-60.886-69.143-118.531C245.22 313.312 260.036 303.434 273.232 295.177zM213.966 690.28c19.755-24.694 37.427-52.667 53.092-83.959 15.626-31.254 30.019-65.015 43.214-101.246 14.816 11.537 29.633 21.415 44.449 29.632-18.135 32.951-36.231 67.523-54.327 103.715-18.135 36.23-31.292 64.204-39.511 83.96C244.41 707.566 228.783 696.878 213.966 690.28zM431.273 460.626l0-39.51 130.878 0 0 39.51L431.273 460.626zM433.743 507.545 564.62 507.545c-1.658 19.755-2.469 49.388-2.469 88.898 0 37.89 0.811 64.204 2.469 79.021L433.743 675.464c1.621-23.035 2.469-49.388 2.469-79.021C436.212 565.19 435.363 535.558 433.743 507.545zM772.05 771.771c-13.196 18.096-29.633 21.376-49.388 9.878-19.756-11.537-46.108-45.299-79.021-101.246-32.951 42.829-70.803 80.642-113.593 113.593-11.536-16.476-23.884-29.633-37.041-39.511 42.79-19.755 85.58-60.886 128.409-123.47-24.694-64.204-38.7-151.443-41.98-261.756L404.11 369.259l0 143.225c3.28 115.251-18.135 209.899-64.204 283.981-13.196-11.537-29.633-20.604-49.388-27.164 27.974-34.571 46.918-77.786 56.796-129.643 9.877-51.857 14.816-109.04 14.816-171.624 0-62.545-0.849-108.653-2.47-138.286l217.307 0c-1.659-29.633-3.318-63.355-4.939-101.245 18.097 1.659 36.192 2.469 54.327 2.469-3.318 13.196-4.938 46.108-4.938 98.776l51.857 0c27.974 0 59.265-0.81 93.837-2.469l0 44.449c-31.292-1.621-61.735-2.47-91.368-2.47l-51.857 0c-1.659 77.4 7.408 149.013 27.164 214.838 26.314-49.389 46.069-103.715 59.265-162.98 16.438 9.877 33.723 17.286 51.857 22.225-8.257 18.135-21.414 47.768-39.51 88.898-18.135 41.169-35.421 76.551-51.857 106.184 26.314 51.047 46.494 80.68 60.5 88.898 13.968 8.219 25.929-12.347 35.807-61.735 8.218 8.258 22.225 16.476 41.979 24.694C797.554 726.511 785.207 753.636 772.05 771.771z" /></svg>         
 
 
 
 huoche/img/logo.svg 
 
<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg class="icon" width="200px" height="200.00px" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path fill="#ffab00" d="M262.148535 957.698968c-3.195785 0-5.816472-2.619664-5.816472-5.817496l0-33.392528c0-10.086729 7.144724-18.813484 16.98279-20.788465l162.995281-32.530904c22.278399-4.558829 38.436404-24.269753 38.436404-46.926776L474.746538 600.220251c0-14.398942-9.694803-27.215852-23.553439-31.201629l-75.688843-21.60711c-2.51324-0.681522-4.237511-3.015683-4.237511-5.618974l0-72.799026c0-20.735253 11.05887-40.258912 28.851095-50.959625 0.663102-0.404206 1.346671-0.64673 2.028193-0.73678 36.050054-5.143137 72.708975-7.754614 109.062951-7.754614 36.319184 0 72.980151 2.611477 108.974947 7.736195 0.841158 0.10847 1.52575 0.350994 2.207271 0.772596 17.773805 10.69969 28.831652 30.224372 28.831652 50.959625l0 72.799026c0 2.619664-1.759063 4.919033-4.219091 5.637394l-75.707262 21.60711c-13.857613 3.876284-23.552415 16.733103-23.552415 31.201629l0 217.984686c0 22.620184 16.158005 42.36897 38.419008 46.926776l163.011654 32.530904c9.838066 1.974981 16.98279 10.701736 16.98279 20.788465l0 33.392528c0 3.231601-2.585895 5.817496-5.798053 5.817496L262.148535 957.696921zM699.298803 831.776024c-1.828648 0-3.5345-0.861624-4.631484-2.297322l-54.253648-70.914096c-1.058099-1.363044-1.436722-3.158946-1.058099-4.847401 0.375553-1.759063 1.489934-3.158946 3.068895-3.985778 54.828746-27.826765 98.650811-71.595618 126.677121-126.637212 72.313979-142.223189 15.473413-316.724525-126.712937-388.985292-41.11235-20.887726-85.166705-31.479969-130.874723-31.479969-109.602234 0-208.487382 60.636009-258.090103 158.235884-35.044144 68.859297-41.148166 147.249669-17.198707 220.685191 23.912619 73.499991 75.024717 133.246747 143.909597 168.218236 1.52575 0.754177 2.657526 2.227738 3.051499 3.913123 0.3776 1.725294 0 3.447519-1.040702 4.88424l-54.253648 70.877257c-1.130753 1.472538-2.835581 2.300392-4.631484 2.300392-0.969071 0-1.921769-0.252757-2.746554-0.718361-98.507548-55.440683-167.877475-150.624533-190.462866-261.286911-20.771069-101.81078-0.645706-205.641567 56.641021-292.299229 54.936193-83.112929 138.453329-141.405567 235.20079-164.134221 3.87833-0.915859 6.732331-4.210905 7.073092-8.194636 1.293459-15.85306 11.05887-29.838585 25.492604-36.47268 20.00052-2.87242 38.544875-4.084015 56.785308-4.084015 18.277272 0 36.821627 1.195222 55.150064 3.582595 0.557702 0.080841 1.167592 0.260943 1.849114 0.556679 14.255679 6.597255 24.056905 20.582781 25.38618 36.434817 0.322341 3.949962 3.158946 7.262404 7.0383 8.178263 105.45375 24.873504 196.457394 93.318362 249.65192 187.795107 50.968835 90.554412 63.626109 195.562001 35.656081 295.674093-28.006867 100.070136-93.321432 183.26493-183.856401 234.178507C701.167361 831.526337 700.233082 831.776024 699.298803 831.776024z" /></svg>         
 
 
 
 huoche/img/noChoose.svg 
 
<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg class="icon" width="200px" height="200.00px" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path fill="#999999" d="M511.999488 958.708971c-246.715031 0-446.708971-199.999057-446.708971-446.704878 0-246.714008 199.99394-446.714088 446.708971-446.714088 246.707868 0 446.708971 200.00008 446.708971 446.714088C958.70846 758.709915 758.707356 958.708971 511.999488 958.708971zM511.999488 121.128755c-215.872582 0-390.871245 174.995593-390.871245 390.875339 0 215.863373 174.998663 390.867152 390.871245 390.867152 215.865419 0 390.871245-175.003779 390.871245-390.867152C902.870734 296.125371 727.864908 121.128755 511.999488 121.128755z" /></svg>         
 
 
 
 huoche/img/nokong.svg 
 
<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg class="icon" width="200px" height="200.00px" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path fill="#acacae" d="M512 960c246.4 0 448-201.6 448-448s-201.6-448-448-448-448 201.6-448 448 201.6 448 448 448z m0 64c-281.6 0-512-230.4-512-512s230.4-512 512-512 512 230.4 512 512-230.4 512-512 512z"  /></svg>         
 
 
 
 huoche/img/price.svg 
 
<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg class="icon" width="200px" height="200.00px" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path fill="#ffffff" d="M567.782258 409.728154h97.791976c14.207996 0 25.753594 11.366397 25.753593 25.599993 0 14.131196-11.519997 25.599994-25.779193 25.599994h-127.820768v102.399974h127.820768c14.233596 0 25.779194 11.366397 25.779193 25.599994 0 14.131196-11.519997 25.599994-25.779193 25.599993h-127.820768v153.420762c0 14.233596-11.366397 25.779194-25.599994 25.779194-14.131196 0-25.599994-11.494397-25.599994-25.779194v-153.420762h-127.820768a25.548794 25.548794 0 0 1-25.779193-25.599993c0-14.131196 11.519997-25.599994 25.779193-25.599994h127.820768v-102.399974h-127.820768a25.548794 25.548794 0 0 1-25.779193-25.599994c0-14.131196 11.519997-25.599994 25.779193-25.599993h97.766376l-117.375971-136.959966a25.599994 25.599994 0 0 1 38.860791-33.279992l134.169566 156.467161 134.143966-156.518361a25.599994 25.599994 0 1 1 38.911991 33.331192l-117.427171 136.959966h0.0256z m140.211165-370.867108a25.599994 25.599994 0 0 1-19.609595 47.283188A459.647885 459.647885 0 0 0 511.999872 51.200243C257.510336 51.200243 51.199987 257.510592 51.199987 512.000128s206.310348 460.799885 460.799885 460.799885 460.799885-206.310348 460.799885-460.799885a459.724685 459.724685 0 0 0-34.943991-176.383956 25.599994 25.599994 0 0 1 47.283188-19.609595A510.438272 510.438272 0 0 1 1023.999744 512.000128c0 282.777529-229.222343 511.999872-511.999872 511.999872S0 794.777657 0 512.000128 229.222343 0.000256 511.999872 0.000256a510.796672 510.796672 0 0 1 195.993551 38.86079z" /></svg>         
 
 
 
 huoche/img/priceh.svg 
 
<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg class="icon" width="200px" height="200.00px" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path fill="#ffab00" d="M567.782258 409.728154h97.791976c14.207996 0 25.753594 11.366397 25.753593 25.599993 0 14.131196-11.519997 25.599994-25.779193 25.599994h-127.820768v102.399974h127.820768c14.233596 0 25.779194 11.366397 25.779193 25.599994 0 14.131196-11.519997 25.599994-25.779193 25.599993h-127.820768v153.420762c0 14.233596-11.366397 25.779194-25.599994 25.779194-14.131196 0-25.599994-11.494397-25.599994-25.779194v-153.420762h-127.820768a25.548794 25.548794 0 0 1-25.779193-25.599993c0-14.131196 11.519997-25.599994 25.779193-25.599994h127.820768v-102.399974h-127.820768a25.548794 25.548794 0 0 1-25.779193-25.599994c0-14.131196 11.519997-25.599994 25.779193-25.599993h97.766376l-117.375971-136.959966a25.599994 25.599994 0 0 1 38.860791-33.279992l134.169566 156.467161 134.143966-156.518361a25.599994 25.599994 0 1 1 38.911991 33.331192l-117.427171 136.959966h0.0256z m140.211165-370.867108a25.599994 25.599994 0 0 1-19.609595 47.283188A459.647885 459.647885 0 0 0 511.999872 51.200243C257.510336 51.200243 51.199987 257.510592 51.199987 512.000128s206.310348 460.799885 460.799885 460.799885 460.799885-206.310348 460.799885-460.799885a459.724685 459.724685 0 0 0-34.943991-176.383956 25.599994 25.599994 0 0 1 47.283188-19.609595A510.438272 510.438272 0 0 1 1023.999744 512.000128c0 282.777529-229.222343 511.999872-511.999872 511.999872S0 794.777657 0 512.000128 229.222343 0.000256 511.999872 0.000256a510.796672 510.796672 0 0 1 195.993551 38.86079z" /></svg>         
 
 
 
 huoche/img/success.svg 
 
<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg class="icon" width="200px" height="200.00px" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path fill="#ffab00" d="M512 64.08c-247.361 0-447.92 200.538-447.92 447.919 0 247.382 200.559 447.921 447.92 447.921 247.362 0 447.919-200.539 447.919-447.921C959.919 264.619 759.363 64.08 512 64.08zM454.915 749.428c-14.404 14.407-38.385 14.397-52.781 0L219.219 566.551c-14.58-14.564-14.58-38.203 0-52.784 14.581-14.58 38.201-14.58 52.783 0l156.523 156.489L779.118 319.625c14.583-14.581 38.203-14.581 52.783 0 14.58 14.58 14.58 38.202 0 52.783C831.901 372.408 454.915 749.428 454.915 749.428z" /></svg>         
 
 
 
 huoche/img/time.svg 
 
<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg class="icon" width="200px" height="200.00px" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path fill="#ffffff" d="M750.592 559.5392H461.9776V270.9248a29.696 29.696 0 1 1 59.3408 0v229.248h229.248c16.4096 0 29.6704 13.2864 29.6704 29.6704a29.6192 29.6192 0 0 1-29.6448 29.696M706.3808 38.6304a25.1136 25.1136 0 0 1 12.8768 33.7152 25.6 25.6 0 0 1-32.4864 13.4912 457.472 457.472 0 0 0-175.9744-34.944c-253.8496 0-459.8784 206.0288-459.8784 459.8784 0 253.8496 206.0288 459.8784 459.8784 459.8784s459.8784-206.0288 459.8784-459.8784c0-61.312-11.648-120.8064-34.944-175.9744-4.9152-12.8768 1.2288-28.2112 14.72-33.1008a25.5744 25.5744 0 0 1 32.4864 13.4912 510.3616 510.3616 0 0 1 38.6304 195.6096c0 282.0608-228.7104 510.7712-510.7712 510.7712C228.736 1021.568 0.0256 792.8576 0.0256 510.7968 0.0256 228.736 228.736 0.0256 510.7968 0.0256c68.0448-0.0256 134.272 12.8512 195.584 38.6048" /></svg>         
 
 
 
 huoche/img/timeh.svg 
 
<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg class="icon" width="200px" height="200.00px" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path fill="#ffab00" d="M750.592 559.5392H461.9776V270.9248a29.696 29.696 0 1 1 59.3408 0v229.248h229.248c16.4096 0 29.6704 13.2864 29.6704 29.6704a29.6192 29.6192 0 0 1-29.6448 29.696M706.3808 38.6304a25.1136 25.1136 0 0 1 12.8768 33.7152 25.6 25.6 0 0 1-32.4864 13.4912 457.472 457.472 0 0 0-175.9744-34.944c-253.8496 0-459.8784 206.0288-459.8784 459.8784 0 253.8496 206.0288 459.8784 459.8784 459.8784s459.8784-206.0288 459.8784-459.8784c0-61.312-11.648-120.8064-34.944-175.9744-4.9152-12.8768 1.2288-28.2112 14.72-33.1008a25.5744 25.5744 0 0 1 32.4864 13.4912 510.3616 510.3616 0 0 1 38.6304 195.6096c0 282.0608-228.7104 510.7712-510.7712 510.7712C228.736 1021.568 0.0256 792.8576 0.0256 510.7968 0.0256 228.736 228.736 0.0256 510.7968 0.0256c68.0448-0.0256 134.272 12.8512 195.584 38.6048" /></svg>         
 
 
 
 huoche/img/times.svg 
 
<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg class="icon" width="200px" height="200.00px" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path fill="#ffffff" d="M537.599866 332.800173a25.599994 25.599994 0 0 0-51.199988 0v204.799949c0 6.783998 2.687999 13.311997 7.500799 18.099195l153.599961 153.599962a25.599994 25.599994 0 0 0 36.198391-36.198391L537.599866 527.001724V332.800173z m170.393557-293.939127A510.796672 510.796672 0 0 0 511.999872 0.000256C229.222343 0.000256 0 229.222599 0 512.000128s229.222343 511.999872 511.999872 511.999872 511.999872-229.222343 511.999872-511.999872c0-68.095983-13.311997-134.399966-38.86079-195.993551a25.599994 25.599994 0 0 0-47.283188 19.609595A459.724685 459.724685 0 0 1 972.799757 512.000128c0 254.489536-206.310348 460.799885-460.799885 460.799885S51.199987 766.489664 51.199987 512.000128 257.510336 51.200243 511.999872 51.200243c61.337585 0 120.95997 11.980797 176.383956 34.943991a25.599994 25.599994 0 0 0 19.609595-47.283188z" /></svg>         
 
 
 
 huoche/img/timesh.svg 
 
<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg class="icon" width="200px" height="200.00px" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path fill="#ffab00" d="M537.599866 332.800173a25.599994 25.599994 0 0 0-51.199988 0v204.799949c0 6.783998 2.687999 13.311997 7.500799 18.099195l153.599961 153.599962a25.599994 25.599994 0 0 0 36.198391-36.198391L537.599866 527.001724V332.800173z m170.393557-293.939127A510.796672 510.796672 0 0 0 511.999872 0.000256C229.222343 0.000256 0 229.222599 0 512.000128s229.222343 511.999872 511.999872 511.999872 511.999872-229.222343 511.999872-511.999872c0-68.095983-13.311997-134.399966-38.86079-195.993551a25.599994 25.599994 0 0 0-47.283188 19.609595A459.724685 459.724685 0 0 1 972.799757 512.000128c0 254.489536-206.310348 460.799885-460.799885 460.799885S51.199987 766.489664 51.199987 512.000128 257.510336 51.200243 511.999872 51.200243c61.337585 0 120.95997 11.980797 176.383956 34.943991a25.599994 25.599994 0 0 0 19.609595-47.283188z" /></svg>         
 
 
 
 huoche/img/tips.svg 
 
<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg class="icon" width="200px" height="200.00px" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path fill="#999999" d="M510.022656 395.998208c16.329728 0 29.544448-13.27104 29.544448-29.544448 0-16.387072-13.213696-29.582336-29.544448-29.582336-16.330752 0-29.563904 13.195264-29.563904 29.582336C480.458752 382.726144 493.691904 395.998208 510.022656 395.998208zM512.234496 128.072704c-212.194304 0-384.227328 172.022784-384.227328 384.265216 0 212.155392 172.032 384.188416 384.227328 384.188416 212.194304 0 384.206848-172.033024 384.206848-384.188416C896.441344 300.095488 724.4288 128.072704 512.234496 128.072704zM756.395008 756.473856c-31.72352 31.724544-68.656128 56.628224-109.76768 74.017792-42.545152 17.995776-87.76192 27.12064-134.392832 27.12064-46.631936 0-91.848704-9.124864-134.396928-27.12064-41.114624-17.389568-78.04928-42.294272-109.775872-74.018816-31.725568-31.72352-56.630272-68.65408-74.021888-109.763584-17.995776-42.541056-27.12064-87.749632-27.12064-134.372352 0-46.644224 9.124864-91.870208 27.121664-134.423552 17.390592-41.119744 42.295296-78.057472 74.021888-109.785088 31.725568-31.726592 68.6592-56.63232 109.774848-74.022912 42.546176-17.9968 87.763968-27.12064 134.396928-27.12064 46.631936 0 91.848704 9.124864 134.391808 27.12064 41.112576 17.390592 78.04416 42.295296 109.76768 74.022912 31.72352 31.727616 56.626176 68.665344 74.015744 109.785088 17.994752 42.553344 27.118592 87.780352 27.118592 134.424576 0 46.62272-9.12384 91.833344-27.117568 134.373376C813.021184 687.819776 788.119552 724.750336 756.395008 756.473856zM521.889792 453.047296 502.213632 453.047296c-5.040128 0-10.079232 1.924096-13.9264 5.77024-3.847168 3.847168-5.77024 8.896512-5.77024 13.935616l0 196.922368c0 5.039104 1.923072 10.078208 5.77024 13.925376s8.886272 5.771264 13.9264 5.771264l19.67616 0c5.040128 0 10.079232-1.924096 13.9264-5.771264s5.77024-8.886272 5.77024-13.925376L541.586432 472.753152c0-5.039104-1.923072-10.088448-5.77024-13.935616C531.968 454.971392 526.92992 453.047296 521.889792 453.047296z" /></svg>         
 
 
 
 huoche/img/tipsOrgan.svg 
 
<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg class="icon" width="200px" height="200.00px" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path fill="#ffab00" d="M513.28 64c246.7328 0 446.72 199.9872 446.72 446.72S760.0128 957.44 513.28 957.44 66.56 757.4528 66.56 510.72 266.5472 64 513.28 64z m383.8976 446.72c0-51.8144-10.0864-102.0928-30.208-149.4016-19.2512-45.7728-47.0016-86.8864-82.2784-122.112a382.6688 382.6688 0 0 0-122.0096-82.2784c-47.3088-20.0192-97.5872-30.1056-149.4016-30.1056h-0.0512c-51.8144 0-102.0416 10.0864-149.4528 30.208a381.52704 381.52704 0 0 0-122.0096 82.2784 384.3328 384.3328 0 0 0-82.2784 122.0096c-20.0192 47.3088-30.1568 97.5872-30.1568 149.4016a380.38528 380.38528 0 0 0 30.2592 149.4528 382.3104 382.3104 0 0 0 82.2784 122.0608 383.488 383.488 0 0 0 122.0096 82.2784c47.3088 20.0192 97.5872 30.1056 149.4016 30.1056s102.0928-10.0864 149.4528-30.208a382.3104 382.3104 0 0 0 122.0608-82.2784 383.488 383.488 0 0 0 82.2784-122.0096c20.0192-47.3088 30.1056-97.5872 30.1056-149.4016zM552.5504 717.4656v0.0512c0 21.7088-17.5616 39.2704-39.2704 39.2704s-39.2704-17.5616-39.2704-39.2704 17.5616-39.2704 39.2192-39.3216c21.7088 0 39.3216 17.5616 39.3216 39.2704zM548.1984 265.5744v321.9968c0 19.2512-15.616 34.8672-34.9184 34.8672v-0.0512a34.8416 34.8416 0 0 1-34.9184-34.816V265.5744c0-19.2512 15.616-34.9184 34.9184-34.9184s34.9184 15.6672 34.9184 34.9184z" /></svg>         
 
 
 
 huoche/img/transform.svg 
 
<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg class="icon" width="200px" height="149.93px" viewBox="0 0 1366 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path fill="#cccccc" d="M928.4544 364.885333 928.4544 364.885333 928.4544 364.885333l-86.926933-86.926933c-7.1552-7.1552-19.389867-2.088533-19.389867 8.029867l0 67.5392c0 6.272-5.083733 11.357867-11.357867 11.357867L477.5168 364.885333c-6.272 0-11.357867 5.083733-11.357867 11.357867l0 30.442667c0 6.272 5.083733 11.357867 11.357867 11.357867l476.674133 0c10.1184 0 15.185067-12.234667 8.032-19.389867L928.4544 364.885333 928.4544 364.885333zM503.1872 589.4272 503.1872 589.4272 503.1872 589.4272l86.926933 86.926933c7.1552 7.1552 19.389867 2.088533 19.389867-8.029867l0-67.5392c0-6.272 5.085867-11.357867 11.357867-11.357867l333.277867 0c6.272 0 11.357867-5.083733 11.357867-11.357867L965.4976 547.626667c0-6.272-5.085867-11.357867-11.357867-11.357867L477.448533 536.2688c-10.120533 0-15.185067 12.234667-8.029867 19.389867L503.1872 589.4272 503.1872 589.4272zM716.996267 429.860267M715.818667 924.9408c-246.907733 0-447.784533-200.872533-447.784533-447.784533 0-246.907733 200.8768-447.784533 447.784533-447.784533s447.7888 200.8768 447.7888 447.784533C1163.607467 724.068267 962.7264 924.9408 715.818667 924.9408zM715.818667 66.1248c-226.6432 0-411.031467 184.386133-411.031467 411.031467 0 226.638933 184.386133 411.031467 411.031467 411.031467s411.0336-184.3904 411.0336-411.031467C1126.852267 250.513067 942.461867 66.1248 715.818667 66.1248z"  /></svg>         
 
 
 
 huoche/img/xiala.svg 
 
<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg class="icon" width="200px" height="200.00px" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path fill="#ffffff" d="M63.488 326.656l418.816 429.056c16.384 16.384 43.008 16.384 59.392 0l418.816-429.056c25.6-26.624 7.168-70.656-29.696-70.656L93.184 256C56.32 256 37.888 300.032 63.488 326.656L63.488 326.656z" /></svg>         
 
 
 
 huoche/img/zhuyi.svg 
 
<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg class="icon" width="200px" height="200.00px" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path fill="#ffab00" d="M513.28 64c246.7328 0 446.72 199.9872 446.72 446.72S760.0128 957.44 513.28 957.44 66.56 757.4528 66.56 510.72 266.5472 64 513.28 64z m383.8976 446.72c0-51.8144-10.0864-102.0928-30.208-149.4016-19.2512-45.7728-47.0016-86.8864-82.2784-122.112a382.6688 382.6688 0 0 0-122.0096-82.2784c-47.3088-20.0192-97.5872-30.1056-149.4016-30.1056h-0.0512c-51.8144 0-102.0416 10.0864-149.4528 30.208a381.52704 381.52704 0 0 0-122.0096 82.2784 384.3328 384.3328 0 0 0-82.2784 122.0096c-20.0192 47.3088-30.1568 97.5872-30.1568 149.4016a380.38528 380.38528 0 0 0 30.2592 149.4528 382.3104 382.3104 0 0 0 82.2784 122.0608 383.488 383.488 0 0 0 122.0096 82.2784c47.3088 20.0192 97.5872 30.1056 149.4016 30.1056s102.0928-10.0864 149.4528-30.208a382.3104 382.3104 0 0 0 122.0608-82.2784 383.488 383.488 0 0 0 82.2784-122.0096c20.0192-47.3088 30.1056-97.5872 30.1056-149.4016zM552.5504 717.4656v0.0512c0 21.7088-17.5616 39.2704-39.2704 39.2704s-39.2704-17.5616-39.2704-39.2704 17.5616-39.2704 39.2192-39.3216c21.7088 0 39.3216 17.5616 39.3216 39.2704zM548.1984 265.5744v321.9968c0 19.2512-15.616 34.8672-34.9184 34.8672v-0.0512a34.8416 34.8416 0 0 1-34.9184-34.816V265.5744c0-19.2512 15.616-34.9184 34.9184-34.9184s34.9184 15.6672 34.9184 34.9184z" /></svg>         
 
 
 
 huoche/index.js 
 
import React        from 'react'
import { createStore, applyMiddleware } from 'redux'
import { render }   from 'react-dom'
import { Provider } from 'react-redux'
import thunk        from 'redux-thunk'
import reducers     from './reducers'
import Routes       from './routes'
import '../../styles/index.scss'

// 定义根组件
const Root  = () => (
  <Provider store={ createStore(reducers, applyMiddleware(thunk)) }>
    <Routes />
  </Provider>
)
render(<Root />, document.querySelector('#root'))
         
 
 
 
 huoche/reducers/app.js 
 
import { mergeState } from '@boluome/common-lib'


// 默认值设置
const initialState = {
  title:        'huoche',
  chooseCity:   { from: '上海', to: '北京' },
  chooseTime:   '',
  LocationAddr: '上海',
  cityHot:      [
    { id: '1', name: '北京', py: 'beijing' },
    { id: '11', name: '上海', py: 'shanghai' },
    { id: '7', name: '重庆', py: 'chongqingbei' },
    { id: '46', name: '昆明', py: 'kunming' },
    { id: '22', name: '成都', py: 'chengdudong' },
    { id: '67', name: '西安', py: 'xianbei' },
    { id: '40', name: '杭州', py: 'hangzhoudong' },
    { id: '32', name: '哈尔滨', py: 'haerbin' },
    { id: '72', name: '郑州', py: 'zhengzhou' },
    { id: '32', name: '海口', py: 'haikoudong' },
    { id: '29', name: '贵阳', py: 'guiyang' },
    { id: '66', name: '乌鲁木齐', py: 'wulumuqi' },
    { id: '43', name: '济南', py: 'jinan' },
    { id: '64', name: '武汉', py: 'wuhan' },
    { id: '15', name: '天津', py: 'tianjinbei' },
    { id: '53', name: '南京', py: 'nanjing' },
  ],
}

const app = (state = initialState, action) => {
  switch (action.type) {
    case 'NOWCHECHED' :
    case 'HUOCHE_HISTORICAL' :
    case 'CHOOSE_CITY' :
    case 'CALENDAR_TIME' :
    case 'LOCATION_ADDR' :
      return mergeState(state, action)
    default: return state
  }
}

export default app
         
 
 
 
 huoche/reducers/details.js 
 
import { mergeState } from '@boluome/common-lib'

const initialState = {
  title:      'huoche',
  ChangeSign: '',
  noSeats:    true,
}

const details = (state = initialState, action) => {
  switch (action.type) {
    case 'TICKETDETAILS' :
    case 'CALENDAR_TIME' :
    case 'KJIN_SEATSDATA' :
    case 'CHANGE_URL' :
      return mergeState(state, action)
    default: return state
  }
}

export default details
         
 
 
 
 huoche/reducers/grabticket.js 
 
import { mergeState } from '@boluome/common-lib'

const initialState = {
  title:         'huoche',
  timearr:       [],
  maxprice:      0,
  detailsTrick:  '',
  NotEditable:   true,
  seatsDataGrab: '',
  packagePrice:  30,
  chooseSeat:    [],
  chooseTrain:   [],
  searchgoGrab:  '',
}

const grabticket = (state = initialState, action) => {
  switch (action.type) {
    case 'CALENDAR_TIME' :
    case 'TIME_CHOOSE_ARR' :
    case 'CHOOSE_CITY' :
    case 'SPEED_DATA' :
    case 'MAX_PRICE' :
    case 'KJIN_ACCIDENT' :
    case 'HAVE_CHOOSE_TRAIN' :
      return mergeState(state, action)
    default: return state
  }
}

export default grabticket
         
 
 
 
 huoche/reducers/index.js 
 
import { combineReducers } from 'redux'
// 引入reducers
import app  from './app'
import moredata from './moredata'
import details from './details'
import order from './order'
import orderDetails from './orderDetails'
import grabticket from './grabticket'
import ordergrab from './ordergrab'
import refund from './refund'

// 组合reducers
export default combineReducers({
  app,
  moredata,
  details,
  order,
  orderDetails,
  grabticket,
  ordergrab,
  refund,
})
         
 
 
 
 huoche/reducers/moredata.js 
 
import { mergeState } from '@boluome/common-lib'

const initialState = {
  title:        'huoche',
  botShow:      true,
  votesORprice: 'yupiao',
  isDrua:       false,
  isTime:       false,
  filiterObj:   {},
  oRisTime:     false,
  oRisDrua:     false,
  iSconditions: false,
  nowChecked:   false,
  nolist:       true,
  notOnceList:  true,
  ChangeSign:   '',
}

const Moredata = (state = initialState, action) => {
  switch (action.type) {
    case 'HUOCHE_INIT' :
      return initialState
    case 'KJIN_SCHEDULES' :
    case 'CALENDAR_TIME' :
    case 'CHOOSE_CITY' :
    case 'BOTTOM_SHOW' :
    case 'MORE_VOTES_PRICE' :
    case 'KJIN_STATIONS' :
    case 'IS_DRUA_TIME' :
    case 'IS_TIME' :
    case 'KJIN_FILTEROBJ' :
    case 'GET_FILTER_FN' :
    case 'NOWCHECHED' :
    case 'CHANGE_URL' :
      return mergeState(state, action)
    default: return state
  }
}

export default Moredata
         
 
 
 
 huoche/reducers/order.js 
 
import { mergeState } from '@boluome/common-lib'

const initialState = {
  title:      'huoche',
  haschecked: true,
  isBsb:      true,
  propsObj:   {
    trainNumber: '',
    trains:      '',
  },
  seatsChoose: {
    price: 0,
  },
  touristNumer: [],
  ChangeSign:   '',
  promotion:    {
    selectedCouponId: {
      couponId:   '',
      activityId: '',
    },
  },
  chooseTime: {
    date: '',
    weed: '',
  },
}

const order = (state = initialState, action) => {
  switch (action.type) {
    case 'KJIN_ACCIDENT' :
    case 'TOURISTNUMBER' :
    case 'TICKETDETAILS' :
    case 'SEATSCHOOSE' :
    case 'CALENDAR_TIME' :
    case 'ORDER_CHECKED' :
    case 'PROMOTION' :
    case 'PHONE' :
    case 'NAME' :
    case 'WITHOUTDISCOUNTED_PRICE' :
    case 'CHANGE_DATA_SIGN' :
    case 'IS_BSB' :
      return mergeState(state, action)
    default: return state
  }
}

export default order
         
 
 
 
 huoche/reducers/orderDetails.js 
 
import { mergeState } from '@boluome/common-lib'

const initialState = {
  title:       'huoche',
  seatsChoose: {
    price: 0,
  },
}

const orderDetails = (state = initialState, action) => {
  switch (action.type) {
    case 'TICKETDETAILS' :
    case 'KJIN_SEATSDATA' :
    case 'CALENDAR_TIME' :
    case 'SEATSCHOOSE' :
    case 'TOURISTNUMBER' :
      return mergeState(state, action)
    default: return state
  }
}

export default orderDetails
         
 
 
 
 huoche/reducers/ordergrab.js 
 
import { mergeState } from '@boluome/common-lib'

const initialState = {
  title:         'huoche',
  maxprice:      0,
  touristNumer:  [],
  chooseArrtime: [],
  chooseCity:    {},
  haschecked:    true,
  NotEditable:   false,
  isBsb:         true,
  promotion:     {
    selectedCouponId: {
      couponId:   '',
      activityId: '',
    },
  },
}

const ordergrab = (state = initialState, action) => {
  switch (action.type) {
    case 'CALENDAR_TIME' :
    case 'MAX_PRICE' :
    case 'TOURISTNUMBER' :
    case 'PROMOTION' :
    case 'NAME' :
    case 'PHONE' :
    case 'KJIN_ACCIDENT' :
    case 'ORDER_CHECKED' :
    case 'GRAB_DATA' :
    case 'TIME_CHOOSE_ARR' :
    case 'HAVE_CHOOSE_TRAIN' :
    case 'SPEED_DATA' :
    case 'WITHOUTDISCOUNTED_PRICE' :
    case 'TICKETDETAILS' :
    case 'IS_BSB' :
      return mergeState(state, action)
    default: return state
  }
}

export default ordergrab
         
 
 
 
 huoche/reducers/refund.js 
 
import { mergeState } from '@boluome/common-lib'

const initialState = {
  title: 'huoche',
}

const refund = (state = initialState, action) => {
  switch (action.type) {
    case 'CHANGE_DATA' :
      return mergeState(state, action)
    default: return state
  }
}

export default refund
         
 
 
 
 huoche/routes.js 
 
import React from 'react'
import { Router, Route, browserHistory, IndexRoute } from 'react-router'
// 路由配置
const Routes = () => (
  <Router history={ browserHistory } >
    <Route path='/huoche' component={ require('react-router?name=root!./components/root') } >
      <IndexRoute component={ require('react-router?name=app!./containers/app') } />
      <Route path='moredata' component={ require('react-router?name=moredata!./containers/moredata') } />
      <Route path='timelist' component={ require('react-router?name=timelist!./components/timelist') } />
      <Route path='details' component={ require('react-router?name=details!./containers/details') } />
      <Route path='cardtime' component={ require('react-router?name=cardtime!./components/cardtime') } />
      <Route path='order' component={ require('react-router?name=order!./containers/order') } />
      <Route path='ordernotice' component={ require('react-router?name=ordernotice!./components/ordernotice') } />
      <Route path='addtourist' component={ require('react-router?name=addtourist!./components/addtourist') } />
      <Route path='filter' component={ require('react-router?name=filter!./components/filter') } />
      <Route path='orderDetails/:id' component={ require('react-router?name=orderDetails!./containers/orderDetails') } />
      <Route path='ShowPromotion' component={ require('react-router?name=ShowPromotion!./components/ShowPromotion') } />
      <Route path='InvoiceDetails' component={ require('react-router?name=InvoiceDetails!./components/InvoiceDetails') } />
      <Route path='AccidentCom' component={ require('react-router?name=AccidentCom!./components/AccidentCom') } />
      <Route path='AccidentRistMask' component={ require('react-router?name=AccidentRistMask!./components/AccidentRistMask') } />
      <Route path='PassengerInformCom' component={ require('react-router?name=PassengerInformCom!./components/PassengerInformCom') } />
      <Route path='RefundCom' component={ require('react-router?name=RefundCom!./components/RefundCom') } />
      <Route path='RefundInfoCom' component={ require('react-router?name=RefundInfoCom!./components/RefundInfoCom') } />
      <Route path='OrderRefundCom' component={ require('react-router?name=OrderRefundCom!./components/OrderRefundCom') } />
      <Route path='AddPeople' component={ require('react-router?name=AddPeople!./components/AddPeople') } />
      <Route path='grabticket' component={ require('react-router?name=grabticket!./containers/grabticket') } />
      <Route path='alternative' component={ require('react-router?name=alternative!./components/alternative') } />
      <Route path='alternativetime' component={ require('react-router?name=alternativetime!./components/alternativetime') } />
      <Route path='alternativespeed' component={ require('react-router?name=alternativespeed!./components/alternativespeed') } />
      <Route path='stoptime' component={ require('react-router?name=stoptime!./components/stoptime') } />
      <Route path='SelectTrain' component={ require('react-router?name=SelectTrain!./components/SelectTrain') } />
      <Route path='ordergrab' component={ require('react-router?name=ordergrab!./containers/ordergrab') } />
      <Route path='SeatTime' component={ require('react-router?name=SeatTime!./components/SeatTime') } />
      <Route path='ChangeSign' component={ require('react-router?name=ChangeSign!./components/ChangeSign') } />
      <Route path='City' component={ require('react-router?name=City!./containers/City') } />
      <Route path='NoticeMask' component={ require('react-router?name=NoticeMask!./components/NoticeMask') } />
      <Route path='refund' component={ require('react-router?name=refund!./containers/refund') } />
    </Route>
  </Router>
)
export default Routes
         
 
 
 
 huoche/style/AccidentCom.scss 
 
@import "common.scss";

.AccidentCom{
  width: 100%;
  height: 100%;
  position: absolute;
  z-index: 10;
  background:#fff;
  .AccidentComWrap{
    width: 100%;
    height:85%;
    overflow: hidden;
    overflow-y: scroll;
  }
  .AccidentRistWrap{
    .am-list-body div:not(:last-child) .am-list-line:after{
      width:0;
    }
    border-bottom:1px solid #e5e5e5;
  }
  .AccidentTitle{
    span{
      font-size: 28px;
      display: inline-block;
      width: 25%;
    }
    .quxiao{
      color:#999;
      display:none;
    }
    .title{
      color:#222;
      // width: 50%;
      width: 100%;
      text-align: center;
      font-size:32px;
    }
    .queding{
      color:#ffab00;
      text-align: right;
      display:none;
    }
  }
  .AccidentBtn{
    .chooseBtn{
      width: 25%;
      float:left;
      .am-icon{
        vertical-align: top;
      }
      span{
        margin-left:15px;
      }
    }
  }
  .AccidentPayment{
    span{
      font-size:28px;
    }
    .miniN{
      color:#666;
      margin-right:40px;
    }
    .name{
      color:#333;
    }
  }
  .AccidentPeople{
    font-size:28px;
    div{
      margin-bottom:10px;
    }
    .title{
      span:nth-child(1){
        color:#666;
        margin-right:15%;
      }
      span:nth-child(2){
        color:#333;
        font-weight: 500;
      }
    }
    .fenlie{
      span:nth-child(1){
        color:#666;
        margin-right: 20%;
      }
      span:nth-child(2){
        color:#999;
      }
    }
    .tips{
      color:#ffab00;
      font-size:24px;
      margin-bottom:2px;
    }
    .tuibao{
      color:#999;
      font-size:20px;
      display:inline-block;
      padding:6px 8px;
      border:1px solid #999;
      border-radius: 8px;
    }
    .am-list-item .am-list-line {
      .am-list-content{
        width:85%;
      }
      .am-list-extra{
        flex-basis: 22%;
        -webkit-flex-basis: 22%;
      }
    }
  }
  img{
    width: 82px;
    height:82px;
    position:absolute;
    bottom:6%;
    left:calc(50% - 41px);
  }
}
         
 
 
 
 huoche/style/AccidentRistMask.scss 
 
@import "common.scss";

// 火车意外险 须知
.AccidentRistMask{
  width: 100%;
  height:100%;
  padding:32px;
  position: absolute;
  z-index: 10;
  background:#fff;
  .title{
    width: 100%;
    text-align: center;
    font-size:32px;
    color:#222;
    padding:40px 0;
    font-weight: 700;
  }
  .details{
    width: 100%;
    height:78%;
    overflow: hidden;
    overflow-y: scroll;
  }
  p{
    font-size:28px;
    color:#999;
    line-height:35px;
    margin-bottom:15px;
  }
  img{
    width: 82px;
    height:82px;
    position:absolute;
    bottom:6%;
    left:calc(50% - 41px);
  }
}
         
 
 
 
 huoche/style/InvoiceDetails.scss 
 
@import "common.scss";

// 明细部分

.InvoiceDetails {
  position:absolute;
  z-index: 10;
  width: 100%;
  height:100%;
  background:#fff;
  padding:98px;
  .title{
    width: 100%;
    span{
      display:inline-block;
      width: 30%;
    }
    .line{
      height:2px;
      background:#e5e5e5;
      margin-bottom:8px;
    }
    .text{
      width: 40%;
      text-align: center;
      font-size: 32px;
      color:#333;
      font-weight: 700;
    }
  }
  .price{
    width: 100%;
    height:216px;
    line-height: 216px;
    font-size: 36px;
    color:#ffab00;
    text-align: center;
    font-weight: 700;
  }
  .list{
    width: 100%;
    p{
      padding-bottom:30px;
      span{
        font-size:28px;
        color:#666;
      }
      span:nth-child(1){
        color:#333;
      }
      span:nth-child(2){
        float:right;
      }
      .Preferential{
        color:#ff4848;
      }
    }
    .thoughSpan{
      span{
        color:#999;
        text-decoration: line-through;
      }
    }
  }
  img{
    width: 82px;
    height:82px;
    position:absolute;
    bottom:10%;
    left:calc(50% - 41px);
  }
}
         
 
 
 
 huoche/style/OrderRefundCom.scss 
 
@import "common.scss";

.refundlistwrap{
  span{
    font-size:25px;
  }
  .refundTitleL{
    width: 50%;
    height:50px;
    line-height:50px;
    display: inline-block;
    vertical-align: top;
    span{
      margin-right:25px;
    }
  }
  .refundTitleR{
    width: 50%;
    height:50px;
    line-height:50px;
    display: inline-block;
    text-align: right;
    span{
      vertical-align: top;
      margin-left:20px;
    }
  }
  .refundTitleR2{
    width: 100%;
    height:50px;
    line-height:50px;
    display: inline-block;
    // text-align: right;
    span{
      vertical-align: top;
      margin-left:20px;
    }
    .refundTime{
      margin-left:0;
    }
    .refundRight{
      float:right;
    }
  }
  .refundedTips{
    width: 100%;
    margin:15px 0;
    span{
      margin-right:15px;
      color:#666;
    }
    .tips{
      color:#999;
    }
  }
}
.refundCountPrice{
  color:#ff4848;
  margin-right: 10px;
  float:right;
  font-size:28px;
}
.orderrefund{
  font-size:28px;
}
         
 
 
 
 huoche/style/PassengerInformWrap.scss 
 
@import "common.scss";

.PassengerInformWrap{
  width: 100%;
  span{
    display:inline-block;
  }
  .oto{
    font-size:28px;
    color:#333;
  }
  .Orange{
    color:#ffab00;
  }
  .passengerLI{
    // display:inline-block;
    float:left;
    width: 55%;
    line-height:40px;
    // .oto{
    //   width: 70%;
    // }
    .item{
      padding:0 0 20px 0;
      span:nth-child(1){
        margin-right:10%;
      }
    }
  }
  .passengerRI{
    // display:inline-block;
    float:right;
    width: 45%;
    padding-top:4px;
    .item{
      text-align: right;
      padding:0 0 20px 0;
      span:nth-child(2){
        margin-left:8%;
      }
      .zuohao{
        font-size:24px;
      }
      .fentui{
        padding:5px 20px;
        border:1px solid #6e6e6e;
        border-radius: 8px;
        color:#6e6e6e;
        margin-left:10%;
      }
      .zhihui{
        color: #ccc;
        border:1px solid #ccc;
      }
      .hidden{
        display: none;
      }
    }
  }
  .itemChange{
    // width: 100%;
    // height:100%;
    // position:absolute;
    // top:0;
    // left:0;
    // background:rgba(255,255,255,0.5);
  }
}

// 退票部分
.refundWrap{
  .refundListWrap{
    width: 100%;
    height: calc(100% - 200px);
    overflow: hidden;
    overflow-y: scroll;
  }
  .refundList{
    width: 100%;
    height:calc(100% - 199px);
    font-size:28px;
    span{
      margin-right:6%;
    }
    .numStr{
      float:right;
      color:#999;
      margin-right:1%;
    }
    .titleSpan{
      display: inline-block;
      vertical-align: middle;
      margin-right: 5px;
      font-size:28px;
      .am-icon{
        width: 36px;
        height:36px;
      }
    }
    .am-list-body:after{
      border: none;
    }
    .gaitui{
      .am-list-line .am-list-extra{
        flex-basis: 100%;
      }
    }
  }
  .refundFooter{
    width: 100%;
    height: 100px;
    // position:absolute;
    // bottom:0;
    background:#ffab00;
    color:#fff;
    font-size:38px;
    line-height:100px;
    text-align: center;
    font-weight: 700;
  }
  .refundFooterNouse{
    background: #e5e5e5;
  }
  .am-whitespace{
    background:#f5f5f6;
  }
  .noticeBtn{
    width: 100%;
    display: inline-block;
    text-align: left;
  }
}
// 弹窗里面的字体颜色
.am-modal-button-group-v .am-modal-button{
  color:#ffab00;
}

// 改签弹窗样式
.canChangeApplyCom{
  width: 70%;
  height:auto;
  position:absolute;
  z-index: 10;
  background:#fff;
  top:50%;
  transform: translateY(-50%);
  left:15%;
  border-radius: 12px;
  .tips{
    height:auto;
    padding:30px;
    font-size:32px;
    color:#333;
    text-align: center;
  }
  .canChangeBtn{
    width: 100%;
    height:108px;
    text-align: center;
    color:#ffab00;
    border-top:1px solid #f5f5f6;
    font-size:36px;
    line-height: 108px;
  }
}
         
 
 
 
 huoche/style/RefundInfoCom.scss 
 
@import "common.scss";

// 退票弹窗部分
.refundinfoWrap{
  width: 80%;
  // height:70%;
  background:#fff;
  z-index: 10;
  position:absolute;
  left:10%;
  top:50%;
  transform: translateY(-50%);
  border-radius: 12px;
  .main{
    padding:32px;
    // height:calc(100% - 109px);
    // overflow-y: scroll;
    .title{
      width: 100%;
      font-size: 36px;
      color:#333;
      text-align: center;
      padding:14px;
    }
    p{
      width: 100%;
      padding:5px 0;
      span{
        font-size:28px;
      }
      span:nth-child(1){
        text-align: left;
        color:#666;
      }
      .spanR{
        float:right;
        color:#666;
      }
      .hongColor{
        float:right;
        color:#ff4848;
      }
      .sumPrice{
        margin-left:10px;
        font-size:28px;
        color:#666;
        i{
          font-style: normal;
          font-size:24px;
          margin-right:2px;
        }
      }
    }
    .thoughSpan{
      span{
        color:#999;
        text-decoration: line-through;
      }
    }
    .miniTitle{
      font-size:28px;
      color:#333;
      font-weight: 600;
      margin-bottom:30px;
    }
    .textTips{
      margin-top:30px;
      color:#adadad;
      font-size:24px;
      line-height: 34px;
    }
  }
  .miniPrice{
    color:#ffab00;
    font-size:42px;
    width: 100%;
    height:70px;
    line-height:70px;
    text-align: center;
    font-weight: 700;
    i{
      font-style: normal;
      font-size:28px;
    }
  }
  .closeBtnImg{
    height:200px;
    text-align: center;
    border-top: 1px solid #e5e5e5;
    img{
      width: 50px;
      height:50px;
      margin-top:80px;
    }
  }
  .closeBtn{
    width: 100%;
    // position:absolute;
    // bottom:0;
    border-top:1px solid #e5e5e6;
    font-size:36px;
    div{
      text-align: center;
      width: calc(50% - 1px);
      float:left;
      height:108px;
      line-height:108px;
    }
    div:nth-child(1){
      color:#999;
      border-right:1px solid #e5e5e6;
    }
    div:nth-child(2){
      color:#ffab00;
    }
  }
}
         
 
 
 
 huoche/style/SelectTrain.scss 
 
@import 'common.scss';

.SelectListWrap{
  width: 100%;
  height:100%;
  .tips{
    width: 100%;
    height:80px;
    line-height: 80px;
    padding:0px 32px;
    color:#ffab00;
    border-bottom:1px solid #f5f5f6;
    background:#fff;
  }
  .selectList{
    width: 100%;
    height:calc(100% - 180px);
    overflow: hidden;
    overflow-y: scroll;
    .list{
      width: 100%;
      height:auto;
    }
    .listItem{
      width: 100%;
      // height:194px;
      padding:0 32px;
      background:#fff;
      margin-bottom:24px;
      border-bottom: 1px solid #f5f5f6;
      .item_t{
        width: 100%;
        height:134px;
        border-bottom:2px dashed #e5e5e5;
        div{
          width: 25%;
          height:100%;
          float: left;
          padding:20px 0;
          span{
            display:block;
            width: 100%;
            height:50%;
          }
          .addressSpan{
            font-size:28px;
            font-weight: 500;
            color:#666;
          }
          .timeSpan{
            font-size:36px;
            color:#333;
            font-weight: 900;
          }
          .priceSpan{
            font-size:32px;
            color:#ff4848;
            i{
              font-style: normal;
              font-size:24px;
              color:#666;
              margin-left:2px;
            }
            .ii{
              color:#ff4848;
              margin-right:6px;
            }
          }
        }
        .startTime{
          text-align: left;
          // background:pink;
        }
        .decTime{
          text-align: center;
          // background:blue;
          span{
            height:33%;
            font-size:24px;
            color:#666;
            img{
              width: 100%;
              height:60%;
              display: inline-block;
            }
          }
        }
        .endTime{
          text-align: right;
          // background:yellow;
        }
        .price{
          text-align: right;
          // background:red;
        }
      }
      .item_b{
        width: 100%;
        padding-bottom:20px;
        span{
          display:inline-block;
          // width: 20%;
          padding:20px 5% 0 0;
          font-size:20px;
          color:#666;
        }
        .am-icon{
          width: 42px;
          height:42px;
          float:right;
          margin-top:10px;
        }
        .item_bchild{
          display: inline-block;
          width: 85%;
        }
      }
    }
  }
  .Okbtn{
    width: 100%;
    height:99px;
    color:#fff;
    background:#ffab00;
    font-size:38px;
    text-align: center;
    line-height: 99px;
  }
  .nolist{
    width: 100%;
    height:calc(100% - 206px);
    // position: relative;
    img{
      width: 230px;
      // position:absolute;
      // top:30%;
      margin-top:32%;
      margin-left:calc(50% - 115px);
    }
    p{
      width: 100%;
      text-align: center;
      font-size:28px;
      color:#888;
      margin-top:20px;
    }
  }
}
         
 
 
 
 huoche/style/addtourist.scss 
 
@import "common.scss";

.addrBtn{
  color:#ffab00;
  font-size:32px;
  text-align: center;
  .am-icon{
    width: 32px;
    height:32px;
    vertical-align: top;
  }
}
.checkedDelete{
  // background: red;
}
.checkedGoEdit{
  position:absolute;
  width: 80px;
  height:80px;
  // background:pink;
  right:0px;
  top:34px;
}

// 分离出乘客信息个人部分
.passenger_list{
  height: 1.3rem;
  display: flex;
  display: -webkit-flex;
  align-items: center;
  -webkit-align-items: center;
  border-top: 1px solid #e5e5e5;
  background: #ffffff;
  .passenger_icon,.passenger_jump,.passenger_delet{
    width: 1rem;
    overflow: hidden;
    display: flex;
    display: -webkit-flex;
    align-items: center;
    -webkit-align-items: center;
    justify-content: space-around;
    -webkit-justify-content: space-around;
    transition: width 0.3s ease 0s;
  }
  .passenger_delet{
    height: 100%;
    font-size: 0.32rem;
    color: #ffffff;
    background: #fb4c4d;
    span{
      display: inline-block;
      white-space: nowrap;
    }
  }
  .passenger_main{
    flex: auto;
    -webkit-flex: auto;
    font-size: 0.24rem;
    color: #999999;
    transition: all 0.3s ease 0s;
    p{
      line-height: 1.5;
    }
    span{
      font-size: 0.28rem;
      color: #333333;
      margin-right: 0.2rem;
    }
  }
}
         
 
 
 
 huoche/style/alternative.scss 
 
@import 'common.scss';

.alternativeWrap{
  width: 100%;
  height:55%;
  position:absolute;
  overflow: hidden;
  z-index: 10;
  bottom:0;
  background:#fff;
  p{
    padding:20px 32px;
    color:#ffab00;
    font-size:24px;
    line-height:33px;
  }
  .nameSeat{
    display: inline-block;
    width: 35%;
  }
  .price{
    color:#ff4848;
    display: inline-block;
    font-size:28px;
  }
  .time{
    font-size:28px;
    margin-left:5%;
  }
  .am-icon{
    width: 38px;
    height:38px;
  }
  .title{
    height:80px;
    width: 100%;
    line-height: 80px;
    padding: 0 32px;
    border-bottom:1px solid #f5f5f6;
    text-align: center;
    span:nth-child(1){
      float:left;
      color:#666;
      font-size:28px;
    }
    span:nth-child(2){
      color:#333;
      font-size:28px;
    }
    span:nth-child(3){
      float:right;
      color:#ffab00;
      font-size:28px;
    }
  }
  .main{
    width: 100%;
    height:calc(100% - 155px);
    overflow: hidden;
    overflow-y: scroll;
  }
  .mainZuo{
    width: 100%;
    height:calc(100% - 186px);
    overflow: hidden;
    overflow-y: scroll;
  }
}
         
 
 
 
 huoche/style/alternativespeed.scss 
 
@import 'common.scss';

.alternativeSpeedWrap{
  width: 100%;
  height:100%;
  position:absolute;
  overflow: hidden;
  overflow-y: scroll;
  z-index: 10;
  background:#f5f5f6;
  .alternativeMain{
    width: 100%;
    height:calc(100% - 98px);
    overflow: hidden;
    overflow-y: scroll;
  }
  .speedWrap{
    padding: 0 20px;
    .am-list-item .disuPic{
      width: 36px;
      height:auto;
      margin-right: 5%;
    }
    .disuItem{
      margin-bottom: 30px;
      .title{
        font-size:28px;
        color:#aaa;
        font-weight: 700;
      }
      .tip{
        color:#aaa;
        font-size:24px;
      }
    }
  }
  .speedItem{
    background: url(../img/bg.png) no-repeat;
    background-size: 100% 100%;
    margin-bottom:25px;
    padding: 10px 24px;
    min-height: 227px;
    color:#999;
    .name{
      height:82px;
      line-height: 72px;
      border-bottom:2px dashed #ececec;
      font-size:28px;
      vertical-align: top;
      .title{
        font-weight: 700;
        float:left;
      }
      .priceS{
        font-size:24px;
        color:#666;
        margin-left:6%;
        float:left;
      }
      .iconChoose{
        float:right;
        margin-top:20px;
      }
      .shan{
        color:#a1e3ff;
      }
      .jisu{
        color:#ffa1a1;
      }
      .kuaisu{
        color:#ffd272;
      }
    }
    .Multiple{
      padding-top:20px;
    }
    .than{
      padding-top: 10px;
    }
    .tip{
      padding:10px 0 20px 0;
    }
    .ItemPic{
      display:inline-block;
      width: auto;
      height:33px;
      margin-right:20px;
      float:left;
      margin-top:18px;
    }
  }
  p{
    padding:20px 32px;
    color:#ffab00;
    font-size:24px;
    line-height:33px;
    background:#f5f5f6;
  }
  .price{
    color:#ff4848;
    font-size:28px;
    margin-left:25%;
  }
  .time{
    font-size:28px;
    margin-left:5%;
  }
  .am-icon{
    width: 38px;
    height:38px;
  }
  .okBtn{
    width: 100%;
    height:98px;
    background:#ffab00;
    color:#fff;
    position:absolute;
    bottom:0;
    text-align: center;
    font-size:38px;
    line-height: 98px;
  }
}
         
 
 
 
 huoche/style/card.scss 
 
@import "common.scss";

.cardWrap{
  width: 100%;
  height:174px;
  border-bottom:1px solid #e5e5e5;
  background:#fff;
  padding-top:10px;
  .cardItem{
    height:100%;
    width: 33%;
    padding-top:20px;
    float:left;
    text-align: center;
    span{
      width: 100%;
      display:inline-block;
      img{
        display:inline-block;
        width: 100%;
        padding:10px;
      }
    }
    .title{
      font-size:24px;
      color:#666;
    }
    .time{
      font-size:50px;
      font-weight: 900;
    }
    .checi{
      margin-top:8px;
    }
  }
}
.pointTime{
  width: 80%;
  height:70%;
  overflow-y: scroll;
  padding:32px;
  background:#fff;
  position:absolute;
  left:10%;
  top:15%;
  z-index: 11;
  border-radius: 8px;
  .title{
    width: 100%;
    font-size:32px;
    font-weight: 700;
    color:#333;
    text-align: center;
    margin-bottom:32px;
  }
  .menu{
    width: 100%;
    padding-bottom:32px;
    border-bottom: 1px solid #e5e5e5;
    font-size:24px;
    span{
      display:inline-block;
      width: 20%;
      color:#666;
    }
    .menuSpanMid{
      text-align: center;
      width: 30%;
    }
    .menuSpanLast{
      text-align: right;
    }
  }
  .list{
    width: 100%;
    .item{
      width: 100%;
      margin-top:32px;
      span{
        display:inline-block;
        width: 25%;
        color:#666;
        font-size:28px;
      }
      .menuSpanMid{
        text-align: center;
        // width: 30%;
      }
      .menuSpanLast{
        text-align: right;
      }
    }
    .itemOrgan{
      span{
        color:#ffab00;
      }
    }
  }
}
         
 
 
 
 huoche/style/common.scss 
 
*{margin: 0;padding: 0;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);box-sizing: border-box;}

html{height: 100%;overflow: hidden;}

body{height: 100%;background: #f5f5f6;font-family: -apple-system,BlinkMacSystemFont,Helvetica Neue,Helvetica,Arial,PingFang SC,Hiragino Sans GB,Source Han Sans,Noto Sans CJK Sc,Microsoft YaHei,sans-serif;-webkit-font-smoothing:antialiased;overflow-y: scroll;}

ul{list-style: none;}
h2{font-weight: normal;}
input{border: none;outline: none;}
input[type="search"]{-webkit-appearance:none;}
input::-webkit-search-cancel-button {display: none;}
button{outline: none;border: 0;}
img{
    border:none;
}
ul , li {
    list-style: none;
}
body{
  font-size: 24px;
}

@mixin displayfcc {
  display:flex;
  justify-content: center;
  align-items: center;
  @include displayalign;
  -webkit-justify-content: center;
  -ms-justify-content: center;
}
@mixin displayfec {
  display:flex;
  justify-content: flex-end;
  align-items: center;
  @include displayalign;
  -webkit-justify-content: flex-end;
  -ms-justify-content: flex-end;
}
@mixin displayfs-bc {
  display:flex;
  justify-content: space-between;
  align-items: center;
  @include displayalign;
  -webkit-justify-content: space-between;
  -ms-justify-content: space-between;
}
@mixin displayalign {
  -webkit-display:box-flex;
  -webkit-display:flex;
  -webkit-align-items: center;
  -ms-display:flex;
  -ms-align-items:center;
  display: -webkit-flex;
}
// 在这里修改一下乘客编辑里面的出生日期组件
.am-picker-popup-item{
  color:#ffab00;
}
.am-picker-popup-title{
  color:#000;
}
// 首页的切换
.am-switch input[type=checkbox]:checked+.checkbox{
  background:#ffab00;
}
         
 
 
 
 huoche/style/details.scss 
 
@import "common.scss";

.detailsWrap{
  width: 100%;
  height:100%;
  .details{
    width: 100%;
    height:265px;
    background:#fff;
  }
  .seatsItem{
    width: 100%;
    span{
      display:inline-block;
    }
    .seatName{
      font-size:28px;
      color:#333;
      // margin-right: 15%;
      width: 24%;
      min-width:100px;
    }
    .seatNumber{
      font-size:32px;
      color:#999;
    }
    .saleDateTime{
      font-size:22px;
      color:#ffab00;
    }
    .seatPrice{
      font-size:32px;
      color:#ff4848;
      float: right;
    }
    .seatOrder{
      padding:8px 22px;
      // background:#ff4848;
      background:#ffab00;
      color:#fff;
      font-size:24px;
      border-radius: 4px;
      float: right;
      margin-left:50px;
    }
    .noSeat{
      // background:#e5e5e5;
      background: #ff4848;
    }
    .noChange{
      background:#e5e5e5;
    }
  }
  .NoseatcomWrap{
    width: 100%;
    height:100%;
    img{
      margin-top: calc(50% - 100px);
      margin-left: calc(50% - 100px);
      width: 200px;
      height:200px;
    }
  }
  .Noseatcom{
    font-size:28px;
    text-align: center;
    margin-top:4%;
    color:#999;
  }
}
         
 
 
 
 huoche/style/filter.scss 
 
@import "common.scss";

.filterWrap{
  width: 100%;
  height:788px;
  position: absolute;
  z-index: 10;
  bottom:0;
  background:#fff;
  .filterItem{
    background:#ffab00;
    span{
      width: 20%;
      display:inline-block;
      color:#fff;
      font-size:28px;
    }
    .EmptySpan{
      width: 60%;
      text-align: center;
      .am-icon{
        width: 28px;
        height:28px;
        vertical-align: middle;
      }
      .clearS{
        vertical-align: middle;
        margin-left:10px;
      }
    }
    .lastSpan{
      text-align: right;
    }
  }
  .filterMain{
    padding: 0 0.3rem 0.15rem;
    height:700px;
    overflow: scroll;
    h4{
      font-size: 0.24rem;
      color: #999999;
      box-sizing: border-box;
      border-top: 1px solid #e5e5e5;
      padding: 0.15rem 0;
      margin-top: 0.15rem;
      width: 100%;
      &:first-child{
        border: none;
        margin-top: 0.05rem;
        padding: 0.3rem 0 0.15rem;
        margin-top: 0;
      }
    }
    p{
      display: inline-block;
      width: 50%;
      font-size: 0.28rem;
      color:#333333;
      margin: 0.15rem 0;
      span{
        display: inline-block;
        box-sizing: border-box;
        width: 0.3rem;
        height: 0.3rem;
        float: left;
        border: 1px solid #aaaaaa;
        border-radius: 0.05rem;
        margin-right: 0.3rem;
        position: relative;
        top: 0.05rem;
      }
      .am-icon-md{
        width: 0.3rem;
        height: 0.3rem;
      }
    }
    .choose{
      color: #ffab00;
      span{
        background: #ffab00;
        border: none;
      }
    }
  }
}
         
 
 
 
 huoche/style/grabticket.scss 
 
@import 'common.scss';

// .grabTicket{
  .SeatTimeWrap{
    width: 100%;
    height:auto;
    background:#fff;
  }
  .itemoto{
    color:#999;
    margin-left:10%;
    i{
      font-style: normal;
      margin-right:8px;
      color:#333;
    }
  }
  .itemoto2{
    margin-left:10%;
  }
  .helpTips{
    background:#f5f5f6;
    .helptip{
      margin-left:10px;
      font-size:26px;
      color:#999;
    }
  }
  .okGrabticket{
    width: 100%;
    height: 98px;
    background:#ffab00;
    color:#fff;
    text-align: center;
    position: absolute;
    bottom:0;
    font-size: 38px;
    line-height: 98px;
  }
// }

// 抢票确认订单部分
.StationWrap{
  width: 100%;
  height:142px;
  font-size:40px;
  color:#333;
  background: rgba(255,154,0,0.06);
  div{
    display:inline-block;
  }
  .otoft{
    width: 35%;
    line-height:142px;
    text-align: center;
  }
  .myimg{
    width: 30%;
    height:100%;
    text-align: center;
    vertical-align: top;
    img{
      width: 80%;
      margin-top:56px;
    }
  }
  .myimgDetails{
    width: 30%;
    height:100%;
    text-align: center;
    vertical-align: top;
    span{
      font-size:24px;
      display:inline-block;
      margin-top:10px;
      color:#666;
    }
    span:nth-child(1){
      margin-top:30px;
    }
    img{
      width: 80%;
      display:inline-block;
      margin-top:-4px;
      margin-left:10%;
    }
  }
}
// 只有城市的时候展示
.cardWrapnoUse{
  .from{
    font-size:40px;
    color:#333;
    margin-top:14%;
  }
  img{
    margin-top:10px;
  }
}

// 抢票规则说明
.GrabTextWrap{
  width: 90%;
  height: 80%;
  position:absolute;
  z-index: 10;
  background: #fff;
  top:10%;
  left:5%;
  .gTitle{
    font-size:38px;
    font-weight: 700;
    text-align: center;
    height:120px;
    line-height:120px;
  }
  .gMain{
    width: 100%;
    height:calc(100% - 220px);
    overflow: hidden;
    overflow-y: scroll;
    padding:0 32px;
  }
  .tips{
    margin-bottom: 20px;
    color:#333;
  }
  .gBtn{
    width: 100%;
    height:99px;
    border-top:1px solid #f5f5f6;
    text-align: center;
    line-height:99px;
    font-size:32px;
    // color:#ff4848;
    color:#ffab00;
  }
  .pTitle{
    font-size:26px;
    color: #333;
    margin-bottom:10px;
  }
  .text{
    margin-bottom:25px;
    color:#666;
  }
  .texthe{
    margin-bottom:5px;
  }
}
         
 
 
 
 huoche/style/index.scss 
 
@import "common.scss";

.huoCheWrap{
  width: 100%;
  height:100%;
  .chooseAddr{
    width: calc(100% - 64px);
    height:136px;
    margin: 0 32px;
    margin-top:20px;
    background:#fff;
    border-bottom:1px solid #e5e5e5;
    div{
      float:left;
      width: 33.33%;
      height:100%;
      font-size:36px;
      font-weight: 700;
      color:#333;
    }
    .start{
      width: 33.33%;
      padding:40px 0px;
    }
    .transform{
      text-align: center;
      .am-icon-md{
        width: 74px;
        height:74px;
        margin-top:33px;
      }
    }
    .end{
      padding:40px 0px;
      text-align: right;
    }
  }
  .chooseTime{
    span{
      font-size:32px;
      margin-right:14px;
    }
    i{
      font-style:normal;
      color: #999;
      font-size:24px;
    }
    .am-list-line{
      width: 100%;
    }
  }
  .inquireBtn{
    padding:50px 32px;
    background:#f5f5f6;
    .btn{
      width: 100%;
      height:90px;
      text-align: center;
      line-height:90px;
      background:#ffab00;
      color:#fff;
      font-size:38px;
      font-weight: 700;
    }
  }
  .grabTicket{
    background:#f5f5f6;
    width: 100%;
    .GrabBtn{
      margin-left:25%;
      width: 50%;
      height:70px;
      color:#ffab00;
      text-align: center;
      font-size:28px;
      border:1px solid #ffab00;
      line-height:70px;
      border-radius:10px;
    }
  }
  // 历史记录
  .historicalWrap{
    width: 100%;
    padding:50px;
    height:40%;
    // background:pink;
    overflow-y: scroll;
    .title{
      width: 100%;
      height:30px;
      color:#adadad;
      margin-bottom:32px;
      span{
        display:inline-block;
        float:left;
        width: 30%;
        font-size:28px;
      }
      .line{
        margin-top:15px;
        height:2px;
        background:#adadad;
      }
      .text{
        width: 40%;
        text-align: center;
      }
    }
    .history{
      width: 100%;
      color:#ababab;
      font-size: 28px;
      margin-bottom:15px;
      text-align: center;
      span{
        text-align: center;
        display: inline-block;
        width: 100%;
        height:45px;
      }
    }
    .clearBtn{
      font-size:28px;
      color:#666;
      text-align: center;
    }
  }
  .am-list-body:after{
    border: none;
  }
}
         
 
 
 
 huoche/style/list.scss 
 
@import "common.scss";

.ListPageWrap{
  width: 100%;
  height:100%;
  .goGrabBtn{
    width: 100%;
    height:88px;
    color:#ffab00;
    text-align: center;
    line-height:88px;
    font-size:32px;
    background:#fff;
    margin-bottom:20px;
    border-top: 1px solid #f5f5f6;
  }
  .timeList{
    margin: 0;
  }
  .listWrap{
    width: 100%;
    height:calc(100% - 197px);
    overflow: hidden;
    overflow-y: scroll;
    .list{
      width: 100%;
      height:auto;
    }
    .nolist{
      width: 100%;
      height:calc(100% - 206px);
      // position: relative;
      img{
        width: 230px;
        // position:absolute;
        // top:30%;
        margin-top:32%;
        margin-left:calc(50% - 115px);
      }
      p{
        width: 100%;
        text-align: center;
        font-size:28px;
        color:#888;
        margin-top:20px;
      }
    }
  }
  .listItem{
    width: 100%;
    // height:194px;
    padding:0 32px;
    background:#fff;
    margin-bottom:24px;
    .item_t{
      width: 100%;
      height:134px;
      border-bottom:2px dashed #e5e5e5;
      div{
        width: 25%;
        height:100%;
        float: left;
        padding:20px 0;
        span{
          display:block;
          width: 100%;
          height:50%;
        }
        .addressSpan{
          font-size:28px;
          font-weight: 500;
          color:#666;
        }
        .timeSpan{
          font-size:36px;
          color:#333;
          font-weight: 900;
        }
        .priceSpan{
          font-size:32px;
          color:#ff4848;
          i{
            font-style: normal;
            font-size:24px;
            color:#666;
            margin-left:2px;
          }
          .ii{
            color:#ff4848;
            margin-right:6px;
          }
        }
        .grabSpan{
          color:#fff;
          width: 60%;
          height:40%;
          line-height:36px;
          float:right;
          text-align: center;
          border-radius: 6px;
          background:#ffab00;
        }
      }
      .startTime{
        text-align: left;
        // background:pink;
      }
      .decTime{
        text-align: center;
        // background:blue;
        span{
          height:33%;
          font-size:24px;
          color:#666;
          img{
            width: 100%;
            height:60%;
            display: inline-block;
          }
        }
      }
      .endTime{
        text-align: right;
        // background:yellow;
      }
      .price{
        text-align: right;
        // background:red;
      }
    }
    .item_b{
      width: 100%;
      padding-bottom:20px;
      span{
        display:inline-block;
        // width: 20%;
        padding:20px 5% 0 0;
        font-size:20px;
        color:#666;
      }
    }
  }
  .Conditions{
    width: 100%;
    padding:13px 32px 0 32px;
    height:98px;
    position:fixed;
    bottom:0;
    background:rgba(0,0,0,0.7);
    color:#fff;
    transition: all 0.3s ease 0s;
    div{
      width: 25%;
      float:left;
      text-align: center;
      span{
        font-size:24px;
        width: 100%;
        display:inline-block;
        i{
          font-style: normal;
        }
      }
      .price{
        i:nth-child(2){
          color:#ffab00;
        }
      }
      .votes{
        i:nth-child(1){
          color:#ffab00;
        }
      }
    }
    .item{
      color:#ffab00;
    }
  }
}
         
 
 
 
 huoche/style/order.scss 
 
@import "common.scss";

.orderWrap{
  width: 100%;
  height:100%auto;
  .orderMain{
    width: 100%;
    height:calc(100% - 99px);
    overflow: hidden;
    overflow-y: scroll;
    .accidenRist{
      .am-list-line{
        min-height:148px;
      }
    }
    .accidenRist{
      .am-icon{
        position:absolute;
        top:28px;
        margin-left: 10px;
      }
      .am-list-brief{
        font-size:24px;
      }
      .accidenPrice{
        position:absolute;
        right:28%;
        top:60px;
        font-size:28px;
        color:#ff4848;
        font-weight: 600;
        i{
          font-style: normal;
          color:#999;
        }
      }
    }
    .NoticeBar{
      width: 100%;
      padding:25px 32px;
      background:#fefceb;
      font-size: 24px;
      color:#333;
      line-height: 30px;
      letter-spacing: 2px;
      border-top:1px solid #e5e5e5;
    }
    .am-list-item{
      .am-input-label{
        font-size:28px;
      }
      .am-input-control{
        input{
          font-size:28px;
        }
      }
    }
  }
  .footerWrap{
    width: 100%;
    height:99px;
    background:#fff;
    div{
      float:left;
      height:99px;
    }
    .footerL{
      width: 65%;
      padding:0 32px;
      span{
        display: inline-block;
        width: 100%;
      }
      .priceSum{
        color:#ff4848;
        font-size:28px;
        margin-top:18px;
      }
      .pricePro{
        color:#999;
        font-size:24px;
      }
      .promotion{
        margin-top:34px;
      }
    }
    .footerR{
      width: 35%;
      background:#ffab00;
      color:#fff;
      font-size:36px;
      text-align: center;
      line-height: 99px;
      font-weight: 700;
    }
    .footerSpan{
      background: #e5e5e5;
    }
    .detailWrap{
      height:99px;
      position:absolute;
      right:38%;
      line-height:99px;
      color:#ffab00;
      font-size:24px;
      .am-icon{
        width: 30px;
        height:30px;
        margin-left:10px;
        vertical-align: middle;
      }
    }
  }
}
         
 
 
 
 huoche/style/orderDetails.scss 
 
@import "common.scss";

.orderDetailList{
  width: 100%;
  height:calc(100% - 200px);
  overflow: hidden;
  overflow-y: scroll;
  .cardWrapsuccess{
    background:rgb(255, 251, 242);
  }
  .newcardWrap{
    .grabXuzhi{
      vertical-align: top;
      color:#ffab00;
      font-size:28px;
      .am-icon{
        width:34px;
        height:34px;
        margin-right:10px;
      }
    }
    .cardItem{
      .time{
        font-size:63px;
      }
    }
    .cardWrap{
      border: none;
    }
  }
  .orderhao{
    margin-right:10px;
  }
  .qupiaohao{
    width: 100%;
    background:#d8d8d8;
    p{
      text-align: center;
    }
    .qupiaoText{
      opacity:0.48;
      font-size:28px;
      color:#303030;
      padding-top: 18px;
    }
    .qupiaoId{
      font-size:40px;
      color:#575757;
      padding: 12px 0 24px;
      font-weight: 700;
    }
  }
  .phoneList{
    .am-list-item {
      .am-input-control{
        input{
          font-size:28px;
        }
      }
      .am-input-label{
        font-size:28px;
      }
    }
  }
  // 包商上不支持高清方案
  .am-list-item .am-list-line .am-list-extra{
    flex-basis: 50%;
  }
}
.PassengerWrap{
  .passengerL{
    display: inline-block;
    width: 25%;
    vertical-align: top;
  }
  .passengerR{
    display:inline-block;
    width: 70%;
    span{
      margin-bottom:10px;
    }
    span:nth-child(1){
      display:inline-block;
      width: 25%;
      color:#333;
    }
    span:nth-child(2){
      color:#999;
    }
  }
}
.pointTime{
  .itemOrgan{
    span{
      color:#ffab00;
    }
  }
}
// 抢票部分
.grabmessageWrap{
  width: calc(100% - 40px);
  height:auto;
  margin: 0 20px 32px 20px;
  background:#fff;
  // 抢票确认订单部分
  .StationWrap{
    width: 100%;
    height:142px;
    font-size:40px;
    color:#333;
    background: rgba(255,171,0,0.05);
    div{
      display:inline-block;
    }
    .otoft{
      width: 35%;
      line-height:142px;
      text-align: center;
      color:#333;
      font-weight: 700;
      font-size:40px;
    }
    .myimg{
      width: 30%;
      height:100%;
      text-align: center;
      vertical-align: top;
      .mytext{
        font-size:24px;
        color:#ffab00;
        margin-top:36px;
        display:block;
      }
      img{
        width: 80%;
        // margin-top:36px;
      }
    }
  }
  .grabStation{
    width: 100%;
    padding: 24px 32px 5px 32px;
    .item_station{
      padding-bottom:20px;
      word-break:break-all;
      span{
        margin-right: 3%;
        font-size:24px;
        color:#333;
      }
      .itemS{
        margin:0;
      }
      .itemS_t{
        vertical-align: top;
        // width:25%;
        display:inline-block;
        // background:red;
      }
      .item_checi{
        width: 75%;
        display:inline-block;
        span{
          margin-right: 5%;
          display:inline-block;
        }
      }
      .item_time{
        width: 75%;
        display:inline-block;
        // background:pink;
        // display: flex;
        span{
          margin-right: 5%;
          display:inline-block;
        }
      }
    }
  }
}
.grabpeopleWrap{
  width: 100%;
  height:auto;
  background:#fff;
  border-bottom:1px solid #f5f5f6;
  padding: 20px 32px;
  .item_people{
    width: 100%;
    height:50px;
    line-height:50px;
    span{
      display:inline-block;
      font-size:28px;
      color:#333;
    }
    .name{
      width: 20%;
    }
    .type{
      color:#999;
    }
  }
}
// 抢票成功乘客信息展示部分
.grabSuccessWrap{
  background:#fff;
  .grabXuzhi{
    vertical-align: top;
    color:#ffab00;
    font-size:28px;
    .am-icon{
      width:34px;
      height:34px;
      margin-right:10px;
    }
  }
}
.grabstationShow{
  width: 100%;
  height:150px;
  background:rgba(255,171,0,0.05);
  div{
    float:left;
    width: 33.3%;
    height:100%;
    text-align: center;
  }
  span{
    display: block;
  }
  img{
    width: 70%;
  }
  .orderImg{
    width: 100%;
  }
  .oto{
    span:nth-child(1){
      font-size: 24px;
      color:#666;
      margin-top:32px;
    }
    span:nth-child(2){
      font-size: 63px;
      color:#333;
      // margin-top:32px;
      font-weight: 700;
    }
    span:nth-child(3){
      font-size: 24px;
      color:#666;
    }
  }
  .myimg{
    span:nth-child(1){
      margin-top:45px;
      margin-bottom:10px;
      // color:#ffab00;
      color:#666;
    }
    .title{
      color:#666;
      margin-top:10px;
    }
  }
}
         
 
 
 
 huoche/style/ordernotice.scss 
 
@import "common.scss";

.noticeBtn{
  color:#ffab00;
  width: 100%;
  display: inline-block;
}
.noticeMaskwrap{
  width: 100%;
  height:100%;
  background:rgba(255,255,255,1);
  overflow: hidden;
  position:absolute;
  z-index: 10;
  .noticeMask{
    width: 100%;
    height:90%;
    padding:32px;
    overflow: hidden;
    overflow-y: scroll;
    p{
      width: 100%;
      font-size:28px;
      color:#333;
      font-weight: 900;
      padding-bottom:20px;
    }
    div{
      width: 100%;
      font-size:28px;
      color:#999;
      line-height:36px;
      margin-bottom:40px;
      text-align:justify;
    }
    ul{
      padding-left: 42px;
      li{
        list-style-type: disc;
      }
    }
  }
  img{
    width: 62px;
    height:62px;
    position:absolute;
    bottom:2%;
    left:50%;
    margin-left:-31px;
  }
}
         
 
 
 
 huoche/style/showPromotion.scss 
 
@import "common.scss";

.showPromotionWrap{
  width: 100%;
  height:auto;
  .oto{
    span{
      vertical-align: top;
      margin-left:15px;
    }
    .text_oto{
      color:#ff4848;
    }
    .text_s{
      width: 40px;
      height:40px;
    }
    .text_ss{
      width: 40px;
      height:40px;
    }
  }
  .payPrice{
    .hidden{
      display:none
    }
    .show{
      line-height: 40px;
      span{
        margin-right:10px;
        color:#333;
        font-size:28px;
        vertical-align: top;
      }
      span:nth-child(2){
        font-weight: 700;
      }
    }
  }
  .oto{
    .iconoto{
      display: inline-block;
      vertical-align: middle;
      border-radius: .06rem;
      width: .36rem;
      height: .36rem;
      font-size: .26rem;
      color: #fff;
      line-height: .36rem;
      text-align: center;
      margin-right: .12rem;
      margin-left:0;
    }
    .iconspanh{
      background: #ff4848;
    }
    .iconspanj{
      background:#ff6e19;
    }
  }
}
         
 
 
 
 huoche/style/timelist.scss 
 
@import "common.scss";

.timeList{
  width: 100%;
  height:88px;
  padding:16px 30px;
  margin-bottom:20px;
  background:#fff;
  div{
    width: 29%;
    float:left;
    // height:56px;
    line-height:56px;
    img{
      display: inline-block;
      vertical-align: middle;
      width: 30px;
      height:30px;
    }
    span{
      display:inline-block;
      vertical-align: middle;
      margin: 0 10px;
      font-size:28px;
      color:#333;
    }
  }
  // .time_l{
  //
  // }
  .time_c{
    width: 41%;
    border-radius: 4px;
    text-align: center;
    font-size:28px;
    color:#fff;
    background:#ffab00;
    text-align: center;
    .addIcon{
      .am-icon{
        width: 28px;
        margin: -10% 0 0 4%;
      }
    }
  }
  .time_c2{
    width: 41%;
    border-radius: 4px;
    text-align: center;
    font-size:28px;
    color:#333;
    background:#fff;
    text-align: center;
    .addIcon{
      .am-icon{
        width: 28px;
        margin: -10% 0 0 4%;
      }
    }
  }
  .time_r{
    float:right;
    text-align: right;
  }
  .timeoto{
    span{
      color:#999;
    }
  }
}
