         
 
 
 
 qiche/actions/air.js 
 
import { send, getStore } from '@boluome/common-lib'
import { Loading } from '@boluome/oto_saas_web_app_component'
import { keys } from 'ramda'

export const airReset = data => ({
  type: 'AIR_RESET',
  ...data,
})

export const fliterdata = (filiterObjing, defineQcdata) => {
  const obj = {}
  keys(filiterObjing).forEach(o => {
    const a = filiterObjing[o].filter(e => e.choose)
    obj[o] = a.length > 0 ? a[0].name : ''
  })
  const arr = defineQcdata.filter(e => {
    if ((obj.fromArr ? e.departureStation === obj.fromArr : true) &&
    (obj.toArr ? e.arriveStation === obj.toArr : true)) {
      if (obj.dptTime) {
        const timearr = obj.dptTime.split('-')
        const pro = parseInt(timearr[0].replace(':', ''), 10)
        const next = parseInt(timearr[1].replace(':', ''), 10)
        const startime = parseInt(e.departureTime.replace(':', ''), 10)
        if (startime >= pro && startime <= next) {
          return true
        }
        return false
      }
      return true
    }
    return false
  })
  return arr
}


export const getqcdata = filiterObjed => dispatch => {
  const handleClose = Loading()
  const timeLimit = [
    '0:00-6:00',
    '6:00-12:00',
    '12:00-18:00',
    '18:00-24:00',
  ]
  send('/qiche/v1/schedules', {
    channel:       getStore('channel', 'session'),
    departureCity: getStore('qiche_fromCity'),
    arriveCity:    getStore('qiche_toCity'),
    departureDate: getStore('qiche_date', 'session'),
    cityCode:      getStore('qiche_fromCityobj', 'session').cityCode,
    mapType:       'gaode',
    latitude:      '31.56588500',
    longitude:     '121.07500000',
  })
  .then(({ code, data, message }) => {
    handleClose()
    if (code === 0) {
      const { station = '' } = data
      const dptTime = timeLimit.map(e => ({ name: e, choose: false }))
      const fromArr = data.departureStation.map(e => ({ name: e, choose: false }))
      const toArr = data.arriveStation.map(e => ({ name: e, choose: false }))
      const filiterObj = {
        dptTime: filiterObjed ? Object.assign(dptTime, filiterObjed.dptTime) : dptTime,
        fromArr: filiterObjed ? Object.assign(fromArr, filiterObjed.fromArr) : fromArr,
        toArr:   filiterObjed ? Object.assign(toArr, filiterObjed.toArr) : toArr,
      }
      const arr = filiterObjed ? fliterdata(filiterObj, data.schedules) : data.schedules
      dispatch(airReset({
        date:         getStore('qiche_date', 'session'),
        defineQcdata: arr,
        qcdata:       arr,
        defiliterObj: JSON.parse(JSON.stringify(filiterObj)),
        filiterObj,
        station,
      }))
    } else {
      dispatch(airReset({
        defineQcdata: [],
        qcdata:       [],
        defiliterObj: '',
        filiterObj:   '',
        station:      '',
        date:         getStore('qiche_date', 'session'),
      }))
      console.log(message)
    }
  })
}
         
 
 
 
 qiche/actions/app.js 
 

export const appReset = data => ({
  type: 'ADD_RESET',
  ...data,
})
         
 
 
 
 qiche/actions/order.js 
 
export const ordReset = data => ({
  type: 'ORD_RESET',
  ...data,
})
         
 
 
 
 qiche/actions/orderDetails.js 
 
export const odlReset = data => ({
  type: 'ODL_RESET',
  ...data,
})
         
 
 
 
 qiche/components/air.js 
 
import React, { Component } from 'react'
import { Icon } from 'antd-mobile'
import { SlidePage, Mask, Calendar } from '@boluome/oto_saas_web_app_component'
// import { keys } from 'ramda'
import qiche from '../img/qiche.png'
import chezhan from '../img/chezhan.png'
import shi from '../img/shi.png'
import zhong from '../img/zhong.png'
import time from '../img/time.png'
import '../style/air.scss'

const Air = air => {
  console.log(air)
  const { botShow, filiterObj, defiliterObj, defineQcdata = [], date, qcdata = [], station, handleFilternear, handleTime, handleScroll, goOrder } = air
  const modal = keyText => {
    return (
      Mask(
        <SlidePage target='down' showClose={ false }>
          <Filtercom air={ air } keyText={ keyText } />
        </SlidePage>,
        { mask: false, style: { position: 'absolute' } }
      )
    )
  }
  return (
    <div className='air'>
      <div className='qctop'>
        { date && <Airdate date={ date } filiterObj={ filiterObj } handleTime={ handleTime } /> }
      </div>
      <div className='qclistWarp'>
        <div className='qclistw' onScroll={ e => handleScroll(e.target.scrollTop, botShow) }>
          { station && <p className='station'>
            <span><img alt='站点' src={ chezhan } />离我最近的出发车站：<i>{ station }</i></span>
            <span onClick={ () => { handleFilternear(filiterObj, defineQcdata, station) } }>从此站出发</span>
          </p> }
          {
            defineQcdata.length === 0 &&
            <div className='empShop'>
              <div>
                <img alt='暂无航班信息' src={ qiche } />
                <p>没有符合条件的航班，请更改筛选条件~</p>
              </div>
            </div>
          }
          {
            qcdata.length > 0 && qcdata.map(e => <Airlist key={ `${ Math.random() }` } goOrder={ goOrder } data={ e } />)
          }
        </div>
      </div>
      { defiliterObj && <div className='selectAir' style={ botShow ? {} : { bottom: '-1rem' } }>
        <p style={ filiterObj.fromArr.some(e => e.choose === true) ? { color: '#ffab00' } : {} } onClick={ () => { modal('fromArr') } }>
          <span><img alt='始发' src={ shi } /></span>
          出发车站
        </p>
        <p style={ filiterObj.toArr.some(e => e.choose === true) ? { color: '#ffab00' } : {} } onClick={ () => { modal('toArr') } }>
          <span><img alt='终点' src={ zhong } /></span>
          到达车站
        </p>
        <p style={ filiterObj.dptTime.some(e => e.choose === true) ? { color: '#ffab00' } : {} } onClick={ () => { modal('dptTime') } }>
          <span><img alt='发时' src={ time } /></span>
          出发时段
        </p>
      </div> }
    </div>
  )
}

const Airdate = ({ date, filiterObj, handleTime }) => {
  const timesplit = date.split('-')
  const preDate = new Date()
  const presplit = preDate.toLocaleDateString().split('/')
  const nextDate = new Date()
  nextDate.setFullYear(presplit[0], (presplit[1] * 1) + 2, 0)
  const nowDate = new Date(date.replace(/-/g, '/'))
  const nowShow = `${ timesplit[1] }月${ timesplit[2] }日  周${ ['日', '一', '二', '三', '四', '五', '六'][nowDate.getDay()] }`
  return (
    <div className='airdate'>
      <div className='pre_date'>
        <Icon type={ require('svg/qiche/arrowleftd.svg') } />
        <div onClick={ () => { if (preDate.toLocaleDateString() !== nowDate.toLocaleDateString()) { handleTime(`${ timesplit[0] }-${ timesplit[1] }-${ (timesplit[2] * 1) - 1 }`, filiterObj) } } }>
          <p style={ (preDate.toLocaleDateString() === nowDate.toLocaleDateString()) ? { color: '#999999' } : {} }>前一天</p>
        </div>
      </div>
      <div className='now_date' onClick={
         () => {
           return (
             Mask(
               <SlidePage target='right' showClose={ false } >
                 <Selecttime handleTime={ handleTime } filiterObj={ filiterObj } />
               </SlidePage>,
               { mask: false, style: { position: 'absolute' } }
             )
           )
         }
       }
      >{ nowShow }<Icon type={ require('svg/qiche/arrowdown.svg') } /></div>
      <div className='next_date'>
        <div onClick={ () => { if (nowDate.toLocaleDateString() !== nextDate.toLocaleDateString()) { handleTime(`${ timesplit[0] }-${ timesplit[1] }-${ (timesplit[2] * 1) + 1 }`, filiterObj) } } }>
          <p style={ (nowDate.toLocaleDateString() === nextDate.toLocaleDateString()) ? { color: '#999999' } : {} }>后一天</p>
        </div>
        <Icon type={ require('svg/qiche/arrowrightd.svg') } />
      </div>
    </div>
  )
}

// 日历取消组件
const Selecttime = props => {
  const { handleContainerClose, handleTime, filiterObj } = props
  return (
    <Calendar pricearr={ [] } onChange={ res => { handleContainerClose(); handleTime(res.date, filiterObj) } } />
  )
}

// 航班列表组件
const Airlist = ({ data, goOrder }) => {
  const { departureStation, departureTime, arriveStation, shiftType, ticketPrice, ticketLeft } = data
  const shiftText = ['固定班', '流水班', '加班车']
  return (
    <div className='qc_list' onClick={ () => { goOrder(data) } }>
      <h3>{ departureTime }</h3>
      <div>
        <p><span><i className='shizhong' style={{ background: '#ffab00' }}>始</i>{ departureStation }</span><span>¥{ ticketPrice }</span></p>
        <p><span><i className='shizhong'>终</i>{ arriveStation }</span></p>
        <p className='type'><span>{ shiftText[shiftType] }</span><span>{ ticketLeft }张</span></p>
      </div>
    </div>
  )
}

// 筛选组件
class Filtercom extends Component {
  constructor(props) {
    super(props)
    const { filiterObj } = this.props.air
    this.state = {
      filiterObjing: JSON.parse(JSON.stringify(filiterObj)),
    }
  }

  handleChange(txt, i) {
    const { filiterObjing } = this.state
    const nub = filiterObjing[txt].map(e => {
      if (i >= 0 && e.name === filiterObjing[txt][i].name) {
        e.choose = true
      } else {
        e.choose = false
      }
      return e
    })
    filiterObjing[txt] = nub
    this.setState({ filiterObjing })
  }

  render() {
    const { handleContainerClose, air, keyText } = this.props
    const { defiliterObj, defineQcdata = [], filiterObj, qcdata, handleFilterback } = air
    const { filiterObjing } = this.state
    return (
      <div className='filterwrap' onClick={ () => { handleContainerClose() } }>
        <div className='filterlist' onClick={ e => { e.stopPropagation() } }>
          <p className='filterli'>
            <span onClick={ () => { handleContainerClose() } }>取消</span>
            <span style={{ color: '#ffab00' }} onClick={ () => { handleFilterback(defiliterObj, defineQcdata, filiterObj, qcdata, filiterObjing, handleContainerClose) } }>确定</span>
          </p>
          <p className='filterli' onClick={ () => { this.handleChange(keyText, -1) } }>
            <span>{ keyText === 'dptTime' ? '全部时段' : '全部车站' }</span>
            <Icon type={ filiterObjing[keyText].some(e => e.choose === true) ? require('svg/qiche/selcetno.svg') : require('svg/qiche/selceting.svg') } />
          </p>
          {
            (filiterObjing[keyText].length > 0) && filiterObjing[keyText].map((e, i) => {
              return (
                <p key={ `${ Math.random() }` } className='filterli' onClick={ () => { this.handleChange(keyText, i) } }>
                  <span>{ e.name }</span>
                  <Icon type={ e.choose === true ? require('svg/qiche/selceting.svg') : require('svg/qiche/selcetno.svg') } />
                </p>
              )
            })
          }
        </div>
      </div>
    )
  }
}

export default Air
         
 
 
 
 qiche/components/app.js 
 
import React from 'react'
import { Icon } from 'antd-mobile'
import { Mask, SlidePage, Calendar, CitySearch, UserCenter } from '@boluome/oto_saas_web_app_component'
import { getStore, parseLocName } from '@boluome/common-lib'
import '../style/app.scss'

// const Item = List.Item

const App = app => {
  console.log(app)
  const { cityArr, fromCityobj, fromCity, toCity, date, qicheHistory = [], handletoCity, handlefromCity, handleTime, handleSwitch, handleClearhistory, handleSubmit } = app
  const dateSplit = date.split('-')
  const nowdate = new Date()
  const nowdatestr = nowdate.toLocaleDateString()
  const nowdatestrsplit = nowdatestr.split('/')
  const nextdate = new Date(`${ nowdatestrsplit[0] }/${ nowdatestrsplit[1] }/${ (nowdatestrsplit[2] * 1) + 1 }`)
  const nextdates = new Date(`${ nowdatestrsplit[0] }/${ nowdatestrsplit[1] }/${ (nowdatestrsplit[2] * 1) + 2 }`)
  const dates = new Date(date.replace(/-/g, '/'))
  let dateShow = ''
  if (dates.toLocaleDateString() === nowdate.toLocaleDateString()) {
    dateShow = '今天'
  } else if (dates.toLocaleDateString() === nextdate.toLocaleDateString()) {
    dateShow = '明天'
  } else if (dates.toLocaleDateString() === nextdates.toLocaleDateString()) {
    dateShow = '后天'
  } else {
    dateShow = `周${ ['日', '一', '二', '三', '四', '五', '六'][dates.getDay()] }`
  }
  const openCity = handleCity => {
    return (Mask(
      <SlidePage target='right' showClose={ false } >
        <CitySearch localCity={ getStore('currentPosition', 'session') ? parseLocName(getStore('currentPosition', 'session').city) : '上海' }
          categoryCode='qiche'
          handleCityData={ res => { handleCity(res) } }
          api={ cityArr }
        />
      </SlidePage>,
      { mask: false, style: { position: 'absolute' } }
    ))
  }
  return (
    <div className='app'>
      <UserCenter categoryCode='qiche' orderTypes='qiche' />
      <div className='addrcity'>
        <div onClick={ () => { openCity(handlefromCity) } }>
          <p>出发地</p>
          <p>{ fromCity }</p>
        </div>
        <Icon onClick={ () => { handleSwitch(fromCity, toCity) } } className='tipImg' type={ require('svg/qiche/switch.svg') } />
        <div onClick={ () => { openCity(handletoCity) } }>
          <p>目的地</p>
          { toCity }
        </div>
      </div>
      <div className='addrtime' onClick={
         () => {
           return (
             Mask(
               <SlidePage target='right' showClose={ false } >
                 <Selecttime handleTime={ handleTime } />
               </SlidePage>,
               { mask: false, style: { position: 'absolute' } }
             )
           )
         }
       }
      >
        <p>
          出发日期
        </p>
        <span>
          { dateSplit[1] < 10 ? `0${ parseInt(dateSplit[1], 10) }` : dateSplit[1] }月{ dateSplit[2] < 10 ? `0${ parseInt(dateSplit[2], 10) }` : dateSplit[2] }日
          { dateShow }
        </span>
      </div>

      <p className='btn'><span onClick={ () => { handleSubmit(fromCity, toCity, date, fromCityobj) } }>查询</span></p>

      { qicheHistory.length > 0 && <fieldset>
        <legend>最近查询</legend>
      </fieldset> }
      <ul className='locainfo'>
        {
          qicheHistory.length > 0 && qicheHistory.map(e => {
            return (
              <li onClick={ () => { handleSwitch(e.toCity, e.fromCity) } } key={ `${ e.fromCity }${ e.toCity }` } ><span>{ e.fromCity }</span><span>－</span><span>{ e.toCity }</span></li>
            )
          })
        }
      </ul>
      { qicheHistory.length > 0 && <p className='clear-locainfo' onClick={ () => { handleClearhistory() } }>清除全部</p> }
    </div>
  )
}

// 日历取消组件
const Selecttime = props => {
  const { handleContainerClose, handleTime } = props
  return (
    <Calendar pricearr={ [] } onChange={ res => { handleContainerClose(); handleTime(res) } } />
  )
}

export default App
         
 
 
 
 qiche/components/baoxian.js 
 
import React, { Component } from 'react'
import { Icon } from 'antd-mobile'
// import Baoxianitem from './baoxianitem'

// 保险
class Baoxian extends Component {
  constructor(props) {
    super(props)
    this.state = {
      baoxianData: this.props.baoxianData || [],
    }
    this.handleMid = this.handleMid.bind(this)
  }

  handleMid(insurancing) {
    const { baoxianData = [] } = this.state
    const { handleContainerClose, handleInseran } = this.props
    const arr = baoxianData.map(e => {
      if (e.productId === insurancing.productId) {
        return Object.assign(e, { choose: true })
      }
      return Object.assign(e, { choose: false })
    })
    if (handleInseran) handleInseran(arr)
    this.setState({ baoxianData: arr })
    handleContainerClose()
  }

  render() {
    const { handleContainerClose } = this.props
    const { baoxianData = [] } = this.state
    return (
      <div className='baoxian' onClick={ () => { handleContainerClose() } }>
        <div className='baoxian_main' onClick={ e => { e.stopPropagation() } }>
          {
            baoxianData.length > 0 && baoxianData.map(e => {
              return (
                <div className='baoxian_list' key={ `bx${ Math.random() }` } onClick={ () => { this.handleMid(e) } }>
                  <div>
                    <p>{ `${ e.insuranceName }  ${ e.insuranceProductName }` }</p>
                    <p>{ e.compensationVolume ? `推荐购买，正常出票，保额${ e.compensationVolume }万` : '安全出行，建议选购保险' }</p>
                  </div>
                  <Icon type={ e.choose === true ? require('svg/qiche/selceting.svg') : require('svg/qiche/selcetno.svg') } />
                </div>
              )
            })
          }
        </div>
      </div>
    )
  }
}

export default Baoxian
         
 
 
 
 qiche/components/order.js 
 
import React, { Component } from 'react'
import { List, Icon, WhiteSpace, Switch, InputItem } from 'antd-mobile'
import { Mask, SlidePage, Tourist, NewPromotion } from '@boluome/oto_saas_web_app_component'
// import { NewPromotion } from '@boluome/oto_saas_web_app_component'
import Baoxian from './baoxian'
import '../style/order.scss'
import chengke from '../img/chengke.png'

const Item = List.Item

const Order = order => {
  console.log(order)
  const {
          checiinfo,
          curDiscountData,
          contactorId,
          contactorName,
          contactorPhone,
          bool,
          jisu,
          servicePrice = 0,
          baoxianData = [],
          pasdata = [],
          handleBool,
          handleCur,
          handleContactor,
          handlePasdata,
          handleChangePhone,
          handleSubmit,
    } = order
  const Multiplesel = true
  const commodityAmountnum = pasdata.length
  if (checiinfo) {
    const { maxTicketCount, ticketPrice } = checiinfo
    const jisuPri = (jisu && bool) ? jisu.productPrice : 0
    const bxArr = baoxianData.filter(e => e.choose)
    const bxPri = (bxArr.length) > 0 ? bxArr[0].productPrice * 1 : 0
    const curPri = (curDiscountData && curDiscountData.discount) ? curDiscountData.discount : 0
    const subPrice = ((((ticketPrice + jisuPri) + bxPri) + servicePrice) * pasdata.length) - curPri
    console.log(bxArr, jisuPri, bxPri)
    return (
      <div className='order'>
        <div className='ordermain'>
          { checiinfo && <Card checiinfo={ checiinfo } /> }

          <WhiteSpace size='lg' />

          <div className='passenger'>
            <h3>
              <p><span><img alt='ck' src={ chengke } />添加乘客</span>每个订单限购{ maxTicketCount }张票</p>
              <Icon type={ require('svg/qiche/add.svg') } onClick={
                () => Mask(
                  <SlidePage target='right' showClose={ false } >
                    <Tourist checkedArr={ pasdata || [] } noUesChildren={ '暂不支持儿童/婴儿票' } handleChange={ contact => handlePasdata(pasdata, contact, true, contactorId) } Multiplesel={ Multiplesel } />
                  </SlidePage>,
                  { mask: false, style: { position: 'absolute' } }
                )
              }
              />
            </h3>
            {
              pasdata.length > 0 && pasdata.map(e => <Passenger key={ `${ Math.random() }` } contactorId={ contactorId } pasdata={ pasdata } itemdata={ e } handlePasdata={ handlePasdata } handleContactor={ handleContactor } />)
            }
          </div>

          <WhiteSpace size='lg' />

          <List>
            <InputItem
              value={ contactorName }
              editable={ false }
            > 取票人</InputItem>
            <InputItem
              placeholder={ '用于接收取票信息' }
              maxLength={ 11 }
              value={ contactorPhone }
              onChange={ e => { handleChangePhone(e) } }
            >联系手机</InputItem>
          </List>

          { jisu && <WhiteSpace size='lg' /> }

          { jisu && <List>
            <Item extra={ <Switch platform='ios' checked={ bool } onChange={ checked => { handleBool(checked) } } /> }>
              <div className='jisu'>
                <div>
                  <p style={{ fontSize: '0.28rem', color: '#333333' }}>{ jisu.name }</p>
                  <p style={{ fontSize: '0.24rem', color: '#999999' }}>{ jisu.productDescription }</p>
                </div>
                <p style={{ color: '#ff4848' }}>￥{ jisu.productPrice }/份</p>
              </div>
            </Item>
          </List>
          }

          { baoxianData.length > 0 && <WhiteSpace size='lg' /> }

          { baoxianData.length > 0 && <List>
            <Item arrow='horizontal' extra={ <span style={{ fontSize: '0.28rem', color: '#999999' }}>{ bxArr.length > 0 ? bxArr[0].insuranceProductName : '不购买保险' }</span> } onClick={ () => {
              Mask(
                <SlidePage target='right' type='root' showClose={ false }>
                  <Baoxian baoxianData={ baoxianData } />
                </SlidePage>, { mask: false }
              )
            } }
            >
              <span style={{ fontSize: '0.28rem' }}>出行保险</span>
            </Item>
          </List>
          }

          <WhiteSpace size='lg' />

          { pasdata.length > 0 && <NewPromotion handleChange={ res => { handleCur(res) } } orderType='qiche' channel='tongcheng' amount={ subPrice } count={ commodityAmountnum } /> }

          { pasdata.length > 0 && <WhiteSpace size='lg' /> }

          <div className='wxtip'>
            <p>温馨提示</p>
            <p>成功支付后凭系统发送短信中的取票号、取票密码与身份证至汽车站取票乘车；</p>
            <p>若发车前30分钟内仍未收到取票短信，请及时拨打客服热线400-7777-777核实；</p>
            <p>暂不支持携童票购买，若需要携带免票儿童，请提前至汽车站办理，以免耽误行程。</p>
          </div>

          <WhiteSpace size='lg' />
        </div>
        <div className='orderbottom'>
          <div className='orderPrice'>
            {
              pasdata.length > 0 && <div>
                <p>实付¥{ subPrice.toFixed(2) }</p>
                { (curDiscountData && curDiscountData.discount) ? <p>{ `优惠¥${ (curDiscountData.discount * 1).toFixed(2) }` }</p> : '' }
              </div>
            }
            { pasdata.length > 0 && <p onClick={ () => {
              Mask(
                <SlidePage target='right' type='root' showClose={ false }>
                  <Pridetail order={ order } subPrice={ subPrice } jisuPri={ jisuPri } bxPri={ bxPri } />
                </SlidePage>, { mask: false }
              )
            } }
            >明细<Icon type={ require('svg/qiche/mingxi.svg') } /></p> }
          </div>
          <span style={ pasdata.length > 0 ? {} : { background: '#e5e5e5' } } className='orderbtn' onClick={ () => { handleSubmit(order) } }>
            立即下单
          </span>
        </div>
      </div>
    )
  }
  return (
    <div />
  )
}

// 信息展示
const Detail = ({ handleContainerClose }) => {
  return (
    <div className='gou_detail' onClick={ () => { handleContainerClose() } }>
      <div>
        <h2>购票说明</h2>
        <p>1.同一笔订单可购买的车票数量不超过3张，如购票乘车人数超出3位，请分开预订。</p>
        <p>3.当出票失败后，您将会收到出票失败的短信，请勿继续预订当前车次，所退款项将在1-15个工作日内原路退还到您的支付账户中。</p>
        <p>4.部分车站增收服务费，如去车站窗口退票服务费车站不予退还。</p>
        <p>5.系统为您提供的车型信息为参考车型，实际可能根据客运站的调整有所变化，具体以各客运站发车车型为准。</p>
        <h2>取票说明</h2>
        <p>1.请提前至少30分钟（节假日等高峰期建议提前一小时），凭取票人身份证、取票号和取票密码至出发车站取票。（若有取票机，则可凭借取票号取票；若无取票机，则需凭借取票人身份证到窗口办理）。</p>
        <p>2.如您在发车前30分钟仍未收到车票相关信息，请及时拨打4007-777-777进行核实。</p>
        <h2>退改说明</h2>
        <p>1.目前汽车票暂不支持线上退票，如需退票，请在出发车站取出纸质票，再到车站窗口办理退票，办理退票手续车站会收取票面价10%-20%手续费，具体金额请以各客运站站公布的规则为准。</p>
        <p>2.开车后一般不退票（请以各客运站规定为准）。</p>
        <p>3.由于承运人责任造成班车晚点、托班等延迟运输的，旅客可根据需要改乘其他班次或者退票，免收退票费。</p>
        <p>4.临时加班的班次，无法退票（如车站可退票，请以车站为准）。</p>
        <p>5.汽车票业务暂时不支持线上改签操作，如需改签，建议您在发车前至出发车站，在取出纸质票后，再到车站窗口办理退票改签。具体以车站实际情况为准。</p>
        <p>6.办理退票不再支持参与红包、优惠券、立减等活动，服务费不予退还。</p>
        <p>7.部分车站退票需原支付渠道退款，您至始发站办理退票时若车站只同意退票未给予退款，请在3个工作日内联系客服核实并完成退款。</p>
      </div>
    </div>
  )
}

// 车次信息展示
const Card = ({ checiinfo }) => {
  const { coachType, depatureCity, arriveCity, departureStation, arriveStation, departureDate, departureTime, travelTime } = checiinfo
  const datesplit = departureDate.split('-')
  const datetxt = `${ datesplit[1] }月${ datesplit[2] }日${ departureTime }`
  return (
    <div className='detailCart'>
      <p className='qctit'>
        <span>参考车型：{ coachType }</span>
        <span onClick={ () => {
          Mask(
            <SlidePage target='right' type='root' showClose={ false }>
              <Detail />
            </SlidePage>, { mask: false }
          )
        } }
        ><Icon type={ require('svg/jipiao/tiping.svg') } />购票、取票、退票说明</span>
      </p>
      <div className='cart_main'>
        <div>
          <h3>{ depatureCity }</h3>
          <p>{ departureStation }</p>
        </div>
        <div className='cart_mainmid'>
          <p>{ datetxt }</p>
          <p />
          <p>{ travelTime }</p>
        </div>
        <div>
          <h3>{ arriveCity }</h3>
          <p>{ arriveStation }</p>
        </div>
      </div>
    </div>
  )
}

// 乘客信息
class Passenger extends Component {
  constructor(props) {
    super(props)
    this.state = {
      bool: false,
    }
  }

  handleSwitch() {
    const { bool } = this.state
    this.setState({ bool: !bool })
  }

  render() {
    // const { name, id } = flightData
    const { bool } = this.state
    const { itemdata, pasdata, contactorId, handlePasdata, handleContactor } = this.props
    const { id, name, idCard } = itemdata
    return (
      <div className='passenger_list' onClick={ () => { if (bool) { this.handleSwitch() } } }>
        <div className='passenger_icon' style={ bool ? { width: '0rem' } : {} } >
          <Icon type={ require('svg/jipiao/deletbtn.svg') } onClick={ () => { this.handleSwitch() } } />
        </div>
        <div className='passenger_main'>
          <p><span>{ name }</span>成人票</p>
          <p>身份证：{ idCard }</p>
        </div>
        <div onClick={ () => { handleContactor(itemdata) } } className='passenger_jump'>
          <span style={ contactorId === id ? { color: '#fff', background: '#ffab00', borderRadius: '4px', padding: '0.05rem 0.1rem', desplay: 'inline-block' } : {} }>
            { contactorId === id ? '取票人' : '设为取票人' }
          </span>
        </div>
        <div className='passenger_delet' style={ bool ? {} : { width: '0rem' } }
          onClick={ () => { handlePasdata(pasdata, itemdata, false, contactorId) } }
        >
          <span>删除</span>
        </div>
      </div>
    )
  }
}

// 费用明细
const Pridetail = props => {
  const { handleContainerClose, order, jisuPri, bxPri, subPrice } = props
  const { checiinfo, servicePrice, curDiscountData, pasdata = [] } = order
  console.log(order)
  return (
    <div className='pridetail'>
      <fieldset>
        <legend>费用明细</legend>
      </fieldset>
      <h2>¥{ subPrice.toFixed(2) }</h2>
      <div className='main_pri'>
        <p><span>成人票价</span><span>¥{ checiinfo.ticketPrice } <i>x { pasdata.length }人</i></span></p>
        <p><span>服务费</span><span>¥{ servicePrice } <i>x { pasdata.length }人</i></span></p>
      </div>
      {
        (jisuPri > 0 || bxPri > 0) && <div className='add_pri'>
          {
            jisuPri > 0 ? <p><span>极速出票</span><span>¥{ jisuPri } <i>x 1份</i></span></p> : ''
          }
          {
            bxPri > 0 ? <p><span>交通意外险</span><span>¥{ bxPri } <i>x 1份</i></span></p> : ''
          }
        </div>
      }
      {
        (curDiscountData && curDiscountData.discount) ? <div className='cup_pri'><p><span>优惠券</span><span>-¥{ curDiscountData.discount }</span></p></div> : ''
      }
      <div className='closebtn'>
        <p><Icon onClick={ () => { handleContainerClose() } } type={ require('svg/jipiao/close.svg') } /></p>
      </div>
    </div>
  )
}

export default Order
         
 
 
 
 qiche/components/orderDetails.js 
 
import React, { Component } from 'react'
// import { browserHistory } from 'react-router'
import { OrderDetail, SlidePage, Mask } from '@boluome/oto_saas_web_app_component'
import { moment } from '@boluome/common-lib'
import { WhiteSpace, List, Icon } from 'antd-mobile'
import { equals } from 'ramda'
// import bg from '../img/bg.png'
import '../style/orderDetails.scss'

const Item = List.Item
// id='bl001773304153338'
const OrderDetails = orderDetails => {
  const { orderNo, goPay } = orderDetails
  return (
    <div className='orderDetails'>
      { orderNo && <OrderDetail
        content={ <Content orderDetails={ orderDetails } /> }
        id={ orderNo }
        orderType='qiche'
        goPay={ () => { goPay(orderNo) } }
      /> }
    </div>
  )
}

class Content extends Component {
  constructor(props) {
    super(props)
    this.state = {}
  }

  componentWillReceiveProps(nextProps) {
    const a = this.props.orderDetailInfo
    const b = nextProps.orderDetailInfo
    if (!equals(a, b)) {
      console.log(b)
    }
  }
  render() {
    const { orderDetailInfo, orderDetails } = this.props
    const { id, partnerId, price = 0, ticketNo, checkIn, seatNumbers, passengers = [], contactor, extraServices = [], realPayPrice, schedules = [], platformActivity, coupon, createdAt } = orderDetailInfo
    const { bool, orderNo, handleBool, handleTui } = orderDetails
    const jisu = extraServices.filter(e => e.type === 3)[0]
    const baoxianData = extraServices.filter(e => e.type === 1)[0]
    console.log(orderNo, jisu, handleBool)
    if (id) {
      const schedule = schedules[0]
      const { stationPhone, stationAddress } = schedule
      return (
        <div className='odlcenter'>
          <WhiteSpace size='lg' />

          { schedules.length && <Card checiinfo={ schedules[0] } /> }
          { ticketNo && <p className='seat_tui'>
            <span>{ checkIn ? `检票口：${ checkIn }` : '' }{ seatNumbers ? `  座位号：${ seatNumbers }` : '' }</span>
            <span onClick={ () => { handleTui(id, partnerId) } }>退票</span>
          </p> }

          <WhiteSpace size='lg' />

          <div className='passenger'>
            <h3><p>乘客信息</p></h3>
            {
              passengers.length > 0 && passengers.map(e => {
                return (
                  <div className='ps_list' key={ `bx${ Math.random() }` }>
                    <div>
                      <p><span>{ e.name }</span>成人票</p>
                      <p><span>身份证</span>{ e.credentialCode }</p>
                    </div>
                    { e.credentialCode === contactor.credentialCode ? <p>取票人</p> : '' }
                  </div>
                )
              })
            }
          </div>
          <p className='passengerbt'><span>取票手机</span>{ contactor && contactor.phone }</p>

          <WhiteSpace size='lg' />

          <div className='switch'>
            <p><span style={ !bool ? { color: '#ffab00' } : {} } onClick={ () => { handleBool(false) } }>取票方式</span><span style={ bool ? { color: '#ffab00' } : {} } onClick={ () => { handleBool(true) } }>车站信息</span></p>
            <div className='switch_c'>
              { !bool ? <p>成功支付后，可凭系统发送短信中的身份证至【汽车站】取票乘车</p>
                   : <div>
                     <p><span>车站电话：</span>{ stationPhone}</p>
                     <p><span>车站地址：</span>{ stationAddress }</p>
                   </div> }
            </div>
          </div>

          <WhiteSpace size='lg' />

          { baoxianData && <List>
            <Item extra={ <span style={{ fontSize: '0.28rem', color: '#999999' }}>{ baoxianData.insuranceProductName }</span> } onClick={ () => {
              Mask(
                <SlidePage target='right' type='root' showClose={ false }>
                  <Baoxian baoxianData={ baoxianData } />
                </SlidePage>, { mask: false }
              )
            } }
            >
              <span style={{ fontSize: '0.28rem' }}>出行保险</span>
            </Item>
          </List>
          }

          <WhiteSpace size='lg' />

          <List>
            <Item extra={ <span>{ price }</span> }>总价</Item>
            { platformActivity && <Item extra={ <span className='numpri'>－ ¥{ platformActivity.price }</span> }><span className='jianhui' style={{ background: '#ff6e19' }}>减</span>{ platformActivity.title }</Item> }
            <Item extra={ <span className='numpri'>- ¥{ coupon ? coupon.price : 0.0 }</span> }><span className='jianhui'>红</span>红包抵扣／兑换红包</Item>
            <Item extra={ <span className='realsubpri'>{ `实付 ¥${ realPayPrice }` }</span> }><span /></Item>
          </List>

          <WhiteSpace size='lg' />

          <List>
            <Item extra={ <span>{ id }</span> }>订单编号</Item>
            <Item extra={ <span>{ moment('YYYY-MM-DD HH:mm:ss')(createdAt) }</span> }>下单时间</Item>
          </List>
        </div>
      )
    }
    return (
      <div />
    )
  }
}

// 信息展示
const Detail = ({ handleContainerClose }) => {
  return (
    <div className='gou_detail' onClick={ () => { handleContainerClose() } }>
      <div>
        <h2>购票说明</h2>
        <p>1.同一笔订单可购买的车票数量不超过3张，如购票乘车人数超出3位，请分开预订。</p>
        <p>3.当出票失败后，您将会收到出票失败的短信，请勿继续预订当前车次，所退款项将在1-15个工作日内原路退还到您的支付账户中。</p>
        <p>4.部分车站增收服务费，如去车站窗口退票服务费车站不予退还。</p>
        <p>5.系统为您提供的车型信息为参考车型，实际可能根据客运站的调整有所变化，具体以各客运站发车车型为准。</p>
        <h2>取票说明</h2>
        <p>1.请提前至少30分钟（节假日等高峰期建议提前一小时），凭取票人身份证、取票号和取票密码至出发车站取票。（若有取票机，则可凭借取票号取票；若无取票机，则需凭借取票人身份证到窗口办理）。</p>
        <p>2.如您在发车前30分钟仍未收到车票相关信息，请及时拨打4007-777-777进行核实。</p>
        <h2>退改说明</h2>
        <p>1.目前汽车票暂不支持线上退票，如需退票，请在出发车站取出纸质票，再到车站窗口办理退票，办理退票手续车站会收取票面价10%-20%手续费，具体金额请以各客运站站公布的规则为准。</p>
        <p>2.开车后一般不退票（请以各客运站规定为准）。</p>
        <p>3.由于承运人责任造成班车晚点、托班等延迟运输的，旅客可根据需要改乘其他班次或者退票，免收退票费。</p>
        <p>4.临时加班的班次，无法退票（如车站可退票，请以车站为准）。</p>
        <p>5.汽车票业务暂时不支持线上改签操作，如需改签，建议您在发车前至出发车站，在取出纸质票后，再到车站窗口办理退票改签。具体以车站实际情况为准。</p>
        <p>6.办理退票不再支持参与红包、优惠券、立减等活动，服务费不予退还。</p>
        <p>7.部分车站退票需原支付渠道退款，您至始发站办理退票时若车站只同意退票未给予退款，请在3个工作日内联系客服核实并完成退款。</p>
      </div>
    </div>
  )
}

// 车次信息展示
const Card = ({ checiinfo }) => {
  const { coachType, depatureCity, arriveCity, departureStation, arriveStation, departureDate, departureTime, travelTime } = checiinfo
  const datesplit = departureDate.split('-')
  const datetxt = `${ datesplit[1] }月${ datesplit[2] }日${ departureTime }`
  return (
    <div className='detailCart'>
      <p className='qctit'>
        <span>参考车型：{ coachType }</span>
        <span onClick={ () => {
          Mask(
            <SlidePage target='right' type='root' showClose={ false }>
              <Detail />
            </SlidePage>, { mask: false }
          )
        } }
        ><Icon type={ require('svg/jipiao/tiping.svg') } />购票、取票、退票说明</span>
      </p>
      <div className='cart_main'>
        <div>
          <h3>{ depatureCity }</h3>
          <p>{ departureStation }</p>
        </div>
        <div className='cart_mainmid'>
          <p>{ datetxt }</p>
          <p />
          <p>{ travelTime }</p>
        </div>
        <div>
          <h3>{ arriveCity }</h3>
          <p>{ arriveStation }</p>
        </div>
      </div>
    </div>
  )
}

// 保险信息展示
const Baoxian = ({ baoxianData, handleContainerClose }) => {
  const { insuranceName, insuranceProductName, compensationVolume, insuranceOrderNum = '', passengers = [] } = baoxianData
  const tatusText = ['待生效', '已生效', '购买失败']
  const tatusColor = ['#ffab00', '#ffab00', '#ff4848']
  return (
    <div className='baoxian' onClick={ () => { handleContainerClose() } }>
      <div className='baoxian_main'>
        <div className='baoxian_list' key={ `bx${ Math.random() }` }>
          <div>
            <p>{ `${ insuranceName }  ${ insuranceProductName }` }</p>
            <p>{ compensationVolume ? `推荐购买，正常出票，保额${ compensationVolume }万` : '安全出行，建议选购保险' }</p>
          </div>
          <Icon type={ require('svg/qiche/tiping.svg') } />
        </div>
        {
          passengers.length > 0 && passengers.map(e => {
            return (
              <div>
                <div className='ps_list' key={ `bx${ Math.random() }` }>
                  <div>
                    <p><span>被保险人</span>{ `${ e.name }  ${ e.credentialCode }` }</p>
                    { insuranceOrderNum && <p><span>保单号</span>{ insuranceOrderNum }</p> }
                  </div>
                  <p style={{ border: `1px solid ${ tatusColor }`, color: `${ tatusColor }` }}>{ tatusText[e.tatus] }</p>
                </div>
                { e.tatus === 2 && <p style={{ paddingTop: '0.2rem', fontSize: '0.24rem', color: '#ffab00' }}>退款会在1-5个工作日内退回您的支付账户</p> }
              </div>
            )
          })
        }
      </div>
    </div>
  )
}

export default OrderDetails
         
 
 
 
 qiche/components/root.js 
 
import React from 'react'
import customize from 'customize'

export default customize(
  ({ children }) => (
    <div>{ children }</div>
  )
)
         
 
 
 
 qiche/containers/air.js 
 
import { connect } from 'react-redux'
import { browserHistory } from 'react-router'
import { setStore } from '@boluome/common-lib'
import { wrap } from '@boluome/oto_saas_web_app_component'
// import { Modal } from 'antd-mobile'
import { airReset, getqcdata, fliterdata } from '../actions/air.js'
import Air from '../components/air'

let reTop = 0

const mapStateToProps = ({ air }) => ({ ...air })

const mapDispatchToProps = dispatch => {
  return {
    dispatch,

    handleFilternear: (filiterObj, defineQcdata, txt) => {
      let index = ''
      filiterObj.fromArr.map((e, i) => {
        if (e.name === txt) index = i
        return e
      })
      if (typeof index === 'number' && !filiterObj.fromArr[index].choose) {
        const filiterObjing = JSON.parse(JSON.stringify(filiterObj))
        filiterObjing.fromArr[index].choose = true
        const arr = fliterdata(filiterObjing, defineQcdata)
        dispatch(airReset({
          qcdata:     arr,
          filiterObj: filiterObjing,
        }))
      }
    },

    handleScroll: (top, botShow) => {
      const num = top - reTop
      if (num > 0 && botShow) {
        dispatch(airReset({
          botShow: false,
        }))
      } else if (num < 0 && !botShow) {
        dispatch(airReset({
          botShow: true,
        }))
      }
      reTop = top
    },

    handleFilterback: (defiliterObj, defineQcdata, filiterObj, qcdata, filiterObjing, handleContainerClose) => {
      if (JSON.parse(JSON.stringify(defiliterObj)) === JSON.parse(JSON.stringify(filiterObjing))) {
        dispatch(airReset({
          qcdata: defineQcdata,
        }))
      } else if (JSON.parse(JSON.stringify(filiterObj)) === JSON.parse(JSON.stringify(filiterObjing))) {
        console.log('筛选条件未变')
      } else {
        const arr = fliterdata(filiterObjing, defineQcdata)
        dispatch(airReset({
          qcdata:     arr,
          filiterObj: filiterObjing,
        }))
      }
      handleContainerClose()
    },

    handleTime: (date, obj) => {
      const datesplit = date.split('-')
      const nextdate = new Date()
      nextdate.setFullYear(datesplit[0], (datesplit[1] * 1) - 1, datesplit[2])
      const datestr = nextdate.toLocaleDateString()
      setStore('date', datestr.replace(/\//g, '-'), 'session')
      dispatch(getqcdata(obj))
    },

    goOrder: checiinfo => {
      setStore('checiinfo', checiinfo, 'session')
      dispatch({ type: 'ORD_INIT' })
      browserHistory.push('/qiche/order')
    },
  }
}

const mapFunToComponent  = (dispatch, state) => ({
  componentWillMount: () => {
    // 查询
    if (!state.defineQcdata) {
      dispatch(getqcdata())
    }
  },
})

export default
connect(mapStateToProps, mapDispatchToProps)(
  wrap(mapFunToComponent)(Air)
)
         
 
 
 
 qiche/containers/app.js 
 
import { connect } from 'react-redux'
import { browserHistory } from 'react-router'
import { get, getStore, setStore, removeStore, parseLocName } from '@boluome/common-lib'
import { wrap } from '@boluome/oto_saas_web_app_component'
import { getLocationGaode, login } from 'business'
import { Toast } from 'antd-mobile'
import { appReset } from '../actions/app.js'
import App from '../components/app'

const mapStateToProps = ({ app }) => ({ ...app })

const mapDispatchToProps = dispatch => {
  return {
    dispatch,

    handlefromCity: loc => {
      dispatch(appReset({
        fromCity: loc.name,
      }))
    },

    handletoCity: loc => {
      dispatch(appReset({
        toCity: loc.name,
      }))
    },

    handleSwitch: (fromCity, toCity) => {
      dispatch(appReset({
        fromCity: toCity,
        toCity:   fromCity,
      }))
    },

    handleTime: calendar => {
      setStore('qiche_date', calendar.date, 'session')
      dispatch(appReset({
        date: calendar.date,
      }))
    },

    handleClearhistory: () => {
      removeStore('qicheHistory')
      dispatch(appReset({
        qicheHistory: [],
      }))
    },

    handleSubmit: (fromCity, toCity, date, fromCityobj) => {
      console.log(fromCity, toCity, date)
      setStore('qiche_fromCity', fromCity)
      setStore('qiche_toCity', toCity)
      setStore('qiche_date', date, 'session')
      setStore('qiche_fromCityobj', fromCityobj, 'session')
      const qicheHistory = getStore('qiche_History') || []
      const arr = qicheHistory.filter(e => {
        if (e.fromCity === fromCity && e.toCity === toCity) {
          return true
        }
        return false
      })
      if (arr.length === 0 && qicheHistory.length > 4) {
        qicheHistory.splice(0, 1)
        qicheHistory.push({
          fromCity,
          toCity,
        })
      } else if (arr.length === 0) {
        qicheHistory.push({
          fromCity,
          toCity,
        })
      }
      setStore('qiche_History', qicheHistory)
      dispatch({ type: 'AIR_INIT' })
      browserHistory.push('/qiche/air')
    },
  }
}

const mapFunToComponent  = (dispatch, state) => ({
  componentDidMount: () => {
    setStore('channel', 'tongcheng', 'session')
    const qicheHistory = getStore('qiche_History') || []
    // 登录
    login(err => {
      if (err) {
        Toast.info('未登录', 1)
      }
    })
    // 定位
    const getcity = ctnm => {
      // 城市列表
      get('/qiche/v1/city/list', {
        channel:  getStore('channel', 'session'),
        cityType: 1,
      })
      .then(({ code, data, message }) => {
        if (code === 0) {
          const bl = data.some(a => a.name === ctnm)
          const yy = data.filter(e => e.name === (bl ? ctnm : state.fromCity))
          setStore('qiche_fromCity', yy[0].name)
          dispatch(appReset({
            fromCity:    yy[0].name,
            fromCityobj: yy[0],
            cityArr:     data,
          }))
        } else {
          console.log(message)
        }
      })
      .catch(err => console.log(err))
    }
    if (getStore('fromCity')) {
      const fromCity = getStore('qiche_fromCity')
      const toCity = getStore('qiche_toCity')
      const date = getStore('qiche_date', 'session') || state.date
      getcity(fromCity)
      dispatch(appReset({
        fromCity,
        toCity,
        date,
        qicheHistory,
      }))
      getLocationGaode(() => {})
    } else {
      getLocationGaode(err => {
        const fromCity = err ? state.fromCity : parseLocName(getStore('currentPosition', 'session').city)
        dispatch(appReset({
          qicheHistory,
        }))
        getcity(fromCity)
      })
    }
  },
})

export default
connect(mapStateToProps, mapDispatchToProps)(
  wrap(mapFunToComponent)(App)
)
         
 
 
 
 qiche/containers/order.js 
 
// import React from 'react'
import { connect } from 'react-redux'
// import { browserHistory } from 'react-router'
import { send, getStore } from '@boluome/common-lib'
import { wrap, Loading } from '@boluome/oto_saas_web_app_component'
import { Toast } from 'antd-mobile'
import { afterOrdering } from 'business'
import { ordReset } from '../actions/order.js'
import Order from '../components/order'

const mapStateToProps = ({ order }) => ({ ...order })

const mapDispatchToProps = dispatch => {
  return {
    dispatch,

    handleContactor: itemdata => {
      dispatch(ordReset({
        contactorName: itemdata.name,
        contactorId:   itemdata.id,
      }))
    },

    handleCur: curDiscountObj => {
      dispatch(
        ordReset({
          curDiscountData: curDiscountObj,
        })
      )
    },

    handleChangePhone: contactorPhone => {
      console.log(contactorPhone)
      dispatch(ordReset({
        contactorPhone,
      }))
    },

    handleBool: bool => {
      dispatch(ordReset({
        bool,
      }))
    },

    handlePasdata: (pasdata, pasdataitem, sign, contactorId) => {
      console.log(pasdata, pasdataitem, sign, contactorId)
      if (pasdataitem.length && sign) {
        const checiinfo = getStore('checiinfo', 'session')
        if (pasdataitem.length > checiinfo.maxTicketCount) {
          Toast.info(`每单最大乘客数为${ checiinfo.maxTicketCount }位`)
          return false
        }
        const arr = pasdataitem.filter(e => e.id === contactorId)
        if (arr.length > 0) {
          dispatch(ordReset({
            pasdata: pasdataitem,
          }))
        } else {
          dispatch(ordReset({
            contactorName: pasdataitem[0].name,
            contactorId:   pasdataitem[0].id,
            pasdata:       pasdataitem,
          }))
        }
      } else if (!sign) {
        let index = ''
        const ar = pasdata.filter((e, i) => {
          if (pasdataitem.id === e.id) {
            index = i
            return true
          }
          return false
        })
        if (ar.length) pasdata.splice(index, 1)
        if (ar[0].id === contactorId && pasdata.length) {
          dispatch(ordReset({
            contactorName: pasdata[0].name,
            contactorId:   pasdata[0].id,
            pasdata,
          }))
        } else if (ar[0].id === contactorId) {
          dispatch(ordReset({
            contactorName: '',
            contactorId:   '',
            pasdata,
          }))
        } else {
          dispatch(ordReset({
            pasdata,
          }))
        }
      }
    },

    handleSubmit: order => {
      const { contactorId, contactorPhone, pasdata, checiinfo, bool, jisu, baoxianData } = order
      const { depatureCity, arriveCity, departureDate, scheduleNo } = checiinfo
      const reg = /^1[34578]\d{9}$/
      if (pasdata.length === 0) {
        Toast.info('未添加乘客', 1)
      } else if (!(reg.test(contactorPhone))) {
        Toast.info('请输入正确手机号', 1)
      } else {
        const handleClose = Loading()
        const arr = pasdata.filter(e => e.id === contactorId)
        const contactor = {
          name:           arr[0].name,
          phone:          contactorPhone,
          credentialCode: arr[0].idCard,
        }
        const passengers = pasdata.map(e => e.id)
        const extraServices = []
        if (bool) extraServices.push({ type: jisu.type })
        const arl = baoxianData.filter(e => e.choose)
        if (arl.length) extraServices.push({ type: 1, productId: arl[0].productId })
        // 提交订单
        send('/qiche/v1/order', {
          channel:        getStore('channel', 'session'),
          customerUserId: getStore('customerUserId', 'session'),
          departureCity:  depatureCity,
          arriveCity,
          departureDate,
          scheduleNo,
          passengers,
          extraServices,
          contactor,
        })
        .then(({ code, data, message }) => {
          handleClose()
          if (code === 0) {
            console.log(data)
            afterOrdering(data)
          } else {
            Toast.info(message, 1)
            console.log(message)
          }
        })
      }
    },
  }
}

const mapFunToComponent  = dispatch => ({
  componentWillMount: () => {
    const checiinfo = getStore('checiinfo', 'session')
    console.log(checiinfo)
    const { depatureCity, arriveCity, departureStation, arriveStation, departureDate, departureTime, ticketPrice, scheduleNo } = checiinfo
    const pricing = passengersCount => {
      // 核价
      send('/qiche/v1/pricing', {
        channel:       getStore('channel', 'session'),
        departureCity: depatureCity,
        arriveCity,
        departureStation,
        arriveStation,
        departureDate,
        departureTime,
        ticketPrice,
        scheduleNo,
        passengersCount,
      })
      .then(({ code, data, message }) => {
        if (code === 0) {
          dispatch(ordReset({
            servicePrice: data.servicePrice,
          }))
        } else {
          console.log(message)
        }
      })
    }
    pricing(1)
    // 查询保险
    send('/qiche/v1/extra/service/info', {
      channel:           getStore('channel', 'session'),
      departureCity:     depatureCity,
      arriveCity,
      departureStation,
      arriveStation,
      departureDateTime: `${ departureDate } ${ departureTime }`,
      ticketPrice,
    })
    .then(({ code, data, message }) => {
      if (code === 0) {
        const jisu = data.filter(e => e.type === 3)[0]
        const baoxianData = data.filter(e => e.type === 1)[0]
        const bxArr = baoxianData ? baoxianData.list.map(e => {
          if (e.compensationVolume) return { ...e, choose: false }
          return { ...e, choose: true }
        }) : []
        dispatch(ordReset({
          jisu,
          baoxianData: bxArr,
          checiinfo,
        }))
        console.log(data)
      } else {
        dispatch(ordReset({
          checiinfo,
        }))
        console.log(message)
      }
    })
  },
})

export default
connect(mapStateToProps, mapDispatchToProps)(
  wrap(mapFunToComponent)(Order)
)
         
 
 
 
 qiche/containers/orderDetails.js 
 
// import React from 'react'
import { connect } from 'react-redux'
// import { browserHistory } from 'react-router'
import { Modal } from 'antd-mobile'
import { send } from '@boluome/common-lib'
import { wrap }    from '@boluome/oto_saas_web_app_component'
import { afterOrdering } from 'business'
import { odlReset } from '../actions/orderDetails.js'
import OrderDetails from '../components/orderDetails'

const alert = Modal.alert
const showAlert = f => {
  alert('', '目前仅支持全部车票退票，请确认', [
    {
      text:    '我意已决',
      onPress: () => {
        f()
      },
    },
    {
      text:    '考虑以下',
      onPress: () => {
        console.log('0.0')
      },
    },
  ])
}

const mapStateToProps = ({ orderDetails }) => ({ ...orderDetails })

const mapDispatchToProps = dispatch => {
  return {
    dispatch,

    handleBool: bool => {
      dispatch(odlReset({
        bool,
      }))
    },

    handleTui: (id, partnerId) => {
      showAlert(() => {
        send('/qiche/v1/refund/apply', {
          channel: 'tongcheng',
          id,
          partnerId,
        })
        .then(({ code, data, message }) => {
          if (code === 0) {
            console.log(data)
          } else {
            console.log(message)
          }
        })
      })
    },

    goPay: orderNo => {
      afterOrdering({ id: orderNo })
    },
  }
}

const mapFunToComponent  = (dispatch, state) => ({
  componentWillMount: () => {
    const { routeParams } = state
    const { orderNo } = routeParams
    dispatch(odlReset({
      orderNo,
    }))
  },
})

export default
connect(mapStateToProps, mapDispatchToProps)(
  wrap(mapFunToComponent)(OrderDetails)
)
         
 
 
 
 qiche/index.js 
 
import React        from 'react'
import { createStore, applyMiddleware } from 'redux'
import { render }   from 'react-dom'
import { Provider } from 'react-redux'
import thunk        from 'redux-thunk'
import reducers     from './reducers'
import Routes       from './routes'

// 定义根组件
const Root  = () => (
  <Provider store={ createStore(reducers, applyMiddleware(thunk)) }>
    <Routes />
  </Provider>
)
render(<Root />, document.querySelector('#root'))
         
 
 
 
 qiche/reducers/air.js 
 
import { mergeState, getStore } from '@boluome/common-lib'

const initialState = {
  date:    getStore('date', 'session'),
  botShow: true,
}

const air = (state = initialState, action) => {
  switch (action.type) {
    case 'AIR_INIT':
      return initialState
    case 'AIR_RESET':
      return mergeState(state, action)
    default: return state
  }
}

export default air
         
 
 
 
 qiche/reducers/app.js 
 
import { mergeState } from '@boluome/common-lib'

const d = new Date()
const dstr = d.toLocaleDateString()
const initialState = {
  fromCity: '太仓',
  toCity:   '北京',
  date:     dstr.replace(/\//g, '-'),
}

const app = (state = initialState, action) => {
  switch (action.type) {
    case 'ADD_RESET':
      return mergeState(state, action)
    default: return state
  }
}

export default app
         
 
 
 
 qiche/reducers/index.js 
 
import { combineReducers } from 'redux'
// 引入reducers
import app  from './app'
import air  from './air'
import order  from './order'
import orderDetails  from './orderDetails'
// 组合reducers
export default combineReducers({
  app, air, order, orderDetails,
})
         
 
 
 
 qiche/reducers/order.js 
 
import { mergeState, getStore } from '@boluome/common-lib'

const initialState = {
  contactorName:  '',
  contactorPhone: getStore('userPhone', 'session') || '',
  bool:           false,
  invoiceData:    '',
}

const order = (state = initialState, action) => {
  switch (action.type) {
    case 'ORD_RESET':
      return mergeState(state, action)
    case 'ORD_INIT':
      return initialState
    default: return state
  }
}

export default order
         
 
 
 
 qiche/reducers/orderDetails.js 
 
import { mergeState } from '@boluome/common-lib'

const initialState = {
}

const orderDetails = (state = initialState, action) => {
  switch (action.type) {
    case 'ODL_RESET':
      return mergeState(state, action)
    case 'ODL_INIT':
      return initialState
    default: return state
  }
}

export default orderDetails
         
 
 
 
 qiche/routes.js 
 
import React from 'react'
import { Router, Route, browserHistory, IndexRoute } from 'react-router'
// 路由配置
const Routes = () => (
  <Router history={ browserHistory } >
    <Route path='/qiche' component={ require('react-router?name=root!./components/root') } >
      <IndexRoute component={ require('react-router?name=app!./containers/app') } />
      <Route path='air' component={ require('react-router?name=air!./containers/air') } />
      <Route path='order' component={ require('react-router?name=order!./containers/order') } />
      <Route path='orderDetails/:orderNo' component={ require('react-router?name=orderDetails!./containers/orderDetails') } />
    </Route>
  </Router>
)
export default Routes
         
 
 
 
 qiche/style/air.scss 
 
*{margin: 0;padding: 0;}
@mixin all_center($row: center) {
  display: flex;
  display: -webkit-flex;
  align-items: center;
  -webkit-align-items: center;
  justify-content: $row;
  -webkit-justify-content: $row;
}
@mixin ell() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.air{
  width: 100%;
  height: 100%;
  overflow: hidden;
  background: #f5f5f6;
  position: relative;
  .station{
    margin-top: 0.2rem;
    padding: 0.25rem 0.3rem;
    @include all_center(space-between);
    background: #fff;
    span{
      font-size: 0.24rem;
      &:nth-child(1){
        @include ell();
        display: inline-block;
        color: #9d9d9d;
        width: calc(100% - 1.5rem);
        img{
          width: 0.25rem;
          height: 0.3rem;
          margin-right: 0.1rem;
          float: left;
        }
        i{
          font-style: normal;
          color: #333333;
        }
      }
      &:nth-child(2){
        display: inline-block;
        width: 1.5rem;
        color: #ffab00;
        text-align: right;
      }
    }
  }
  .airdate{
    width: 100%;
    height: 100%;
    padding: 0 0.3rem;
    box-sizing: border-box;
    @include all_center(space-between);
    font-size: 0.28rem;
    .now_date{
      @include all_center(none);
      padding: 0.1rem;
      border-radius: 0.05rem;
      color: #ffffff;
      background:#ffab00;
    }
    .pre_date, .next_date{
      color: #333333;
      @include all_center(none);
      p{
        min-width: 1rem;
      }
    }
    .next_date p{
      text-align: right;
    }
  }
  .qctop{
    background:#ffffff;
    width: 100%;
    height: 1.3rem;
  }
  .selectAir{
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    @include all_center(space-around);
    background-color: rgba(79, 83, 91, 0.9);
    height: 1rem;
    transition: all 0.3s ease 0s;
    p{
      @include all_center(none);
      flex-direction: column;
      -webkit-flex-direction: column;
      color: #ffffff;
      font-size: 0.24rem;
      line-height: 1.5;
      span{
        display: inline-block;
        width: 0.35rem;
        height: 0.35rem;
        img{
          width: 100%;
          height: 100%;
        }
      }
    }
  }
  .qclistWarp{
    width: 100%;
    height: calc( 100% - 1.3rem );
    position: relative;
    .qclistw{
      overflow: auto;
      height: 100%;
      padding-bottom: 1rem;
    }
  }
  .qc_list{
    padding: 0.2rem 0.3rem;
    margin-top: 0.2rem;
    background: #ffffff;
    h3{
      display: inline-block;
      width: 1.5rem;
      font-size: 0.36rem;
      color: #333333;
      float: left;
    }
    >div{
      display: inline-block;
      width: calc(100% - 1.5rem);
      p{
        @include all_center(space-between);
        &:nth-child(2){
          margin: 0.06rem 0;
        }
        span{
          &:nth-child(1){
            @include ell();
            display: inline-block;
            font-size: 0.24rem;
            color: #333333;
            width: calc(100% - 1.2rem);
          }
          &:nth-child(2){
            display: inline-block;
            width: 1.2rem;
            font-size: 0.36rem;
            color: #ff4848;
            text-align: right;
          }
        }
        .shizhong{
          display: inline-block;
          vertical-align: middle;
          background: #ff4848;
          border-radius: .06rem;
          width: .32rem;
          height: .32rem;
          font-size: .2rem;
          color: #fff;
          line-height: .32rem;
          text-align: center;
          margin-right: .1rem;
          float: left;
          font-style: normal;
        }
      }
      .type{
        span{
          &:nth-child(1){
            color: #999999;
          }
          &:nth-child(2){
            font-size: 0.28rem;
            color: #ffab00;
          }
        }
      }
    }
  }
}
.filterWrap{
  width: 100%;
  position: absolute;
  bottom: 0;
  left: 0;
  h3{
    background: #ffab00;
    height: 0.88rem;
    font-size: 0.28rem;
    @include all_center(space-between);
    padding: 0 0.3rem;
    color: #ffffff;
    span{
      display: flex;
      display: -webkit-flex;
      align-items: center;
      -webkit-align-items: center;
    }
    .am-icon-md{
      width: 0.28rem;
      height: 0.28rem;
      margin-right: 0.1rem;
    }
  }
  .chooseWarp{
    padding: 0 0.3rem 0.15rem;
    background: #ffffff;
    box-sizing: border-box;
    max-height: 8rem;
    overflow: auto;
    h4{
      font-size: 0.24rem;
      color: #999999;
      box-sizing: border-box;
      border-top: 1px solid #e5e5e5;
      padding: 0.15rem 0;
      margin-top: 0.15rem;
      width: 100%;
      &:first-child{
        border: none;
        margin-top: 0.05rem;
        padding: 0.3rem 0 0.15rem;
        margin-top: 0;
      }
    }
    p{
      display: inline-block;
      width: 50%;
      font-size: 0.28rem;
      color:#333333;
      margin: 0.15rem 0;
      span{
        display: inline-block;
        box-sizing: border-box;
        width: 0.3rem;
        height: 0.3rem;
        float: left;
        border: 1px solid #aaaaaa;
        border-radius: 0.05rem;
        margin-right: 0.3rem;
        position: relative;
        top: 0.05rem;
      }
      .am-icon-md{
        width: 0.3rem;
        height: 0.3rem;
      }
    }
    .choose{
      color: #ffab00;
      span{
        background: #ffab00;
        border: none;
      }
    }
  }
}

.empShop{
  width: 100%;
  height: 100%;
  position: relative;
  >div{
    display: inline-block;
    position: absolute;
    left: 50%;
    top: 40%;
    transform: translateX(-50%) translateY(-50%);
    -webkit-transform:translateX(-50%) translateY(-50%);
    text-align: center;
    img{
      width: 2.5rem;
      height: 2.5rem;
    }
    p{
      margin-top: 0.2rem;
      font-size: 0.28rem;
      line-height: 1.5;
      color:#999999;
    }
  }
}
.am-modal-button-group-v .am-modal-button{
  color: #ffab00;
}
.filterwrap{
  width: 100%;
  height: 100%;
  position: relative;
  background:rgba(0, 0, 0, 0.5);
  .filterlist{
    width: 100%;
    background: #ffffff;
    position: absolute;
    left: 0;
    bottom: 0;
    .filterli{
      font-size: 0.28rem;
      color: #333333;
      padding: 0.25rem 0.3rem;
      border-bottom: 1px solid #e5e5e5;
      @include all_center(space-between);
    }
  }
}
.slide-page-container.info{
  background: none;
}
         
 
 
 
 qiche/style/app.scss 
 
*{margin: 0;padding: 0}
.app{
  width: 100%;
  height: 100%;
  .addrtime{
    background: #ffffff;
    padding: 0.3rem 0.35rem;
    color: #333333;
    font-size: 0.28rem;
    p{
      display: inline-block;
      width: 50%;
    }
    span{
      display: inline-block;
      width: 50%;
      text-align: right;
    }
  }
  .addrcity{
    display: flex;
    display: -webkit-flex;
    align-items: center;
    -webkit-align-items: center;
    justify-content: space-between;
    -webkit-justify-content: space-between;
    font-size: 0.36rem;
    background: #ffffff;
    >div{
      width: calc(50% - 0.6rem);
      text-align: center;
      padding: 0.25rem 0.3rem;
      border-bottom: 1px solid #e5e5e5;
      p{
        &:first-child{
          font-size: 0.24rem;
          color: #999999;
          margin-bottom: 0.15rem;
        }
      }
    }
    .am-icon{
      width: 0.6rem;
      height: 0.6rem;
    }
  }
  .btn{
    height: 1.9rem;
    text-align: center;
    padding: 0.5rem 0.3rem;
    box-sizing: border-box;
    span{
      display: inline-block;
      height: 0.9rem;
      line-height: 0.9rem;
      width: 100%;
      background: #ffab00;
      font-size:0.38rem;
      color: #ffffff;
      border-radius: 0.06rem;
    }
  }
  fieldset{
  	width: 3rem;
  	margin: 0.5rem auto 0.3rem;
  	padding: 0 0.4rem;
  	box-sizing: border-box;
  	border-color: #adadad;
    border-top: 1px solid #adadad;
  	border-left: none;
  	border-right: none;
  	border-bottom: none;
    legend{
    	text-align:center;
    	color:#adadad;
    	font-size: 0.28rem;
    	padding: 0 0.1rem;
      background: #F5F5F6
    }
  }
  .locainfo{
    list-style: none;
    color:#adadad;
    li{
      font-size: 0.28rem;
      text-align: center;
      margin: 0 0 0.2rem;
      white-space: nowrap;
      span{
        display: inline-block;
        width: calc( 50% - 0.25rem);
        &:first-child{
          text-align: right;
        }
        &:nth-child(2){
          width: 0.5rem;
        }
        &:last-child{
          text-align: left;
        }
      }
    }
  }
  .clear-locainfo{
    font-size: 0.28rem;
    color:#666666;
    text-align: center;
    margin-top: 0.2rem;
  }
}
         
 
 
 
 qiche/style/order.scss 
 
*{margin: 0;padding: 0}
@mixin all_center($row: center) {
  display: flex;
  display: -webkit-flex;
  align-items: center;
  -webkit-align-items: center;
  justify-content: $row;
  -webkit-justify-content: $row;
}

.order{
  width: 100%;
  height: 100%;
  background: #f5f5f6;
  .wxtip{
    font-size: 0.24rem;
    color: #999999;
    padding: 0 0.3rem;
    line-height: 1.4;
  }
  .ordermain{
    height: calc(100% - 1rem);
    overflow: auto;
  }
  .orderbottom{
    height: 1rem;
    display: flex;
    display: -webkit-flex;
    .orderPrice{
      background:#ffffff;
      display: inline-block;
      width: calc(100% - 2rem);
      height: 100%;
      padding: 0 0.3rem;
      display: flex;
      display: -webkit-flex;
      align-items: center;
      -webkit-align-items: center;
      justify-content: space-between;
      -webkit-justify-content: space-between;
      >div{
        p{
          &:last-child{
            font-size: 0.24rem;
            color: #999999;
          }
          &:first-child{
            font-size: 0.28rem;
            color: #ff4848;
            margin-bottom: 0.05rem;
          }
        }
      }
      >p{
        display: flex;
        display: -webkit-flex;
        align-items: center;
        -webkit-align-items: center;
        font-size: 0.24rem;
        color: #ffab00;
        .am-icon{
          width: 0.2rem;
          height: 0.2rem;
          margin-left: 0.08rem;
        }
      }
    }
    .orderbtn{
      display: inline-block;
      width: 2rem;
      height: 100%;
      line-height: 1rem;
      text-align: center;
      font-size: 0.36rem;
      color: #ffffff;
      background:#ffab00;
    }
  }
  .detailCart{
    .qctit{
      padding: 0.2rem 0.3rem;
      background: #ffffff;
      @include all_center(space-between);
      span{
        font-size: 0.26rem;
        &:nth-child(1){
          color: #333333;
        }
        &:nth-child(2){
          color: #ffab00;
          @include all_center(none);
          .am-icon-md{
            width: 0.33rem;
            height: 0.33rem;
            margin-right: 0.1rem;
          }
        }
      }
    }
    .cart_main{
      padding: 0.3rem;
      background: #fbf4e8;
      @include all_center(space-around);
      >div{
        display: inline-block;
        width: calc(50% - 0.9rem);
        color:#333333;
        text-align: center;
        h3{
          font-size: 0.4rem;
          margin: 0.1rem 0;
        }
        p{
          font-size: 0.2rem;
        }
        &:first-child{
          text-align: left;
        }
        &:last-child{
          text-align: right;
        }
      }
      .cart_mainmid{
        width: 1.8rem;
        p{
          font-size: 0.2rem;
          color: #333333;
          &:nth-child(2){
            width: 1.4rem;
            color:#939393;
            margin: 0.2rem;
            width: calc(100% - 0.8rem);
            margin: 0.2rem 0.4rem;
            border: 1px dashed;
            position: relative;
            &:before{
              content: '';
              display: inline-block;
              position: absolute;
              top: -0.07rem;
              left: -0.3rem;
              width: 0.15rem;
              height: 0.15rem;
              border-radius: 50%;
              background: #6d6d6d;
            }
            &:after{
              content: '';
              display: inline-block;
              position: absolute;
              top: -0.07rem;
              right: -0.3rem;
              width: 0.15rem;
              height: 0.15rem;
              border-radius: 50%;
              background: #6d6d6d;
            }
          }
        }
      }
    }
    >p{
      font-size: 0.2rem;
      color: #999999;
      padding: 0.3rem 0.3rem 0;
    }
  }
  .pricing_show{
    background: #ffffff;
    width: 100%;
    height: 0.9rem;
    line-height: 0.9rem;
    padding: 0 0.3rem;
    box-sizing: border-box;
    font-size: 0.25rem;
    color: #333333;
    border-top: 1px solid #e5e5e5;
    display: flex;
    display: -webkit-flex;
    align-items: center;
    -webkit-align-items: center;
    justify-content: space-between;
    -webkit-justify-content: space-between;
    span{
      &:last-child{
        color:#ffab00;
      }
    }
  }
  // 乘客信息
  .passenger{
    h3{
      padding: 0.25rem 0.3rem;
      font-size: 0.24rem;
      color: #999999;
      font-weight: 400;
      background: #fff;
      border-bottom: 1px solid #e5e5e5;
      @include all_center(space-around);
      p{
        width: calc(100% - 0.45rem);
        display: inline-block;
      }
      span{
        font-size: 0.28rem;
        color: #333333;
        margin-right: 0.1rem;
      }
      img{
        float: left;
        width: 0.34rem;
        height: 0.28rem;
        margin-right: 0.1rem;
      }
    }
  }
  // .add_passenger{
  //   background:#ffffff;
  //   height: 0.9rem;
  //   line-height: 0.9rem;
  //   font-size: 0.32rem;
  //   color: #ffa100;
  //   text-align: center;
  //   border-top: 1px solid #e5e5e5;
  // }
  .passenger_list{
    height: 1.3rem;
    display: flex;
    display: -webkit-flex;
    align-items: center;
    -webkit-align-items: center;
    border-top: 1px solid #e5e5e5;
    background: #ffffff;
    .passenger_icon,.passenger_jump,.passenger_delet{
      width: 1rem;
      overflow: hidden;
      display: flex;
      display: -webkit-flex;
      align-items: center;
      -webkit-align-items: center;
      justify-content: space-around;
      -webkit-justify-content: space-around;
      transition: width 0.3s ease 0s;
    }
    .passenger_jump{
      font-size: 0.24rem;
      width: 1.5rem;
      color: #ffa100;
    }
    .passenger_delet{
      height: 100%;
      font-size: 0.3rem;
      color: #ffffff;
      background: #fb4c4d;
      span{
        display: inline-block;
        white-space: nowrap;
      }
    }
    .passenger_main{
      flex: auto;
      -webkit-flex: auto;
      font-size: 0.24rem;
      color: #999999;
      transition: all 0.3s ease 0s;
      p{
        line-height: 1.5;
      }
      span{
        font-size: 0.28rem;
        color: #333333;
        margin-right: 0.2rem;
      }
    }
  }
  .jisu{
    @include all_center(space-around);
    >div{
      width: calc(100% - 1.5rem)
    }
    >p{
      width: 1.5rem;
    }
  }
  // .baoxianShow{
  //   display: flex;
  //   display: -webkit-flex;
  //   align-items: center;
  //   -webkit-align-items: center;
  //   justify-content: space-between;
  //   -webkit-justify-content: space-between;
  //   padding: 0.3rem;
  //   background: #ffffff;
  //   p{
  //     font-size: 0.28rem;
  //     color: #333333;
  //     line-height: 1.5;
  //     span{
  //       font-size: 0.28rem;
  //       color: #999999;
  //       margin-left: 0.5rem;
  //       i{
  //         font-style: normal;
  //         color: #ff4848;
  //       }
  //     }
  //   }
  // }
  .am-list-item .am-input-label, .am-list-item .am-input-control input{
    font-size: 0.28rem;
    color:#333333;
  }
}
// 发票
.billinfo{
  width: 100%;
  font-size: 0.28rem;
  color:#333333;
  >span{
    display: inline-block;
    width: 1.71rem;
    vertical-align: top;
  }
  >div{
    display: inline-block;
    width: calc(100% - 1.6rem);
    p{
      overflow: hidden;
      text-overflow: ellipsis;
    }
    .addrinfo p{
      white-space: normal;
      margin-bottom: 0.1rem;
      span{
        margin-left: 0.2rem;
      }
    }
  }
}

// 保险
.baoxian{
  width: 100%;
  height: 100%;
  .baoxian_main{
    background: #ffffff;
    .baoxian_list{
      @include all_center(space-between);
      border-bottom: 1px solid #e5e5e5;
      padding: 0.3rem;
      >div{
        p{
          &:nth-child(1){
            font-size: 0.28rem;
            color: #333333;
            margin-bottom: 0.1rem;
          }
          &:nth-child(2){
            font-size: 0.24rem;
            color: #999999;
          }
        }
      }
    }
  }
}
.am-list-item .am-list-line .am-list-content, .am-list-item .am-list-line .am-list-extra{
  padding-top: 0.24rem;
  padding-bottom: 0.24rem;
}
.pridetail{
  width: 100%;
  height: 100%;
  padding: 1.2rem 1rem 0;
  background: #ffffff;
  overflow: auto;
  box-sizing: border-box;
  fieldset{
  	box-sizing: border-box;
  	border-color: #adadad;
    border-top: 2px solid #e5e5e5;
  	border-left: none;
  	border-right: none;
  	border-bottom: none;
    legend{
    	text-align:center;
    	color:#333333;
    	font-size: 0.32rem;
    	padding: 0 0.3rem;
      background: #ffffff;
    }
  }
  h2{
    font-size: 0.36rem;
    color: #ffab00;
    padding: 0.5rem;
    text-align: center;
  }
  .main_pri, .add_pri, .cup_pri{
    padding: 0.5rem 0;
    border-bottom: 1px solid #e5e5e5;
    p{
      display: flex;
      display: -webkit-flex;
      align-items: center;
      -webkit-align-items: center;
      justify-content: space-between;
      -webkit-justify-content: space-between;
      font-size: 0.28rem;
      padding: 0.1rem 0;
      span{
        color: #333333;
        &:last-child{
          color: #ff4848;
          i{
            color: #999999;
            font-style: normal;
          }
        }
      }
    }
  }
  .closebtn{
    p{
      text-align: center;
      margin: 1rem 0;
    }
    .am-icon{
      width: 0.8rem;
      height: 0.8rem;
    }
  }
}
.baoxianinfo{
  width: 100%;
  height: 100%;
  padding: 1.2rem 0.4rem 0;
  background: #ffffff;
  overflow: auto;
  box-sizing: border-box;
  h3{
    font-size: 0.32rem;
    color: #222222;
    text-align: center;
    margin-bottom: 0.45rem;
  }
  .bxif{
    p{
      font-size: 0.28rem;
      color: #999999;
      margin-bottom: 0.3rem;
    }
  }
  .closebtn{
    p{
      text-align: center;
      margin: 1rem 0;
    }
    .am-icon{
      width: 0.8rem;
      height: 0.8rem;
    }
  }
}
.gou_detail{
  background: #fff;
  padding: 0.3rem;
  overflow: auto;
  height: 100%;
  h2{
    font-size: 0.28rem;
    color: #333333;
    margin: 0.2rem 0;
  }
  p{
    font-size: 0.26rem;
    color: #666666;
    line-height: 1.5;
  }
}

.contact-list .listItem .iconBtn_l{
  display: none !important;
}
.am-modal-button-group-v .am-modal-button{
  color: #ffab00;
}
.am-modal-button-group-h .am-modal-button{
  color: #ffab00;
}
         
 
 
 
 qiche/style/orderDetails.scss 
 
*{margin: 0;padding: 0}
@mixin all_center($row: center) {
  display: flex;
  display: -webkit-flex;
  align-items: center;
  -webkit-align-items: center;
  justify-content: $row;
  -webkit-justify-content: $row;
}

.orderDetails{
  width: 100%;
  height: 100%;
  .seat_tui{
    font-size: 0.28rem;
    color: #333333;
    padding: 0.2rem 0.3rem;
    background: #fff;
    @include all_center(space-between);
    span{
      &:last-child{
        font-size: 0.24rem;
        color: #999999;
        display: inline-block;
        padding: 0.05rem 0.1rem;
        border: 1px solid #999999;
        border-radius: 4px;
      }
    }
  }
  .jianhui{
    display: inline-block;
    vertical-align: middle;
    background: #ff4848;
    border-radius: .06rem;
    width: .32rem;
    height: .32rem;
    font-size: .2rem;
    color: #fff;
    line-height: .32rem;
    text-align: center;
    margin-right: .1rem;
    float: left;
  }
  .odlcenter{
    width: 100%;
    padding-bottom: 2rem;
  }
  .tgTip{
    background: #ffffff;
    height: 0.9rem;
    line-height: 0.9rem;
    font-size: 0.28rem;
    color: #ffab00;
    padding:  0 0.3rem;
    box-sizing: border-box;
    border-top: 1px solid #e5e5e5;
    border-bottom: 1px solid #e5e5e5;
  }
  .numpri{
    font-size: 0.28rem;
    color: #ff4848;
  }
  .realsubpri{
    position: relative;
    .am-icon-md{
      width: 0.38rem;
      height: 0.38rem;
      position: absolute;
      top: -0.02rem;
      right: 0;
    }
  }
  .am-list-item .am-list-line .am-list-content{
    font-size:0.28rem;
    color:#333333;
    i{
      font-style:normal;
      font-size:0.26rem;
      color:#999999;
    }
  }
  .am-list-item .am-list-line .am-list-extra{
    font-size:0.28rem;
    color:#333333;
  }
  .am-list-item .am-input-control input, .am-list-item .am-input-label{
    font-size:0.28rem;
    color:#333333;
  }
  .s-promotion {
    margin-bottom: 1.5rem;
  }
}

.am-modal-button-group-h .am-modal-button{
  color: #ffab00;
}
// 乘客信息
.passenger{
  background: #fff;
  padding: 0 0 0 0.3rem;
  font-size: 0.28rem;
  color: #333333;
  border-bottom: 1px solid #e5e5e5;
  h3{
    font-size: 0.28rem;
    color: #333333;
    padding: 0.3rem 0.3rem 0.3rem 0;
    border-bottom: 1px solid #e5e5e5;
  }
  .ps_list{
    @include all_center(space-between);
    border-bottom: 1px solid #e5e5e5;
    padding: 0.3rem 0.3rem 0.3rem 0;
    >div{
      p{
        &:nth-child(1){
          margin-bottom: 0.15rem;
          color: #999999;
          span{
            color: #333333;
          }
        }
        // &:nth-child(2){
        //   font-size: 0.24rem;
        //   color: #999999;
        // }
        span{
          margin-right: 0.3rem;
        }
      }
    }
    >p{
      display: inline-block;
      color: #fff;
      background: #ffab00;
      border-radius: 4px;
      padding: 0.05rem 0.1rem;
    }
    &:last-child{
      border: none;
    }
  }
}
.passengerbt{
  padding: 0.3rem;
  background: #fff;
  font-size: 0.28rem;
  color: #333333;
  span{
    margin-right: 0.3rem;
  }
}
// 保险
.baoxian{
  width: 100%;
  height: 100%;
  .baoxian_main{
    background: #ffffff;
    .baoxian_list{
      @include all_center(space-between);
      border-bottom: 1px solid #e5e5e5;
      padding: 0.3rem;
      >div{
        p{
          &:nth-child(1){
            font-size: 0.28rem;
            color: #333333;
            margin-bottom: 0.1rem;
          }
          &:nth-child(2){
            font-size: 0.24rem;
            color: #999999;
          }
        }
      }
    }
    .ps_list{
      @include all_center(space-between);
      border-bottom: 1px solid #e5e5e5;
      padding: 0.3rem;
      >div{
        font-size: 0.26rem;
        p{
          &:nth-child(1){
            color: #333333;
            margin-bottom: 0.1rem;
          }
          span{
            &:nth-child(1){
              color: #999999;
              margin-right: 0.2rem;
            }
          }
        }
      }
      >p{
        display: inline-block;
        border-radius: 4px;
        // border: 1px solid;
        padding: 0.05rem 0.1rem;
        font-size: 0.2rem;
      }
    }
  }
}
// 切换
.switch{
  background: #fff;
  >p{
    padding: 0.15rem 0.3rem;
    font-size: 0.28rem;
    color: #333333;
    span{
      box-sizing: border-box;
      display: inline-block;
      width: 50%;
      padding: 0.15rem;
      text-align: center;
      &:first-child{
        border-right: 1px solid #f0f0f0;
      }
    }
  }
  .switch_c{
    font-size: 0.24rem;
    padding: 0.3rem;
    color: #666666;
    div{
      p{
        span{
          margin-right: 0.2rem;
        }
        &:first-child{
          margin-bottom: 0.2rem;
        }
      }
    }
  }
}
// 车次详情
.detailCart{
  .qctit{
    padding: 0.2rem 0.3rem;
    background: #ffffff;
    @include all_center(space-between);
    span{
      font-size: 0.26rem;
      &:nth-child(1){
        color: #333333;
      }
      &:nth-child(2){
        color: #ffab00;
        @include all_center(none);
        .am-icon-md{
          width: 0.33rem;
          height: 0.33rem;
          margin-right: 0.1rem;
        }
      }
    }
  }
  .cart_main{
    padding: 0.3rem;
    background: #fbf4e8;
    @include all_center(space-around);
    >div{
      display: inline-block;
      width: calc(50% - 0.9rem);
      color:#333333;
      text-align: center;
      h3{
        font-size: 0.4rem;
        margin: 0.1rem 0;
      }
      p{
        font-size: 0.2rem;
      }
      &:first-child{
        text-align: left;
      }
      &:last-child{
        text-align: right;
      }
    }
    .cart_mainmid{
      width: 1.8rem;
      p{
        font-size: 0.2rem;
        color: #333333;
        &:nth-child(2){
          width: 1.4rem;
          color:#939393;
          margin: 0.2rem;
          width: calc(100% - 0.8rem);
          margin: 0.2rem 0.4rem;
          border: 1px dashed;
          position: relative;
          &:before{
            content: '';
            display: inline-block;
            position: absolute;
            top: -0.07rem;
            left: -0.3rem;
            width: 0.15rem;
            height: 0.15rem;
            border-radius: 50%;
            background: #6d6d6d;
          }
          &:after{
            content: '';
            display: inline-block;
            position: absolute;
            top: -0.07rem;
            right: -0.3rem;
            width: 0.15rem;
            height: 0.15rem;
            border-radius: 50%;
            background: #6d6d6d;
          }
        }
      }
    }
  }
  >p{
    font-size: 0.2rem;
    color: #999999;
    padding: 0.3rem 0.3rem 0;
  }
}
// 快递配送
.discontact{
  >h3{
    border-top: 1px solid #e5e5e5;
    padding: 0.2rem 0.3rem;
    font-size: 0.28rem;
    color: #333333;
    background: #ffffff;
    font-weight: 300;
  }
  .nocant{
    border-top: 1px solid #e5e5e5;
    border-bottom: 1px solid #e5e5e5;
    background: #ffffff;
    padding: 0.2rem 0.3rem;
    h3{
      float: left;
      line-height: 1.5;
      font-size: 0.28rem;
      color: #333333;
      font-weight: 300;
    }
    >div{
      display: table;
    }
    p{
      font-size: 0.28rem;
      color: #666666;
      line-height: 1.5;
      .am-icon-md{
        margin-right: 0.2rem;
      }
      i{
        font-style: normal;
        margin: 0 0.5rem 0 0.3rem;
      }
      span{
        display: inline-block;
        margin-left: 0.5rem;
        font-size: 0.2rem;
        color:#ffab00;
        padding: 0.05rem 0.1rem;
        background:#fff3db;
        border-radius: 0.04rem;
        border: 1px solid #ffab00;
      }
    }
    .addr{
      font-size: 0.24rem;
      color: #999999;
      margin: 0.1rem 0;
    }
  }
}
// 上门自取
.smzq{
  border-top: 1px solid #e5e5e5;
  border-bottom: 1px solid #e5e5e5;
  background: #ffffff;
  padding: 0.2rem 0.3rem;
  p{
    margin: 0.2rem 0;
    font-size: 0.28rem;
    color: #333333;
  }
  i{
    font-style: normal;
    float: left;
  }
  span{
    display: table;
  }
}
// 提示
.infotip{
  font-size: 0.24rem;
  color: #999999;
  padding: 0 0.3rem;
}
// 购票提示
.gou_detail{
  background: #fff;
  padding: 0.3rem;
  overflow: auto;
  height: 100%;
  h2{
    font-size: 0.28rem;
    color: #333333;
    margin: 0.2rem 0;
  }
  p{
    font-size: 0.26rem;
    color: #666666;
    line-height: 1.5;
  }
}
